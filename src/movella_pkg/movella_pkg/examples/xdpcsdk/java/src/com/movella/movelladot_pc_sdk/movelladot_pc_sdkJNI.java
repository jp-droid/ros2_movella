
//  Copyright (c) 2003-2023 Movella Technologies B.V. or subsidiaries worldwide.
//  All rights reserved.
//  
//  Redistribution and use in source and binary forms, with or without modification,
//  are permitted provided that the following conditions are met:
//  
//  1.	Redistributions of source code must retain the above copyright notice,
//  	this list of conditions and the following disclaimer.
//  
//  2.	Redistributions in binary form must reproduce the above copyright notice,
//  	this list of conditions and the following disclaimer in the documentation
//  	and/or other materials provided with the distribution.
//  
//  3.	Neither the names of the copyright holders nor the names of their contributors
//  	may be used to endorse or promote products derived from this software without
//  	specific prior written permission.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
//  THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
//  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY OR
//  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.movella.movelladot_pc_sdk;

public class movelladot_pc_sdkJNI {
  public final static native int THREAD_PRIORITY_IDLE_get();
  public final static native int THREAD_PRIORITY_LOWEST_get();
  public final static native int THREAD_PRIORITY_BELOW_NORMAL_get();
  public final static native int THREAD_PRIORITY_NORMAL_get();
  public final static native int THREAD_PRIORITY_ABOVE_NORMAL_get();
  public final static native int THREAD_PRIORITY_HIGHEST_get();
  public final static native int THREAD_PRIORITY_TIME_CRITICAL_get();
  public final static native String __LOC___get();
  public final static native int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_get();
  public final static native String XSENS_PFSHARED_get();
  public final static native String XSENS_PFPRE_get();
  public final static native String XSENS_PFBITS_get();
  public final static native int QT_NO_DEBUG_get();
  public final static native String XSENS_PFCONF_get();
  public final static native String XSENS_PFFULL_get();
  public final static native int XSREAL_ALLOWS_MEMCPY_get();
  public final static native int XSDF_None_get();
  public final static native int XSDF_Managed_get();
  public final static native int XSDF_FixedSize_get();
  public final static native int XSDF_Empty_get();
  public final static native int XSDF_BadAlloc_get();
  public final static native boolean xorBool(boolean jarg1, boolean jarg2);
  public final static native String toXsString(int jarg1);
  public final static native long new_XsArrayDescriptor();
  public final static native void delete_XsArrayDescriptor(long jarg1);
  public final static native long XsArray_m_data_get(long jarg1, XsArray jarg1_);
  public final static native long XsArray_m_size_get(long jarg1, XsArray jarg1_);
  public final static native long XsArray_m_reserved_get(long jarg1, XsArray jarg1_);
  public final static native long XsArray_m_flags_get(long jarg1, XsArray jarg1_);
  public final static native long XsArray_m_descriptor_get(long jarg1, XsArray jarg1_);
  public final static native void delete_XsArray(long jarg1);
  public final static native long new_XsStringImpl__SWIG_0(long jarg1, String jarg2);
  public final static native long new_XsStringImpl__SWIG_1(long jarg1);
  public final static native long new_XsStringImpl__SWIG_2();
  public final static native long new_XsStringImpl__SWIG_3(long jarg1, XsStringImpl jarg1_);
  public final static native long new_XsStringImpl__SWIG_4(String jarg1, long jarg2, int jarg3);
  public final static native void delete_XsStringImpl(long jarg1);
  public final static native void XsStringImpl_clear(long jarg1, XsStringImpl jarg1_);
  public final static native void XsStringImpl_reserve(long jarg1, XsStringImpl jarg1_, long jarg2);
  public final static native long XsStringImpl_reserved(long jarg1, XsStringImpl jarg1_);
  public final static native long XsStringImpl_descriptor(long jarg1, XsStringImpl jarg1_);
  public final static native char XsStringImpl_value(long jarg1, XsStringImpl jarg1_, long jarg2);
  public final static native char XsStringImpl_first(long jarg1, XsStringImpl jarg1_);
  public final static native char XsStringImpl_last(long jarg1, XsStringImpl jarg1_);
  public final static native char XsStringImpl_at__SWIG_0(long jarg1, XsStringImpl jarg1_, long jarg2);
  public final static native void XsStringImpl_insert__SWIG_0(long jarg1, XsStringImpl jarg1_, char jarg2, long jarg3);
  public final static native void XsStringImpl_insert__SWIG_1(long jarg1, XsStringImpl jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void XsStringImpl_pop_back__SWIG_0(long jarg1, XsStringImpl jarg1_, long jarg2);
  public final static native void XsStringImpl_pop_back__SWIG_1(long jarg1, XsStringImpl jarg1_);
  public final static native void XsStringImpl_push_front(long jarg1, XsStringImpl jarg1_, char jarg2);
  public final static native void XsStringImpl_pop_front__SWIG_0(long jarg1, XsStringImpl jarg1_, long jarg2);
  public final static native void XsStringImpl_pop_front__SWIG_1(long jarg1, XsStringImpl jarg1_);
  public final static native long XsStringImpl_size(long jarg1, XsStringImpl jarg1_);
  public final static native void XsStringImpl_erase__SWIG_0(long jarg1, XsStringImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsStringImpl_erase__SWIG_1(long jarg1, XsStringImpl jarg1_, long jarg2);
  public final static native void XsStringImpl_assign(long jarg1, XsStringImpl jarg1_, long jarg2, String jarg3);
  public final static native void XsStringImpl_resize(long jarg1, XsStringImpl jarg1_, long jarg2);
  public final static native void XsStringImpl_setSize(long jarg1, XsStringImpl jarg1_, long jarg2);
  public final static native void XsStringImpl_append(long jarg1, XsStringImpl jarg1_, long jarg2, XsStringImpl jarg2_);
  public final static native boolean XsStringImpl_empty(long jarg1, XsStringImpl jarg1_);
  public final static native boolean XsStringImpl_badAlloc(long jarg1, XsStringImpl jarg1_);
  public final static native void XsStringImpl_swap__SWIG_0(long jarg1, XsStringImpl jarg1_, long jarg2, XsStringImpl jarg2_);
  public final static native void XsStringImpl_swap__SWIG_1(long jarg1, XsStringImpl jarg1_, long jarg2, long jarg3);
  public final static native long XsStringImpl_find(long jarg1, XsStringImpl jarg1_, char jarg2);
  public final static native boolean XsStringImpl_contains(long jarg1, XsStringImpl jarg1_, char jarg2);
  public final static native void XsStringImpl_removeDuplicates(long jarg1, XsStringImpl jarg1_);
  public final static native void XsStringImpl_removeDuplicatesPredicate(long jarg1, XsStringImpl jarg1_, long jarg2);
  public final static native void XsStringImpl_sort(long jarg1, XsStringImpl jarg1_);
  public final static native void XsStringImpl_reverse(long jarg1, XsStringImpl jarg1_);
  public final static native long g_xsStringDescriptor_get();
  public final static native long new_XsString__SWIG_0(long jarg1, String jarg2);
  public final static native long new_XsString__SWIG_1(long jarg1);
  public final static native long new_XsString__SWIG_2();
  public final static native long new_XsString__SWIG_3(long jarg1, XsString jarg1_);
  public final static native long new_XsString__SWIG_4(String jarg1, long jarg2, int jarg3);
  public final static native long new_XsString__SWIG_5(String jarg1);
  public final static native long new_XsString__SWIG_6(long jarg1);
  public final static native long new_XsString__SWIG_8(long jarg1);
  public final static native String XsString_c_str__SWIG_0(long jarg1, XsString jarg1_);
  public final static native String XsString_toString(long jarg1, XsString jarg1_);
  public final static native long XsString_toStdWString(long jarg1, XsString jarg1_);
  public final static native boolean XsString_empty(long jarg1, XsString jarg1_);
  public final static native void XsString_append__SWIG_0(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_);
  public final static native void XsString_append__SWIG_1(long jarg1, XsString jarg1_, String jarg2);
  public final static native void XsString_append__SWIG_2(long jarg1, XsString jarg1_, long jarg2);
  public final static native long XsString_utf8Len(long jarg1, XsString jarg1_);
  public final static native boolean XsString_endsWith__SWIG_0(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_, boolean jarg3);
  public final static native boolean XsString_endsWith__SWIG_1(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsString_startsWith__SWIG_0(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_, boolean jarg3);
  public final static native boolean XsString_startsWith__SWIG_1(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsString_contains__SWIG_0(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_, boolean jarg3, long jarg4);
  public final static native boolean XsString_contains__SWIG_1(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_, boolean jarg3);
  public final static native boolean XsString_contains__SWIG_2(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_);
  public final static native long XsString_utf8At(long jarg1, XsString jarg1_, long jarg2);
  public final static native void XsString_sort(long jarg1, XsString jarg1_);
  public final static native void XsString_reverse(long jarg1, XsString jarg1_);
  public final static native long XsString_findSubStr(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_);
  public final static native long XsString_mid(long jarg1, XsString jarg1_, long jarg2, long jarg3);
  public final static native void XsString_replaceAll(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_, long jarg3, XsString jarg3_);
  public final static native long XsString_replacedAll(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_, long jarg3, XsString jarg3_);
  public final static native void XsString_trim(long jarg1, XsString jarg1_);
  public final static native long XsString_trimmed(long jarg1, XsString jarg1_);
  public final static native char XsString_last(long jarg1, XsString jarg1_);
  public final static native void XsString_toLower(long jarg1, XsString jarg1_);
  public final static native void XsString_toUpper(long jarg1, XsString jarg1_);
  public final static native long XsString_lowered(long jarg1, XsString jarg1_);
  public final static native long XsString_uppered(long jarg1, XsString jarg1_);
  public final static native void delete_XsString(long jarg1);
  public final static native int XHI_LeftHand_get();
  public final static native int XHI_RightHand_get();
  public final static native int XS_IND_PREAMBLE_get();
  public final static native int XS_IND_BID_get();
  public final static native int XS_IND_MID_get();
  public final static native int XS_IND_LEN_get();
  public final static native int XS_IND_DATA0_get();
  public final static native int XS_IND_LENEXTH_get();
  public final static native int XS_IND_LENEXTL_get();
  public final static native int XS_IND_DATAEXT0_get();
  public final static native int XS_SELFTEST_OK_get();
  public final static native int XS_LEN_TRANSPORTMODE_get();
  public final static native int XS_LEN_DEVICEID_get();
  public final static native int XS_LEN_INITBUSRESULTS_get();
  public final static native int XS_LEN_PERIOD_get();
  public final static native int XS_LEN_BUSPWR_get();
  public final static native int XS_LEN_DATALENGTH_get();
  public final static native int XS_LEN_CONFIGURATION_get();
  public final static native int XS_LEN_FIRMWAREREV_get();
  public final static native int XS_LEN_BTDISABLE_get();
  public final static native int XS_LEN_OPMODE_get();
  public final static native int XS_LEN_BAUDRATE_get();
  public final static native int XS_LEN_SYNCMODE_get();
  public final static native int XS_LEN_PRODUCTCODE_get();
  public final static native int XS_LEN_PROCESSINGFLAGS_get();
  public final static native int XS_LEN_XMPWROFF_get();
  public final static native int XS_LEN_OUTPUTMODE_get();
  public final static native int XS_LEN_OUTPUTSETTINGS_get();
  public final static native int XS_LEN_OUTPUTSKIPFACTOR_get();
  public final static native int XS_LEN_SYNCINMODE_get();
  public final static native int XS_LEN_SYNCINSKIPFACTOR_get();
  public final static native int XS_LEN_SYNCINOFFSET_get();
  public final static native int XS_LEN_SYNCOUTMODE_get();
  public final static native int XS_LEN_SYNCOUTSKIPFACTOR_get();
  public final static native int XS_LEN_SYNCOUTOFFSET_get();
  public final static native int XS_LEN_SYNCOUTPULSEWIDTH_get();
  public final static native int XS_LEN_ERRORMODE_get();
  public final static native int XS_LEN_TRANSMITDELAY_get();
  public final static native int XS_LEN_OBJECTALIGNMENT_get();
  public final static native int XS_LEN_ALIGNMENTROTATION_get();
  public final static native int XS_LEN_XMERRORMODE_get();
  public final static native int XS_LEN_BUFFERSIZE_get();
  public final static native int XS_LEN_HEADING_get();
  public final static native int XS_LEN_MAGNETICFIELD_get();
  public final static native int XS_LEN_LOCATIONID_get();
  public final static native int XS_LEN_EXTOUTPUTMODE_get();
  public final static native int XS_LEN_INITTRACKMODE_get();
  public final static native int XS_LEN_STOREFILTERSTATE_get();
  public final static native int XS_LEN_UTCTIME_get();
  public final static native int XS_LEN_FILTERPROFILELABEL_get();
  public final static native int XS_LEN_FILTERPROFILEFULL_get();
  public final static native int XS_LEN_REQFILTERPROFILEACK_get();
  public final static native int XS_LEN_SETFILTERPROFILE_get();
  public final static native int XS_LEN_GRAVITYMAGNITUDE_get();
  public final static native int XS_LEN_GPSLEVERARM_get();
  public final static native int XS_LEN_LATLONALT_get();
  public final static native int XS_LEN_SETNOROTATION_get();
  public final static native int XS_LEN_FILTERSETTINGS_get();
  public final static native int XS_LEN_AMD_get();
  public final static native int XS_LEN_RESETORIENTATION_get();
  public final static native int XS_LEN_GPSSTATUS_get();
  public final static native int XS_LEN_CLIENTUSAGE_get();
  public final static native int XS_LEN_CLIENTPRIORITY_get();
  public final static native int XS_LEN_WIRELESSCONFIG_get();
  public final static native int XS_LEN_INFOREQUEST_get();
  public final static native int XS_LEN_SETOUTPUTTRIGGER_get();
  public final static native int XS_LEN_SETINPUTTRIGGER_get();
  public final static native int XS_LEN_RAWDATA_get();
  public final static native int XS_LEN_CALIBDATA_get();
  public final static native int XS_LEN_CALIB_ACCDATA_get();
  public final static native int XS_LEN_CALIB_GYRDATA_get();
  public final static native int XS_LEN_CALIB_MAGDATA_get();
  public final static native int XS_LEN_ORIENT_QUATDATA_get();
  public final static native int XS_LEN_ORIENT_EULERDATA_get();
  public final static native int XS_LEN_ORIENT_MATRIXSTA_get();
  public final static native int XS_LEN_SAMPLECNT_get();
  public final static native int XS_LEN_TEMPDATA_get();
  public final static native int XS_LEN_CALIBDATA_FLT_get();
  public final static native int XS_LEN_TEMPDATA_FLT_get();
  public final static native int XS_LEN_ORIENT_QUATDATA_FLT_get();
  public final static native int XS_LEN_ORIENT_EULERDATA_FLT_get();
  public final static native int XS_LEN_ORIENT_MATRIXSTA_FLT_get();
  public final static native int XS_INVALIDSETTINGVALUE_get();
  public final static native int XS_CONF_MASTERDID_get();
  public final static native int XS_CONF_PERIOD_get();
  public final static native int XS_CONF_OUTPUTSKIPFACTOR_get();
  public final static native int XS_CONF_SYNCIN_MODE_get();
  public final static native int XS_CONF_SYNCIN_SKIPFACTOR_get();
  public final static native int XS_CONF_SYNCIN_OFFSET_get();
  public final static native int XS_CONF_DATE_get();
  public final static native int XS_CONF_TIME_get();
  public final static native int XS_CONF_NUMDEVICES_get();
  public final static native int XS_CONF_DID_get();
  public final static native int XS_CONF_DATALENGTH_get();
  public final static native int XS_CONF_OUTPUTMODE_get();
  public final static native int XS_CONF_OUTPUTSETTINGS_get();
  public final static native int XS_CONF_BLOCKLEN_get();
  public final static native int XS_CONF_MASTERDIDLEN_get();
  public final static native int XS_CONF_PERIODLEN_get();
  public final static native int XS_CONF_OUTPUTSKIPFACTORLEN_get();
  public final static native int XS_CONF_SYNCIN_MODELEN_get();
  public final static native int XS_CONF_SYNCIN_SKIPFACTORLEN_get();
  public final static native int XS_CONF_SYNCIN_OFFSETLEN_get();
  public final static native int XS_CONF_DATELEN_get();
  public final static native int XS_CONF_TIMELEN_get();
  public final static native int XS_CONF_RESERVED_CLIENTLEN_get();
  public final static native int XS_CONF_RESERVED_HOSTLEN_get();
  public final static native int XS_CONF_NUMDEVICESLEN_get();
  public final static native int XS_CONF_DIDLEN_get();
  public final static native int XS_CONF_DATALENGTHLEN_get();
  public final static native int XS_CONF_OUTPUTMODELEN_get();
  public final static native int XS_CONF_OUTPUTSETTINGSLEN_get();
  public final static native double XS_SYNC_CLOCKFREQMHZ_get();
  public final static native double XS_SYNC_CLOCK_NS_TO_TICKS_get();
  public final static native double XS_SYNC_CLOCK_TICKS_TO_NS_get();
  public final static native double XS_SYNC_CLOCK_US_TO_TICKS_get();
  public final static native double XS_SYNC_CLOCK_TICKS_TO_US_get();
  public final static native int XS_PARAM_SYNCIN_MODE_get();
  public final static native int XS_PARAM_SYNCIN_SKIPFACTOR_get();
  public final static native int XS_PARAM_SYNCIN_OFFSET_get();
  public final static native int XS_SYNCIN_DISABLED_get();
  public final static native int XS_SYNCIN_EDGE_RISING_get();
  public final static native int XS_SYNCIN_EDGE_FALLING_get();
  public final static native int XS_SYNCIN_EDGE_BOTH_get();
  public final static native int XS_SYNCIN_EDGE_MASK_get();
  public final static native int XS_SYNCIN_TYPE_DOSAMPLING_get();
  public final static native int XS_SYNCIN_TYPE_SENDLASTDATA_get();
  public final static native int XS_SYNCIN_TYPE_CLOCK_get();
  public final static native int XS_SYNCIN_TYPE_MASK_get();
  public final static native int XS_PARAM_SYNCOUT_MODE_get();
  public final static native int XS_PARAM_SYNCOUT_SKIPFACTOR_get();
  public final static native int XS_PARAM_SYNCOUT_OFFSET_get();
  public final static native int XS_PARAM_SYNCOUT_PULSEWIDTH_get();
  public final static native int XS_SYNCOUT_DISABLED_get();
  public final static native int XS_SYNCOUT_TYPE_TOGGLE_get();
  public final static native int XS_SYNCOUT_TYPE_PULSE_get();
  public final static native int XS_SYNCOUT_POL_NEG_get();
  public final static native int XS_SYNCOUT_POL_POS_get();
  public final static native int XS_SYNCOUT_TYPE_MASK_get();
  public final static native int XS_SYNCOUT_POL_MASK_get();
  public final static native int XS_INITTRACKMODE_DISABLED_get();
  public final static native int XS_INITTRACKMODE_ENABLED_get();
  public final static native int XS_PARAM_FILTER_GAIN_get();
  public final static native int XS_PARAM_FILTER_RHO_get();
  public final static native int XS_DONOTSTORE_get();
  public final static native int XS_STORE_get();
  public final static native int XS_AMDSETTING_DISABLED_get();
  public final static native int XS_AMDSETTING_ENABLED_get();
  public final static native int XS_PARAM_ROTSENSOR_get();
  public final static native int XS_PARAM_ROTLOCAL_get();
  public final static native int XS_SENDRAWSTRING_INIT_get();
  public final static native int XS_SENDRAWSTRING_DEFAULT_get();
  public final static native int XS_SENDRAWSTRING_SEND_get();
  public final static native int XS_TO_DEFAULT_get();
  public final static native int XS_TO_INIT_get();
  public final static native int XS_TO_RETRY_get();
  public final static native int XS_PERIOD_10HZ_get();
  public final static native int XS_PERIOD_12HZ_get();
  public final static native int XS_PERIOD_15HZ_get();
  public final static native int XS_PERIOD_16HZ_get();
  public final static native int XS_PERIOD_18HZ_get();
  public final static native int XS_PERIOD_20HZ_get();
  public final static native int XS_PERIOD_24HZ_get();
  public final static native int XS_PERIOD_25HZ_get();
  public final static native int XS_PERIOD_30HZ_get();
  public final static native int XS_PERIOD_32HZ_get();
  public final static native int XS_PERIOD_36HZ_get();
  public final static native int XS_PERIOD_40HZ_get();
  public final static native int XS_PERIOD_45HZ_get();
  public final static native int XS_PERIOD_48HZ_get();
  public final static native int XS_PERIOD_50HZ_get();
  public final static native int XS_PERIOD_60HZ_get();
  public final static native int XS_PERIOD_64HZ_get();
  public final static native int XS_PERIOD_72HZ_get();
  public final static native int XS_PERIOD_75HZ_get();
  public final static native int XS_PERIOD_80HZ_get();
  public final static native int XS_PERIOD_90HZ_get();
  public final static native int XS_PERIOD_96HZ_get();
  public final static native int XS_PERIOD_100HZ_get();
  public final static native int XS_PERIOD_120HZ_get();
  public final static native int XS_PERIOD_128HZ_get();
  public final static native int XS_PERIOD_144HZ_get();
  public final static native int XS_PERIOD_150HZ_get();
  public final static native int XS_PERIOD_160HZ_get();
  public final static native int XS_PERIOD_180HZ_get();
  public final static native int XS_PERIOD_192HZ_get();
  public final static native int XS_PERIOD_200HZ_get();
  public final static native int XS_PERIOD_225HZ_get();
  public final static native int XS_PERIOD_240HZ_get();
  public final static native int XS_PERIOD_256HZ_get();
  public final static native int XS_PERIOD_288HZ_get();
  public final static native int XS_PERIOD_300HZ_get();
  public final static native int XS_PERIOD_320HZ_get();
  public final static native int XS_PERIOD_360HZ_get();
  public final static native int XS_PERIOD_384HZ_get();
  public final static native int XS_PERIOD_400HZ_get();
  public final static native int XS_PERIOD_450HZ_get();
  public final static native int XS_PERIOD_480HZ_get();
  public final static native int XS_PERIOD_512HZ_get();
  public final static native int XS_PERIOD_576HZ_get();
  public final static native int XS_PERIOD_600HZ_get();
  public final static native int XS_PERIOD_640HZ_get();
  public final static native int XS_PERIOD_720HZ_get();
  public final static native int XS_PERIOD_768HZ_get();
  public final static native int XS_PERIOD_800HZ_get();
  public final static native int XS_PERIOD_900HZ_get();
  public final static native int XS_PERIOD_960HZ_get();
  public final static native int XS_PERIOD_1152HZ_get();
  public final static native int XS_PERIOD_1200HZ_get();
  public final static native int XS_PERIOD_1280HZ_get();
  public final static native int XS_PERIOD_1440HZ_get();
  public final static native int XS_PERIOD_1536HZ_get();
  public final static native int XS_PERIOD_1600HZ_get();
  public final static native int XS_PERIOD_1800HZ_get();
  public final static native int XS_PERIOD_1920HZ_get();
  public final static native int XS_PERIOD_2304HZ_get();
  public final static native int XS_PERIOD_2400HZ_get();
  public final static native int XS_PERIOD_2560HZ_get();
  public final static native int XS_PERIOD_2880HZ_get();
  public final static native int XS_PERIOD_3200HZ_get();
  public final static native int XS_PERIOD_3600HZ_get();
  public final static native int XS_PERIOD_3840HZ_get();
  public final static native int XS_PERIOD_4608HZ_get();
  public final static native int XS_PERIOD_4800HZ_get();
  public final static native int XS_PERIOD_5760HZ_get();
  public final static native int XS_PERIOD_6400HZ_get();
  public final static native int XS_PERIOD_7200HZ_get();
  public final static native int XS_PERIOD_7680HZ_get();
  public final static native int XS_PERIOD_9600HZ_get();
  public final static native int XS_PERIOD_11520HZ_get();
  public final static native int XSDEVICEID_PRODUCT_CODE_LEN_get();
  public final static native String XSDEVICEID_PRODUCT_CODE_INIT_get();
  public final static native long new_XsDeviceId__SWIG_0(String jarg1, int jarg2, long jarg3, java.math.BigInteger jarg4, int jarg5);
  public final static native long new_XsDeviceId__SWIG_1(String jarg1, int jarg2, long jarg3, java.math.BigInteger jarg4);
  public final static native long new_XsDeviceId__SWIG_2(java.math.BigInteger jarg1);
  public final static native long new_XsDeviceId__SWIG_3();
  public final static native long new_XsDeviceId__SWIG_4(long jarg1, XsDeviceId jarg1_, int jarg2);
  public final static native long new_XsDeviceId__SWIG_5(long jarg1, XsDeviceId jarg1_);
  public final static native java.math.BigInteger XsDeviceId_legacyBit();
  public final static native boolean XsDeviceId_isLegacyDeviceId(long jarg1, XsDeviceId jarg1_);
  public final static native java.math.BigInteger XsDeviceId_toInt(long jarg1, XsDeviceId jarg1_);
  public final static native long XsDeviceId_productCode(long jarg1, XsDeviceId jarg1_);
  public final static native long XsDeviceId_productVariant(long jarg1, XsDeviceId jarg1_);
  public final static native int XsDeviceId_hardwareVersion(long jarg1, XsDeviceId jarg1_);
  public final static native int XsDeviceId_subDevice(long jarg1, XsDeviceId jarg1_);
  public final static native long XsDeviceId_legacyDeviceId(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtiX(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtiX0(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtiX00(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtigX00(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtigX10(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMti3X0(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMti6X0(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMti8X0(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isGlove(long jarg1, XsDeviceId jarg1_);
  public final static native int XsDeviceId_side(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isDot(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isRugged(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtw(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtw2(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtw2Obskur(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtx(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtx2(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isBodyPack(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isBodyPackV1(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isBodyPackV2(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isWirelessMaster(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isAwindaX(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isAwindaXStation(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isAwindaXDongle(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isAwindaXOem(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isAwinda2(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isAwinda2Station(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isAwinda2Dongle(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isAwinda2Oem(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isSyncStationX(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isSyncStation2(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isHilDevice(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isImu(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isVru(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isAhrs(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isGnss(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isRtk(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_hasInternalGnss(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isContainerDevice(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMt(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMti(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtig(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtMark4(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_isMtMark5(long jarg1, XsDeviceId jarg1_);
  public final static native long XsDeviceId_toXsString(long jarg1, XsDeviceId jarg1_);
  public final static native void XsDeviceId_fromString(long jarg1, XsDeviceId jarg1_, long jarg2, XsString jarg2_);
  public final static native long XsDeviceId_toDeviceTypeString__SWIG_0(long jarg1, XsDeviceId jarg1_, boolean jarg2);
  public final static native long XsDeviceId_toDeviceTypeString__SWIG_1(long jarg1, XsDeviceId jarg1_);
  public final static native void XsDeviceId_fromDeviceTypeString(long jarg1, XsDeviceId jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsDeviceId_isValid(long jarg1, XsDeviceId jarg1_);
  public final static native boolean XsDeviceId_contains(long jarg1, XsDeviceId jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native boolean XsDeviceId_isType(long jarg1, XsDeviceId jarg1_);
  public final static native long XsDeviceId_typeName(long jarg1, XsDeviceId jarg1_);
  public final static native long XsDeviceId_type(long jarg1, XsDeviceId jarg1_);
  public final static native long XsDeviceId_deviceType__SWIG_0(long jarg1, XsDeviceId jarg1_, boolean jarg2);
  public final static native long XsDeviceId_deviceType__SWIG_1(long jarg1, XsDeviceId jarg1_);
  public final static native long XsDeviceId_deviceTypeMask__SWIG_0(long jarg1, XsDeviceId jarg1_, boolean jarg2);
  public final static native long XsDeviceId_deviceTypeMask__SWIG_1(long jarg1, XsDeviceId jarg1_);
  public final static native int XsDeviceId_basePart(long jarg1, XsDeviceId jarg1_);
  public final static native void delete_XsDeviceId(long jarg1);
  public final static native String makeNiceProductCode__SWIG_0(String jarg1, int jarg2);
  public final static native String makeNiceProductCode__SWIG_1(String jarg1);
  public final static native String makeNiceProductCode__SWIG_2(long jarg1, int jarg2);
  public final static native String makeNiceProductCode__SWIG_3(long jarg1);
  public final static native int XRV_OK_get();
  public final static native int XRV_NOBUS_get();
  public final static native int XRV_BUSNOTREADY_get();
  public final static native int XRV_INVALIDPERIOD_get();
  public final static native int XRV_INVALIDMSG_get();
  public final static native int XRV_INITBUSFAIL1_get();
  public final static native int XRV_INITBUSFAIL2_get();
  public final static native int XRV_INITBUSFAIL3_get();
  public final static native int XRV_SETBIDFAIL1_get();
  public final static native int XRV_SETBIDFAIL2_get();
  public final static native int XRV_MEASUREMENTFAIL1_get();
  public final static native int XRV_MEASUREMENTFAIL2_get();
  public final static native int XRV_MEASUREMENTFAIL3_get();
  public final static native int XRV_MEASUREMENTFAIL4_get();
  public final static native int XRV_MEASUREMENTFAIL5_get();
  public final static native int XRV_MEASUREMENTFAIL6_get();
  public final static native int XRV_TIMEROVERFLOW_get();
  public final static native int XRV_BAUDRATEINVALID_get();
  public final static native int XRV_INVALIDPARAM_get();
  public final static native int XRV_MEASUREMENTFAIL7_get();
  public final static native int XRV_MEASUREMENTFAIL8_get();
  public final static native int XRV_WIRELESSFAIL_get();
  public final static native int XRV_DEVICEERROR_get();
  public final static native int XRV_DATAOVERFLOW_get();
  public final static native int XRV_BUFFEROVERFLOW_get();
  public final static native int XRV_EXTTRIGGERERROR_get();
  public final static native int XRV_SAMPLESTREAMERROR_get();
  public final static native int XRV_POWER_DIP_get();
  public final static native int XRV_POWER_OVERCURRENT_get();
  public final static native int XRV_OVERHEATING_get();
  public final static native int XRV_BATTERYLOW_get();
  public final static native int XRV_INVALIDFILTERPROFILE_get();
  public final static native int XRV_INVALIDSTOREDSETTINGS_get();
  public final static native int XRV_ACCESSDENIED_get();
  public final static native int XRV_FILEERROR_get();
  public final static native int XRV_OUTPUTCONFIGERROR_get();
  public final static native int XRV_FILE_SYSTEM_CORRUPT_get();
  public final static native int XRV_BATTERY_SYSTEM_ERROR_get();
  public final static native int XRV_ERROR_get();
  public final static native int XRV_NOTIMPLEMENTED_get();
  public final static native int XRV_TIMEOUT_get();
  public final static native int XRV_TIMEOUTNODATA_get();
  public final static native int XRV_CHECKSUMFAULT_get();
  public final static native int XRV_OUTOFMEMORY_get();
  public final static native int XRV_NOTFOUND_get();
  public final static native int XRV_UNEXPECTEDMSG_get();
  public final static native int XRV_INVALIDID_get();
  public final static native int XRV_INVALIDOPERATION_get();
  public final static native int XRV_INSUFFICIENTSPACE_get();
  public final static native int XRV_INPUTCANNOTBEOPENED_get();
  public final static native int XRV_OUTPUTCANNOTBEOPENED_get();
  public final static native int XRV_ALREADYOPEN_get();
  public final static native int XRV_ENDOFFILE_get();
  public final static native int XRV_COULDNOTREADSETTINGS_get();
  public final static native int XRV_NODATA_get();
  public final static native int XRV_READONLY_get();
  public final static native int XRV_NULLPTR_get();
  public final static native int XRV_INSUFFICIENTDATA_get();
  public final static native int XRV_BUSY_get();
  public final static native int XRV_INVALIDINSTANCE_get();
  public final static native int XRV_DATACORRUPT_get();
  public final static native int XRV_READINITFAILED_get();
  public final static native int XRV_NOXMFOUND_get();
  public final static native int XRV_DEVICECOUNTZERO_get();
  public final static native int XRV_MTLOCATIONINVALID_get();
  public final static native int XRV_INSUFFICIENTMTS_get();
  public final static native int XRV_INITFUSIONFAILED_get();
  public final static native int XRV_OTHER_get();
  public final static native int XRV_NOFILEOPEN_get();
  public final static native int XRV_NOPORTOPEN_get();
  public final static native int XRV_NOFILEORPORTOPEN_get();
  public final static native int XRV_PORTNOTFOUND_get();
  public final static native int XRV_INITPORTFAILED_get();
  public final static native int XRV_CALIBRATIONFAILED_get();
  public final static native int XRV_CONFIGCHECKFAIL_get();
  public final static native int XRV_ALREADYDONE_get();
  public final static native int XRV_SYNC_SINGLE_SLAVE_get();
  public final static native int XRV_SYNC_SECOND_MASTER_get();
  public final static native int XRV_SYNC_NO_SYNC_get();
  public final static native int XRV_SYNC_NO_MASTER_get();
  public final static native int XRV_SYNC_DATA_MISSING_get();
  public final static native int XRV_VERSION_TOO_LOW_get();
  public final static native int XRV_VERSION_PROBLEM_get();
  public final static native int XRV_ABORTED_get();
  public final static native int XRV_UNSUPPORTED_get();
  public final static native int XRV_PACKETCOUNTERMISSED_get();
  public final static native int XRV_MEASUREMENTFAILED_get();
  public final static native int XRV_STARTRECORDINGFAILED_get();
  public final static native int XRV_STOPRECORDINGFAILED_get();
  public final static native int XRV_RADIO_CHANNEL_IN_USE_get();
  public final static native int XRV_UNEXPECTED_DISCONNECT_get();
  public final static native int XRV_TOO_MANY_CONNECTED_TRACKERS_get();
  public final static native int XRV_GOTOCONFIGFAILED_get();
  public final static native int XRV_OUTOFRANGE_get();
  public final static native int XRV_BACKINRANGE_get();
  public final static native int XRV_EXPECTED_DISCONNECT_get();
  public final static native int XRV_RESTORE_COMMUNICATION_FAILED_get();
  public final static native int XRV_RESTORE_COMMUNICATION_STOPPED_get();
  public final static native int XRV_EXPECTED_CONNECT_get();
  public final static native int XRV_IN_USE_get();
  public final static native int XRV_PERFORMANCE_WARNING_get();
  public final static native int XRV_PERFORMANCE_OK_get();
  public final static native int XRV_DEVICEID_COLLISION_get();
  public final static native int XRV_SHUTTINGDOWN_get();
  public final static native int XRV_GNSSCONFIGURATIONERROR_get();
  public final static native int XRV_GNSSCOMMTIMEOUT_get();
  public final static native int XRV_GNSSERROR_get();
  public final static native int XRV_DEVICE_NOT_CALIBRATED_get();
  public final static native int XRV_GNSSCONNECTIONLOST_get();
  public final static native int XRV_GNSSLOWINPUTRATE_get();
  public final static native int XRV_GNSSINCOMPLETEDATASET_get();
  public final static native int XRV_BLUETOOTH_SCANNING_ERROR_get();
  public final static native int XRV_FLASH_PROCESS_BUSY_get();
  public final static native int XRV_FLASH_FULL_get();
  public final static native int XRV_INVALID_FLASHFORMAT_get();
  public final static native int XRV_SYNC_TOO_FEW_DEVICES_get();
  public final static native int XRV_SYNC_COULD_NOT_START_get();
  public final static native int XRV_SYNC_SETTINGS_MISMATCH_get();
  public final static native int XRV_SYNC_NO_START_ROOT_get();
  public final static native int XRV_SYNC_NO_START_SCANNER_get();
  public final static native int XRV_SYNC_NO_RECONNECT_get();
  public final static native int XRV_SYNC_FAILED_get();
  public final static native int XRV_SYNC_ROOT_NOT_FOUND_get();
  public final static native int XERR_Unknown_get();
  public final static native int XERR_ImcuTimeout_get();
  public final static native int XERR_ImcuSettingsInvalid_get();
  public final static native int XERR_ImcuSettingsFailure_get();
  public final static native int XERR_ImcuEmtsWriteFailure_get();
  public final static native int XERR_ImcuEmtsReadFailure_get();
  public final static native int XERR_DspCrashed_get();
  public final static native int XERR_DspBootingTimeout_get();
  public final static native int XERR_DspSettingsInvalid_get();
  public final static native String XsResultValueToString(int jarg1);
  public final static native int WANTXSMATH2_get();
  public final static native double XsMath_e_get();
  public final static native double XsMath_pi_get();
  public final static native double XsMath_tinyValue_get();
  public final static native double XsMath_hugeValue_get();
  public final static native double XsMath_epsilon_get();
  public final static native double XsMath_sqrtEpsilon_get();
  public final static native double XsMath_denormalized_get();
  public final static native double XsMath_sqrtDenormalized_get();
  public final static native double XsMath_rad2degValue_get();
  public final static native double XsMath_deg2radValue_get();
  public final static native double XsMath_zero_get();
  public final static native double XsMath_pt25_get();
  public final static native double XsMath_pt5_get();
  public final static native double XsMath_minusPt5_get();
  public final static native double XsMath_one_get();
  public final static native double XsMath_minusOne_get();
  public final static native double XsMath_two_get();
  public final static native double XsMath_four_get();
  public final static native double XsMath_minusTwo_get();
  public final static native double XsMath_minusHalfPi_get();
  public final static native double XsMath_halfPi_get();
  public final static native double XsMath_twoPi_get();
  public final static native double XsMath_sqrt2_get();
  public final static native double XsMath_sqrtHalf_get();
  public final static native double XsMath_infinity_get();
  public final static native double e_get();
  public final static native double pi_get();
  public final static native double tinyValue_get();
  public final static native double hugeValue_get();
  public final static native double epsilon_get();
  public final static native double sqrtEpsilon_get();
  public final static native double denormalized_get();
  public final static native double sqrtDenormalized_get();
  public final static native double rad2degValue_get();
  public final static native double deg2radValue_get();
  public final static native double zero_get();
  public final static native double pt25_get();
  public final static native double pt5_get();
  public final static native double minusPt5_get();
  public final static native double one_get();
  public final static native double minusOne_get();
  public final static native double two_get();
  public final static native double four_get();
  public final static native double minusTwo_get();
  public final static native double minusHalfPi_get();
  public final static native double halfPi_get();
  public final static native double twoPi_get();
  public final static native double sqrt2_get();
  public final static native double sqrtHalf_get();
  public final static native double infinity_get();
  public final static native double asinClamped(double jarg1);
  public final static native double rad2deg(double jarg1);
  public final static native double deg2rad(double jarg1);
  public final static native double pow2(double jarg1);
  public final static native double pow3(double jarg1);
  public final static native int doubleToLong(double jarg1);
  public final static native long doubleToInt64(double jarg1);
  public final static native long new_XsVector__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsVector__SWIG_1(long jarg1);
  public final static native long new_XsVector__SWIG_2();
  public final static native long new_XsVector__SWIG_3(long jarg1, XsVector jarg1_);
  public final static native long new_XsVector__SWIG_4(long jarg1, long jarg2, int jarg3);
  public final static native long new_XsVector__SWIG_5(long jarg1, long jarg2);
  public final static native long new_XsVector__SWIG_6(long jarg1, XsVector jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long new_XsVector__SWIG_7(long jarg1, XsVector jarg1_, long jarg2, long jarg3);
  public final static native long new_XsVector__SWIG_8(long jarg1, XsQuaternion jarg1_, double jarg2);
  public final static native void delete_XsVector(long jarg1);
  public final static native void XsVector_assign(long jarg1, XsVector jarg1_, long jarg2, long jarg3);
  public final static native void XsVector_setSize(long jarg1, XsVector jarg1_, long jarg2);
  public final static native long XsVector_size(long jarg1, XsVector jarg1_);
  public final static native long XsVector_data(long jarg1, XsVector jarg1_);
  public final static native long XsVector_at__SWIG_0(long jarg1, XsVector jarg1_, long jarg2);
  public final static native double XsVector_value(long jarg1, XsVector jarg1_, long jarg2);
  public final static native void XsVector_setValue(long jarg1, XsVector jarg1_, long jarg2, double jarg3);
  public final static native double XsVector_dotProduct(long jarg1, XsVector jarg1_, long jarg2, XsVector jarg2_);
  public final static native double XsVector_cartesianLength(long jarg1, XsVector jarg1_);
  public final static native void XsVector_normalize(long jarg1, XsVector jarg1_);
  public final static native void XsVector_setZero(long jarg1, XsVector jarg1_);
  public final static native boolean XsVector_empty(long jarg1, XsVector jarg1_);
  public final static native long XsVector_angularVelocityFromQuaternion(long jarg1, XsVector jarg1_, long jarg2, XsQuaternion jarg2_, double jarg3);
  public final static native boolean XsVector_isEqual(long jarg1, XsVector jarg1_, long jarg2, XsVector jarg2_, double jarg3);
  public final static native long XsVector_toVector(long jarg1, XsVector jarg1_);
  public final static native void XsVector_zero(long jarg1, XsVector jarg1_);
  public final static native void XsVector_fill(long jarg1, XsVector jarg1_, double jarg2);
  public final static native void XsVector_swap(long jarg1, XsVector jarg1_, long jarg2, XsVector jarg2_);
  public final static native void swap__SWIG_1(long jarg1, XsVector jarg1_, long jarg2, XsVector jarg2_);
  public final static native void XsVector_append(long jarg1, XsVector jarg1_, long jarg2, XsVector jarg2_);
  public final static native void XsVector_clear(long jarg1, XsVector jarg1_);
  public final static native void XsVector_reverse(long jarg1, XsVector jarg1_);
  public final static native long new_XsMatrix__SWIG_0(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long new_XsMatrix__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_XsMatrix__SWIG_2(long jarg1, long jarg2);
  public final static native long new_XsMatrix__SWIG_3(long jarg1);
  public final static native long new_XsMatrix__SWIG_4();
  public final static native long new_XsMatrix__SWIG_5(long jarg1, XsMatrix jarg1_);
  public final static native long new_XsMatrix__SWIG_6(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native long new_XsMatrix__SWIG_7(long jarg1, XsMatrix jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native long new_XsMatrix__SWIG_8(long jarg1, XsQuaternion jarg1_);
  public final static native void delete_XsMatrix(long jarg1);
  public final static native void XsMatrix_setSize__SWIG_0(long jarg1, XsMatrix jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsMatrix_setSize__SWIG_1(long jarg1, XsMatrix jarg1_, long jarg2, long jarg3);
  public final static native boolean XsMatrix_empty(long jarg1, XsMatrix jarg1_);
  public final static native void XsMatrix_setZero(long jarg1, XsMatrix jarg1_);
  public final static native long XsMatrix_offset(long jarg1, XsMatrix jarg1_, long jarg2, long jarg3);
  public final static native double XsMatrix_value(long jarg1, XsMatrix jarg1_, long jarg2, long jarg3);
  public final static native void XsMatrix_setValue(long jarg1, XsMatrix jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long XsMatrix_fromQuaternion(long jarg1, XsMatrix jarg1_, long jarg2, XsQuaternion jarg2_);
  public final static native void XsMatrix_zero(long jarg1, XsMatrix jarg1_);
  public final static native long XsMatrix_rows(long jarg1, XsMatrix jarg1_);
  public final static native long XsMatrix_cols(long jarg1, XsMatrix jarg1_);
  public final static native long XsMatrix_stride(long jarg1, XsMatrix jarg1_);
  public final static native long XsMatrix_data(long jarg1, XsMatrix jarg1_);
  public final static native boolean XsMatrix_isEqual(long jarg1, XsMatrix jarg1_, long jarg2, XsMatrix jarg2_, double jarg3);
  public final static native void XsMatrix_swap(long jarg1, XsMatrix jarg1_, long jarg2, XsMatrix jarg2_);
  public final static native void swap__SWIG_2(long jarg1, XsMatrix jarg1_, long jarg2, XsMatrix jarg2_);
  public final static native int XBC_4k8_get();
  public final static native int XBC_9k6_get();
  public final static native int XBC_14k4_get();
  public final static native int XBC_19k2_get();
  public final static native int XBC_28k8_get();
  public final static native int XBC_38k4_get();
  public final static native int XBC_57k6_get();
  public final static native int XBC_76k8_get();
  public final static native int XBC_115k2_get();
  public final static native int XBC_230k4_get();
  public final static native int XBC_460k8_get();
  public final static native int XBC_921k6_get();
  public final static native int XBC_921k6Legacy_get();
  public final static native int XBC_2MegaBaud_get();
  public final static native int XBC_3_5MegaBaud_get();
  public final static native int XBC_4MegaBaud_get();
  public final static native int XBC_Invalid_get();
  public final static native int XBR_Invalid_get();
  public final static native int XBR_4800_get();
  public final static native int XBR_9600_get();
  public final static native int XBR_14k4_get();
  public final static native int XBR_19k2_get();
  public final static native int XBR_28k8_get();
  public final static native int XBR_38k4_get();
  public final static native int XBR_57k6_get();
  public final static native int XBR_76k8_get();
  public final static native int XBR_115k2_get();
  public final static native int XBR_230k4_get();
  public final static native int XBR_460k8_get();
  public final static native int XBR_921k6_get();
  public final static native int XBR_2000k_get();
  public final static native int XBR_3500k_get();
  public final static native int XBR_4000k_get();
  public final static native int codeToRate(int jarg1);
  public final static native int rateToCode(int jarg1);
  public final static native int rateToNumeric(int jarg1);
  public final static native int numericToRate(int jarg1);
  public final static native int XSENS_VENDOR_ID_get();
  public final static native int FTDI_VENDOR_ID_get();
  public final static native int XPLO_Invalid_get();
  public final static native int XPLO_RTS_Set_get();
  public final static native int XPLO_RTS_Clear_get();
  public final static native int XPLO_RTS_Ignore_get();
  public final static native int XPLO_DTR_Set_get();
  public final static native int XPLO_DTR_Clear_get();
  public final static native int XPLO_DTR_Ignore_get();
  public final static native int XPLO_All_Set_get();
  public final static native int XPLO_All_Clear_get();
  public final static native int XPLO_All_Ignore_get();
  public final static native int XPLO_RtsCtsFlowControl_get();
  public final static native long new_XsPortInfo__SWIG_0();
  public final static native long new_XsPortInfo__SWIG_1(long jarg1, XsString jarg1_, int jarg2, int jarg3);
  public final static native long new_XsPortInfo__SWIG_2(long jarg1, XsString jarg1_, int jarg2);
  public final static native long new_XsPortInfo__SWIG_3(long jarg1, XsString jarg1_);
  public final static native void XsPortInfo_clear(long jarg1, XsPortInfo jarg1_);
  public final static native boolean XsPortInfo_empty(long jarg1, XsPortInfo jarg1_);
  public final static native int XsPortInfo_portNumber(long jarg1, XsPortInfo jarg1_);
  public final static native long XsPortInfo_portName(long jarg1, XsPortInfo jarg1_);
  public final static native String XsPortInfo_portName_c_str(long jarg1, XsPortInfo jarg1_);
  public final static native void XsPortInfo_setPortName(long jarg1, XsPortInfo jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsPortInfo_isUsb(long jarg1, XsPortInfo jarg1_);
  public final static native boolean XsPortInfo_isBluetooth(long jarg1, XsPortInfo jarg1_);
  public final static native boolean XsPortInfo_isNetwork(long jarg1, XsPortInfo jarg1_);
  public final static native long XsPortInfo_networkServiceName(long jarg1, XsPortInfo jarg1_);
  public final static native long XsPortInfo_bluetoothAddress(long jarg1, XsPortInfo jarg1_);
  public final static native int XsPortInfo_usbBus(long jarg1, XsPortInfo jarg1_);
  public final static native int XsPortInfo_usbAddress(long jarg1, XsPortInfo jarg1_);
  public final static native int XsPortInfo_baudrate(long jarg1, XsPortInfo jarg1_);
  public final static native void XsPortInfo_setBaudrate(long jarg1, XsPortInfo jarg1_, int jarg2);
  public final static native long XsPortInfo_deviceId(long jarg1, XsPortInfo jarg1_);
  public final static native void XsPortInfo_setDeviceId(long jarg1, XsPortInfo jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native int XsPortInfo_linesOptions(long jarg1, XsPortInfo jarg1_);
  public final static native void XsPortInfo_setLinesOptions(long jarg1, XsPortInfo jarg1_, int jarg2);
  public final static native void XsPortInfo_getVidPid(long jarg1, XsPortInfo jarg1_, long jarg2, long jarg3);
  public final static native void XsPortInfo_setVidPid(long jarg1, XsPortInfo jarg1_, int jarg2, int jarg3);
  public final static native void delete_XsPortInfo(long jarg1);
  public final static native long new_XsSimpleVersion__SWIG_0(int jarg1, int jarg2, int jarg3);
  public final static native long new_XsSimpleVersion__SWIG_1(int jarg1, int jarg2);
  public final static native long new_XsSimpleVersion__SWIG_2(int jarg1);
  public final static native long new_XsSimpleVersion__SWIG_3();
  public final static native long new_XsSimpleVersion__SWIG_4(long jarg1, XsSimpleVersion jarg1_);
  public final static native boolean XsSimpleVersion_empty(long jarg1, XsSimpleVersion jarg1_);
  public final static native int XsSimpleVersion_major(long jarg1, XsSimpleVersion jarg1_);
  public final static native int XsSimpleVersion_minor(long jarg1, XsSimpleVersion jarg1_);
  public final static native int XsSimpleVersion_revision(long jarg1, XsSimpleVersion jarg1_);
  public final static native long XsSimpleVersion_osVersion();
  public final static native void delete_XsSimpleVersion(long jarg1);
  public final static native long new_XsVersion__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, long jarg5, XsString jarg5_);
  public final static native long new_XsVersion__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, XsString jarg6_);
  public final static native long new_XsVersion__SWIG_2(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long new_XsVersion__SWIG_3(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native long new_XsVersion__SWIG_4(int jarg1, int jarg2, int jarg3);
  public final static native long new_XsVersion__SWIG_5(int jarg1, int jarg2);
  public final static native long new_XsVersion__SWIG_6(int jarg1);
  public final static native long new_XsVersion__SWIG_7();
  public final static native long new_XsVersion__SWIG_8(long jarg1, XsString jarg1_);
  public final static native long new_XsVersion__SWIG_9(long jarg1, XsSimpleVersion jarg1_);
  public final static native long new_XsVersion__SWIG_10(long jarg1, XsVersion jarg1_);
  public final static native boolean XsVersion_isEqual(long jarg1, XsVersion jarg1_, long jarg2, XsVersion jarg2_);
  public final static native boolean XsVersion_empty(long jarg1, XsVersion jarg1_);
  public final static native long XsVersion_toXsString(long jarg1, XsVersion jarg1_);
  public final static native long XsVersion_toSimpleString(long jarg1, XsVersion jarg1_);
  public final static native long XsVersion_toSimpleVersion(long jarg1, XsVersion jarg1_);
  public final static native int XsVersion_major(long jarg1, XsVersion jarg1_);
  public final static native int XsVersion_minor(long jarg1, XsVersion jarg1_);
  public final static native int XsVersion_revision(long jarg1, XsVersion jarg1_);
  public final static native int XsVersion_build(long jarg1, XsVersion jarg1_);
  public final static native int XsVersion_reposVersion(long jarg1, XsVersion jarg1_);
  public final static native long XsVersion_extra(long jarg1, XsVersion jarg1_);
  public final static native void XsVersion_setMajor(long jarg1, XsVersion jarg1_, int jarg2);
  public final static native void XsVersion_setMinor(long jarg1, XsVersion jarg1_, int jarg2);
  public final static native void XsVersion_setRevision(long jarg1, XsVersion jarg1_, int jarg2);
  public final static native void XsVersion_setBuild(long jarg1, XsVersion jarg1_, int jarg2);
  public final static native void XsVersion_setReposVersion(long jarg1, XsVersion jarg1_, int jarg2);
  public final static native void XsVersion_setExtra(long jarg1, XsVersion jarg1_, long jarg2, XsString jarg2_);
  public final static native void delete_XsVersion(long jarg1);
  public final static native long g_xsByteArrayDescriptor_get();
  public final static native long new_XsByteArray__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsByteArray__SWIG_1(long jarg1);
  public final static native long new_XsByteArray__SWIG_2();
  public final static native long new_XsByteArray__SWIG_3(long jarg1, XsByteArray jarg1_);
  public final static native long new_XsByteArray__SWIG_4(long jarg1, long jarg2, int jarg3);
  public final static native long new_XsByteArray__SWIG_5(long jarg1, XsString jarg1_);
  public final static native long XsByteArray_data__SWIG_0(long jarg1, XsByteArray jarg1_);
  public final static native long XsByteArray_toXsString(long jarg1, XsByteArray jarg1_);
  public final static native long XsByteArray_mid(long jarg1, XsByteArray jarg1_, long jarg2, long jarg3);
  public final static native void delete_XsByteArray(long jarg1);
  public final static native int XDI_None_get();
  public final static native int XDI_TypeMask_get();
  public final static native int XDI_FullTypeMask_get();
  public final static native int XDI_FullMask_get();
  public final static native int XDI_FormatMask_get();
  public final static native int XDI_DataFormatMask_get();
  public final static native int XDI_SubFormatMask_get();
  public final static native int XDI_SubFormatFloat_get();
  public final static native int XDI_SubFormatFp1220_get();
  public final static native int XDI_SubFormatFp1632_get();
  public final static native int XDI_SubFormatDouble_get();
  public final static native int XDI_SubFormatLeft_get();
  public final static native int XDI_SubFormatRight_get();
  public final static native int XDI_TemperatureGroup_get();
  public final static native int XDI_Temperature_get();
  public final static native int XDI_TimestampGroup_get();
  public final static native int XDI_UtcTime_get();
  public final static native int XDI_PacketCounter_get();
  public final static native int XDI_Itow_get();
  public final static native int XDI_GnssAge_get();
  public final static native int XDI_PressureAge_get();
  public final static native int XDI_SampleTimeFine_get();
  public final static native int XDI_SampleTimeCoarse_get();
  public final static native int XDI_FrameRange_get();
  public final static native int XDI_PacketCounter8_get();
  public final static native int XDI_SampleTime64_get();
  public final static native int XDI_PacketCounter32_get();
  public final static native int XDI_OrientationGroup_get();
  public final static native int XDI_CoordSysMask_get();
  public final static native int XDI_CoordSysEnu_get();
  public final static native int XDI_CoordSysNed_get();
  public final static native int XDI_CoordSysNwu_get();
  public final static native int XDI_Quaternion_get();
  public final static native int XDI_RotationMatrix_get();
  public final static native int XDI_EulerAngles_get();
  public final static native int XDI_PressureGroup_get();
  public final static native int XDI_BaroPressure_get();
  public final static native int XDI_AccelerationGroup_get();
  public final static native int XDI_DeltaV_get();
  public final static native int XDI_Acceleration_get();
  public final static native int XDI_FreeAcceleration_get();
  public final static native int XDI_AccelerationHR_get();
  public final static native int XDI_IndicationGroup_get();
  public final static native int XDI_TriggerIn1_get();
  public final static native int XDI_TriggerIn2_get();
  public final static native int XDI_TriggerIn3_get();
  public final static native int XDI_PositionGroup_get();
  public final static native int XDI_AltitudeMsl_get();
  public final static native int XDI_AltitudeEllipsoid_get();
  public final static native int XDI_PositionEcef_get();
  public final static native int XDI_LatLon_get();
  public final static native int XDI_GnssGroup_get();
  public final static native int XDI_GnssPvtData_get();
  public final static native int XDI_GnssSatInfo_get();
  public final static native int XDI_GnssPvtPulse_get();
  public final static native int XDI_AngularVelocityGroup_get();
  public final static native int XDI_RateOfTurn_get();
  public final static native int XDI_DeltaQ_get();
  public final static native int XDI_RateOfTurnHR_get();
  public final static native int XDI_RawSensorGroup_get();
  public final static native int XDI_RawUnsigned_get();
  public final static native int XDI_RawSigned_get();
  public final static native int XDI_RawAccGyrMagTemp_get();
  public final static native int XDI_RawGyroTemp_get();
  public final static native int XDI_RawAcc_get();
  public final static native int XDI_RawGyr_get();
  public final static native int XDI_RawMag_get();
  public final static native int XDI_RawDeltaQ_get();
  public final static native int XDI_RawDeltaV_get();
  public final static native int XDI_RawBlob_get();
  public final static native int XDI_AnalogInGroup_get();
  public final static native int XDI_AnalogIn1_get();
  public final static native int XDI_AnalogIn2_get();
  public final static native int XDI_MagneticGroup_get();
  public final static native int XDI_MagneticField_get();
  public final static native int XDI_MagneticFieldCorrected_get();
  public final static native int XDI_SnapshotGroup_get();
  public final static native int XDI_RetransmissionMask_get();
  public final static native int XDI_RetransmissionFlag_get();
  public final static native int XDI_AwindaSnapshot_get();
  public final static native int XDI_FullSnapshot_get();
  public final static native int XDI_GloveSnapshotLeft_get();
  public final static native int XDI_GloveSnapshotRight_get();
  public final static native int XDI_GloveDataGroup_get();
  public final static native int XDI_GloveDataLeft_get();
  public final static native int XDI_GloveDataRight_get();
  public final static native int XDI_VelocityGroup_get();
  public final static native int XDI_VelocityXYZ_get();
  public final static native int XDI_StatusGroup_get();
  public final static native int XDI_StatusByte_get();
  public final static native int XDI_StatusWord_get();
  public final static native int XDI_Rssi_get();
  public final static native int XDI_DeviceId_get();
  public final static native int XDI_LocationId_get();
  public final static native int XDI_MAX_FREQUENCY_VAL_get();
  public final static native int XDIV_MaxFrequency_get();
  public final static native int XMID_InvalidMessage_get();
  public final static native int XMID_ReqDid_get();
  public final static native int XMID_DeviceId_get();
  public final static native int XMID_Initbus_get();
  public final static native int XMID_InitBusResults_get();
  public final static native int XMID_ReqPeriod_get();
  public final static native int XMID_ReqPeriodAck_get();
  public final static native int XMID_SetPeriod_get();
  public final static native int XMID_SetPeriodAck_get();
  public final static native int XMID_SetBid_get();
  public final static native int XMID_SetBidAck_get();
  public final static native int XMID_AutoStart_get();
  public final static native int XMID_AutoStartAck_get();
  public final static native int XMID_BusPower_get();
  public final static native int XMID_BusPowerAck_get();
  public final static native int XMID_ReqDataLength_get();
  public final static native int XMID_DataLength_get();
  public final static native int XMID_ReqConfiguration_get();
  public final static native int XMID_Configuration_get();
  public final static native int XMID_RestoreFactoryDef_get();
  public final static native int XMID_RestoreFactoryDefAck_get();
  public final static native int XMID_GotoMeasurement_get();
  public final static native int XMID_GotoMeasurementAck_get();
  public final static native int XMID_ReqFirmwareRevision_get();
  public final static native int XMID_FirmwareRevision_get();
  public final static native int XMID_ReqUniqueId_get();
  public final static native int XMID_UniqueId_get();
  public final static native int XMID_ReqBodypackMode_get();
  public final static native int XMID_ReqBodypackAck_get();
  public final static native int XMID_SetBodypackMode_get();
  public final static native int XMID_SetBodypackModeAck_get();
  public final static native int XMID_ReqBaudrate_get();
  public final static native int XMID_ReqBaudrateAck_get();
  public final static native int XMID_SetBaudrate_get();
  public final static native int XMID_SetBaudrateAck_get();
  public final static native int XMID_ReqProductVariant_get();
  public final static native int XMID_ProductVariant_get();
  public final static native int XMID_ReqProductCode_get();
  public final static native int XMID_ProductCode_get();
  public final static native int XMID_ReqHardwareVersion_get();
  public final static native int XMID_HardwareVersion_get();
  public final static native int XMID_ReqProcessingFlags_get();
  public final static native int XMID_ReqProcessingFlagsAck_get();
  public final static native int XMID_SetProcessingFlags_get();
  public final static native int XMID_SetProcessingFlagsAck_get();
  public final static native int XMID_SetNoRotation_get();
  public final static native int XMID_SetNoRotationAck_get();
  public final static native int XMID_RunSelfTest_get();
  public final static native int XMID_SelfTestResults_get();
  public final static native int XMID_ReqInputTrigger_get();
  public final static native int XMID_ReqInputTriggerAck_get();
  public final static native int XMID_SetInputTrigger_get();
  public final static native int XMID_SetInputTriggerAck_get();
  public final static native int XMID_ReqOutputTrigger_get();
  public final static native int XMID_ReqOutputTriggerAck_get();
  public final static native int XMID_SetOutputTrigger_get();
  public final static native int XMID_SetOutputTriggerAck_get();
  public final static native int XMID_SetSyncStationMode_get();
  public final static native int XMID_SetSyncStationModeAck_get();
  public final static native int XMID_ReqSyncStationMode_get();
  public final static native int XMID_ReqSyncStationModeAck_get();
  public final static native int XMID_SetSyncConfiguration_get();
  public final static native int XMID_SetSyncConfigurationAck_get();
  public final static native int XMID_ReqSyncConfiguration_get();
  public final static native int XMID_SyncConfiguration_get();
  public final static native int XMID_DriverDisconnect_get();
  public final static native int XMID_DriverDisconnectAck_get();
  public final static native int XMID_GotoConfig_get();
  public final static native int XMID_GotoConfigAck_get();
  public final static native int XMID_MtData_get();
  public final static native int XMID_BusData_get();
  public final static native int XMID_PrepareData_get();
  public final static native int XMID_ReqData_get();
  public final static native int XMID_ReqDataAck_get();
  public final static native int XMID_MtData2_get();
  public final static native int XMID_MtData2Ack_get();
  public final static native int XMID_RequestControl_get();
  public final static native int XMID_RequestControlAck_get();
  public final static native int XMID_SetDataPort_get();
  public final static native int XMID_SetDataPortAck_get();
  public final static native int XMID_ReqRetransmission_get();
  public final static native int XMID_ReqRetransmissionAck_get();
  public final static native int XMID_Wakeup_get();
  public final static native int XMID_WakeupAck_get();
  public final static native int XMID_Reset_get();
  public final static native int XMID_ResetAck_get();
  public final static native int XMID_Error_get();
  public final static native int XMID_Warning_get();
  public final static native int XMID_XmPowerOff_get();
  public final static native int XMID_MasterIndication_get();
  public final static native int XMID_XsbData_get();
  public final static native int XMID_ReqOptionFlags_get();
  public final static native int XMID_ReqOptionFlagsAck_get();
  public final static native int XMID_SetOptionFlags_get();
  public final static native int XMID_SetOptionFlagsAck_get();
  public final static native int XMID_ReqStealthMode_get();
  public final static native int XMID_StealthMode_get();
  public final static native int XMID_SetStealthMode_get();
  public final static native int XMID_SetStealthModeAck_get();
  public final static native int XMID_UserInterface_get();
  public final static native int XMID_UserInterfaceAck_get();
  public final static native int XMID_EndOfRecording_get();
  public final static native int XMID_EndOfRecordingAck_get();
  public final static native int XMID_GotoTransparentMode_get();
  public final static native int XMID_GotoTransparentModeAck_get();
  public final static native int XMID_ReqDeviceCapabilities_get();
  public final static native int XMID_DeviceCapabilities_get();
  public final static native int XMID_DiscardRetransmissions_get();
  public final static native int XMID_DiscardRetransmissionsAck_get();
  public final static native int XMID_RunFactoryTest_get();
  public final static native int XMID_FactoryTestResults_get();
  public final static native int XMID_FactoryTestConnect_get();
  public final static native int XMID_FactoryTestConnectAck_get();
  public final static native int XMID_SetDataOutputDelay_get();
  public final static native int XMID_SetDataOutputDelayAck_get();
  public final static native int XMID_SetBodypackConfigFile_get();
  public final static native int XMID_SetBodypackConfigFileAck_get();
  public final static native int XMID_ReqObrStatus_get();
  public final static native int XMID_ObrStatus_get();
  public final static native int XMID_SetUtcTime_get();
  public final static native int XMID_ReqUtcTime_get();
  public final static native int XMID_SetUtcTimeAck_get();
  public final static native int XMID_UtcTime_get();
  public final static native int XMID_FactoryTestSensorTiming_get();
  public final static native int XMID_FactoryTestSensorTimingResults_get();
  public final static native int XMID_ReqAvailableFilterProfiles_get();
  public final static native int XMID_AvailableFilterProfiles_get();
  public final static native int XMID_ReqFilterProfile_get();
  public final static native int XMID_ReqFilterProfileAck_get();
  public final static native int XMID_SetFilterProfile_get();
  public final static native int XMID_SetFilterProfileAck_get();
  public final static native int XMID_ReqGravityMagnitude_get();
  public final static native int XMID_ReqGravityMagnitudeAck_get();
  public final static native int XMID_SetGravityMagnitude_get();
  public final static native int XMID_SetGravityMagnitudeAck_get();
  public final static native int XMID_ReqGnssLeverArm_get();
  public final static native int XMID_ReqGnssLeverArmAck_get();
  public final static native int XMID_SetGnssLeverArm_get();
  public final static native int XMID_SetGnssLeverArmAck_get();
  public final static native int XMID_ReqMagneticField_get();
  public final static native int XMID_ReqMagneticFieldAck_get();
  public final static native int XMID_SetMagneticField_get();
  public final static native int XMID_SetMagneticFieldAck_get();
  public final static native int XMID_ReqReplayMode_get();
  public final static native int XMID_ReqReplayModeAck_get();
  public final static native int XMID_SetReplayMode_get();
  public final static native int XMID_SetReplayModeAck_get();
  public final static native int XMID_ReqLatLonAlt_get();
  public final static native int XMID_ReqLatLonAltAck_get();
  public final static native int XMID_SetLatLonAlt_get();
  public final static native int XMID_SetLatLonAltAck_get();
  public final static native int XMID_KeepAlive_get();
  public final static native int XMID_KeepAliveAck_get();
  public final static native int XMID_CloseConnection_get();
  public final static native int XMID_CloseConnectionAck_get();
  public final static native int XMID_IccCommand_get();
  public final static native int XMID_IccCommandAck_get();
  public final static native int XMID_ReqGnssPlatform_get();
  public final static native int XMID_ReqGnssPlatformAck_get();
  public final static native int XMID_SetGnssPlatform_get();
  public final static native int XMID_SetGnssPlatformAck_get();
  public final static native int XMID_ReqConnectionSettings_get();
  public final static native int XMID_ReqConnectionSettingsAck_get();
  public final static native int XMID_SetConnectionSettings_get();
  public final static native int XMID_SetConnectionSettingsAck_get();
  public final static native int XMID_BodyPackBundle_get();
  public final static native int XMID_BodyPackBundleAck_get();
  public final static native int XMID_ReqStationOptions_get();
  public final static native int XMID_ReqStationOptionsAck_get();
  public final static native int XMID_ReqErrorReport_get();
  public final static native int XMID_ErrorReport_get();
  public final static native int XMID_ReqXmErrorMode_get();
  public final static native int XMID_ReqXmErrorModeAck_get();
  public final static native int XMID_SetXmErrorMode_get();
  public final static native int XMID_SetXmErrorModeAck_get();
  public final static native int XMID_ReqBufferSize_get();
  public final static native int XMID_ReqBufferSizeAck_get();
  public final static native int XMID_SetBufferSize_get();
  public final static native int XMID_SetBufferSizeAck_get();
  public final static native int XMID_ReqHeading_get();
  public final static native int XMID_ReqHeadingAck_get();
  public final static native int XMID_SetHeading_get();
  public final static native int XMID_SetHeadingAck_get();
  public final static native int XMID_ReqLocationId_get();
  public final static native int XMID_ReqLocationIdAck_get();
  public final static native int XMID_SetLocationId_get();
  public final static native int XMID_SetLocationIdAck_get();
  public final static native int XMID_ReqExtOutputMode_get();
  public final static native int XMID_ReqExtOutputModeAck_get();
  public final static native int XMID_SetExtOutputMode_get();
  public final static native int XMID_SetExtOutputModeAck_get();
  public final static native int XMID_ReqBatteryLevel_get();
  public final static native int XMID_Batterylevel_get();
  public final static native int XMID_ReqInitTrackMode_get();
  public final static native int XMID_ReqInitTrackModeAck_get();
  public final static native int XMID_SetInitTrackMode_get();
  public final static native int XMID_SetInitTrackModeAck_get();
  public final static native int XMID_ReqMasterSettings_get();
  public final static native int XMID_MasterSettings_get();
  public final static native int XMID_StoreFilterState_get();
  public final static native int XMID_StoreFilterStateAck_get();
  public final static native int XMID_ReqPortConfig_get();
  public final static native int XMID_SetPortConfig_get();
  public final static native int XMID_PortConfig_get();
  public final static native int XMID_SetPortConfigAck_get();
  public final static native int XMID_ReqStringOutputType_get();
  public final static native int XMID_ReqStringOutputTypeAck_get();
  public final static native int XMID_SetStringOutputType_get();
  public final static native int XMID_SetStringOutputTypeAck_get();
  public final static native int XMID_ReqStringOutputConfig_get();
  public final static native int XMID_ReqStringOutputConfigAck_get();
  public final static native int XMID_SetStringOutputConfig_get();
  public final static native int XMID_SetStringOutputConfigAck_get();
  public final static native int XMID_ReqEmts_get();
  public final static native int XMID_EmtsData_get();
  public final static native int XMID_UpdateFilterProfile_get();
  public final static native int XMID_UpdateFilterProfileAck_get();
  public final static native int XMID_RestoreEmts_get();
  public final static native int XMID_RestoreEmtsAck_get();
  public final static native int XMID_StoreEmts_get();
  public final static native int XMID_StoreEmtsAck_get();
  public final static native int XMID_UnlockMaintenanceMode_get();
  public final static native int XMID_UnlockMaintenanceModeAck_get();
  public final static native int XMID_ClockSyncCommand_get();
  public final static native int XMID_ClockSyncCommandAck_get();
  public final static native int XMID_ReqActiveClockCorrection_get();
  public final static native int XMID_ActiveClockCorrection_get();
  public final static native int XMID_StoreActiveClockCorrection_get();
  public final static native int XMID_StoreActiveClockCorrectionAck_get();
  public final static native int XMID_ReqFilterSettings_get();
  public final static native int XMID_ReqFilterSettingsAck_get();
  public final static native int XMID_SetFilterSettings_get();
  public final static native int XMID_SetFilterSettingsAck_get();
  public final static native int XMID_ReqAmd_get();
  public final static native int XMID_ReqAmdAck_get();
  public final static native int XMID_SetAmd_get();
  public final static native int XMID_SetAmdAck_get();
  public final static native int XMID_ResetOrientation_get();
  public final static native int XMID_ResetOrientationAck_get();
  public final static native int XMID_ReqGnssStatus_get();
  public final static native int XMID_GnssStatus_get();
  public final static native int XMID_AdjustUtcTime_get();
  public final static native int XMID_AdjustUtcTimeAck_get();
  public final static native int XMID_ReqAssemblyId_get();
  public final static native int XMID_SetAssemblyId_get();
  public final static native int XMID_AssemblyId_get();
  public final static native int XMID_SetAssemblyIdAck_get();
  public final static native int XMID_ReqGnssReceiverSettings_get();
  public final static native int XMID_ReqGnssReceiverSettingsAck_get();
  public final static native int XMID_SetGnssReceiverSettings_get();
  public final static native int XMID_SetGnssReceiverSettingsAck_get();
  public final static native int XMID_ReqAccessControlList_get();
  public final static native int XMID_AccessControlList_get();
  public final static native int XMID_SetAccessControlList_get();
  public final static native int XMID_SetAccessControlListAck_get();
  public final static native int XMID_ScanChannels_get();
  public final static native int XMID_ScanChannelsAck_get();
  public final static native int XMID_EnableMaster_get();
  public final static native int XMID_EnableMasterAck_get();
  public final static native int XMID_DisableMaster_get();
  public final static native int XMID_DisableMasterAck_get();
  public final static native int XMID_ReqRadioChannel_get();
  public final static native int XMID_ReqRadioChannelAck_get();
  public final static native int XMID_SetClientPriority_get();
  public final static native int XMID_SetClientPriorityAck_get();
  public final static native int XMID_ReqClientPriority_get();
  public final static native int XMID_ReqClientPriorityAck_get();
  public final static native int XMID_SetWirelessConfig_get();
  public final static native int XMID_SetWirelessConfigAck_get();
  public final static native int XMID_ReqWirelessConfig_get();
  public final static native int XMID_ReqWirelessConfigAck_get();
  public final static native int XMID_UpdateBias_get();
  public final static native int XMID_UpdateBiasAck_get();
  public final static native int XMID_ToggleIoPins_get();
  public final static native int XMID_ToggleIoPinsAck_get();
  public final static native int XMID_GotoOperational_get();
  public final static native int XMID_GotoOperationalAck_get();
  public final static native int XMID_SetTransportMode_get();
  public final static native int XMID_SetTransportModeAck_get();
  public final static native int XMID_ReqTransportMode_get();
  public final static native int XMID_ReqTransportModeAck_get();
  public final static native int XMID_AcceptMtw_get();
  public final static native int XMID_AcceptMtwAck_get();
  public final static native int XMID_RejectMtw_get();
  public final static native int XMID_RejectMtwAck_get();
  public final static native int XMID_InfoRequest_get();
  public final static native int XMID_InfoRequestAck_get();
  public final static native int XMID_ReqFrameRates_get();
  public final static native int XMID_ReqFrameRatesAck_get();
  public final static native int XMID_StartRecording_get();
  public final static native int XMID_StartRecordingAck_get();
  public final static native int XMID_StopRecording_get();
  public final static native int XMID_StopRecordingAck_get();
  public final static native int XMID_ReqOutputConfiguration_get();
  public final static native int XMID_ReqOutputConfigurationAck_get();
  public final static native int XMID_SetOutputConfiguration_get();
  public final static native int XMID_SetOutputConfigurationAck_get();
  public final static native int XMID_ReqOutputMode_get();
  public final static native int XMID_ReqOutputModeAck_get();
  public final static native int XMID_SetOutputMode_get();
  public final static native int XMID_SetOutputModeAck_get();
  public final static native int XMID_ReqOutputSettings_get();
  public final static native int XMID_ReqOutputSettingsAck_get();
  public final static native int XMID_SetOutputSettings_get();
  public final static native int XMID_SetOutputSettingsAck_get();
  public final static native int XMID_ReqOutputSkipFactor_get();
  public final static native int XMID_ReqOutputSkipFactorAck_get();
  public final static native int XMID_SetOutputSkipFactor_get();
  public final static native int XMID_SetOutputSkipFactorAck_get();
  public final static native int XMID_SetInitialHeading_get();
  public final static native int XMID_SetInitialHeadingAck_get();
  public final static native int XMID_ReqErrorMode_get();
  public final static native int XMID_ReqErrorModeAck_get();
  public final static native int XMID_SetErrorMode_get();
  public final static native int XMID_SetErrorModeAck_get();
  public final static native int XMID_ReqTransmitDelay_get();
  public final static native int XMID_ReqTransmitDelayAck_get();
  public final static native int XMID_SetTransmitDelay_get();
  public final static native int XMID_SetTransmitDelayAck_get();
  public final static native int XMID_SetMfmResults_get();
  public final static native int XMID_SetMfmResultsAck_get();
  public final static native int XMID_ReqObjectAlignment_get();
  public final static native int XMID_ReqObjectAlignmentAck_get();
  public final static native int XMID_SetObjectAlignment_get();
  public final static native int XMID_SetObjectAlignmentAck_get();
  public final static native int XMID_ForwardGnssData_get();
  public final static native int XMID_ForwardGnssDataAck_get();
  public final static native int XMID_ReqCanConfig_get();
  public final static native int XMID_SetCanConfig_get();
  public final static native int XMID_CanConfig_get();
  public final static native int XMID_SetCanConfigAck_get();
  public final static native int XMID_ReqCanOutputConfig_get();
  public final static native int XMID_SetCanOutputConfig_get();
  public final static native int XMID_CanOutputConfig_get();
  public final static native int XMID_SetCanOutputConfigAck_get();
  public final static native int XMID_ReqAlignmentRotation_get();
  public final static native int XMID_ReqAlignmentRotationAck_get();
  public final static native int XMID_SetAlignmentRotation_get();
  public final static native int XMID_SetAlignmentRotationAck_get();
  public final static native int XMID_ExtendedMessageID_get();
  public final static native int XMID_SetDeviceIdContext_get();
  public final static native int XMID_SetDeviceIdContextAck_get();
  public final static native int XMID_SetLogLevel_get();
  public final static native int XMID_SetLogLevelAck_get();
  public final static native int XMID_Log_get();
  public final static native int XMID_Reserved_get();
  public final static native int XMID_SetInternalOptions_get();
  public final static native int XMID_SetInternalOptionsAck_get();
  public final static native int XS_BID_MASTER_get();
  public final static native int XS_BID_BROADCAST_get();
  public final static native int XS_BID_MT_get();
  public final static native int XS_BID_INVALID_get();
  public final static native int XS_BID_DYNAMIC_get();
  public final static native int XS_PREAMBLE_get();
  public final static native int XS_EXTLENCODE_get();
  public final static native int XS_LEN_MSGHEADER_get();
  public final static native int XS_LEN_MSGEXTHEADER_get();
  public final static native int XS_LEN_MSGHEADERCS_get();
  public final static native int XS_LEN_MSGEXTHEADERCS_get();
  public final static native int XS_LEN_CHECKSUM_get();
  public final static native int XS_LEN_UNSIGSHORT_get();
  public final static native int XS_LEN_UNSIGINT_get();
  public final static native int XS_LEN_FLOAT_get();
  public final static native int XS_MAXDATALEN_get();
  public final static native int XS_MAXSHORTDATALEN_get();
  public final static native int XS_MAXMSGLEN_get();
  public final static native int XS_MAXSHORTMSGLEN_get();
  public final static native int XS_MAXGARBAGE_get();
  public final static native void XsMessageHeader_m_preamble_set(long jarg1, XsMessageHeader jarg1_, short jarg2);
  public final static native short XsMessageHeader_m_preamble_get(long jarg1, XsMessageHeader jarg1_);
  public final static native void XsMessageHeader_m_busId_set(long jarg1, XsMessageHeader jarg1_, short jarg2);
  public final static native short XsMessageHeader_m_busId_get(long jarg1, XsMessageHeader jarg1_);
  public final static native void XsMessageHeader_m_messageId_set(long jarg1, XsMessageHeader jarg1_, short jarg2);
  public final static native short XsMessageHeader_m_messageId_get(long jarg1, XsMessageHeader jarg1_);
  public final static native void XsMessageHeader_m_length_set(long jarg1, XsMessageHeader jarg1_, short jarg2);
  public final static native short XsMessageHeader_m_length_get(long jarg1, XsMessageHeader jarg1_);
  public final static native void XsMessageHeader_LengthData_ExtendedLength_ExtendedParts_m_high_set(long jarg1, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg1_, short jarg2);
  public final static native short XsMessageHeader_LengthData_ExtendedLength_ExtendedParts_m_high_get(long jarg1, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg1_);
  public final static native void XsMessageHeader_LengthData_ExtendedLength_ExtendedParts_m_low_set(long jarg1, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg1_, short jarg2);
  public final static native short XsMessageHeader_LengthData_ExtendedLength_ExtendedParts_m_low_get(long jarg1, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg1_);
  public final static native long new_XsMessageHeader_LengthData_ExtendedLength_ExtendedParts();
  public final static native void delete_XsMessageHeader_LengthData_ExtendedLength_ExtendedParts(long jarg1);
  public final static native void XsMessageHeader_LengthData_ExtendedLength_m_length_set(long jarg1, XsMessageHeader.LengthData.ExtendedLength jarg1_, long jarg2, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg2_);
  public final static native long XsMessageHeader_LengthData_ExtendedLength_m_length_get(long jarg1, XsMessageHeader.LengthData.ExtendedLength jarg1_);
  public final static native void XsMessageHeader_LengthData_ExtendedLength_m_data_set(long jarg1, XsMessageHeader.LengthData.ExtendedLength jarg1_, long jarg2);
  public final static native long XsMessageHeader_LengthData_ExtendedLength_m_data_get(long jarg1, XsMessageHeader.LengthData.ExtendedLength jarg1_);
  public final static native long new_XsMessageHeader_LengthData_ExtendedLength();
  public final static native void delete_XsMessageHeader_LengthData_ExtendedLength(long jarg1);
  public final static native void XsMessageHeader_LengthData_m_extended_set(long jarg1, XsMessageHeader.LengthData jarg1_, long jarg2, XsMessageHeader.LengthData.ExtendedLength jarg2_);
  public final static native long XsMessageHeader_LengthData_m_extended_get(long jarg1, XsMessageHeader.LengthData jarg1_);
  public final static native void XsMessageHeader_LengthData_m_data_set(long jarg1, XsMessageHeader.LengthData jarg1_, long jarg2);
  public final static native long XsMessageHeader_LengthData_m_data_get(long jarg1, XsMessageHeader.LengthData jarg1_);
  public final static native long new_XsMessageHeader_LengthData();
  public final static native void delete_XsMessageHeader_LengthData(long jarg1);
  public final static native void XsMessageHeader_m_datlen_set(long jarg1, XsMessageHeader jarg1_, long jarg2, XsMessageHeader.LengthData jarg2_);
  public final static native long XsMessageHeader_m_datlen_get(long jarg1, XsMessageHeader jarg1_);
  public final static native long new_XsMessageHeader();
  public final static native void delete_XsMessageHeader(long jarg1);
  public final static native long new_XsMessage__SWIG_0(int jarg1, long jarg2);
  public final static native long new_XsMessage__SWIG_1(int jarg1);
  public final static native long new_XsMessage__SWIG_2();
  public final static native long new_XsMessage__SWIG_3(long jarg1, long jarg2);
  public final static native long new_XsMessage__SWIG_4(long jarg1, XsString jarg1_, boolean jarg2);
  public final static native long new_XsMessage__SWIG_5(long jarg1, XsString jarg1_);
  public final static native long new_XsMessage__SWIG_6(long jarg1, XsMessage jarg1_);
  public final static native void delete_XsMessage(long jarg1);
  public final static native void XsMessage_clear(long jarg1, XsMessage jarg1_);
  public final static native boolean XsMessage_empty(long jarg1, XsMessage jarg1_);
  public final static native short XsMessage_getBusId(long jarg1, XsMessage jarg1_);
  public final static native long XsMessage_getDataBuffer__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native long XsMessage_getDataBuffer__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native short XsMessage_getDataByte__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native short XsMessage_getDataByte__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native double XsMessage_getDataDouble__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native double XsMessage_getDataDouble__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native float XsMessage_getDataFloat__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native float XsMessage_getDataFloat__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native double XsMessage_getDataF1220__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native double XsMessage_getDataF1220__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native double XsMessage_getDataFP1632__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native double XsMessage_getDataFP1632__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native long XsMessage_getDataLong__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native long XsMessage_getDataLong__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native java.math.BigInteger XsMessage_getDataLongLong__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native java.math.BigInteger XsMessage_getDataLongLong__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native int XsMessage_getDataShort__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native int XsMessage_getDataShort__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native long XsMessage_getDataSize(long jarg1, XsMessage jarg1_);
  public final static native int XsMessage_getMessageId(long jarg1, XsMessage jarg1_);
  public final static native int XsMessage_toResultValue(long jarg1, XsMessage jarg1_);
  public final static native long XsMessage_getMessageStart(long jarg1, XsMessage jarg1_);
  public final static native long XsMessage_getTotalMessageSize(long jarg1, XsMessage jarg1_);
  public final static native boolean XsMessage_isChecksumOk(long jarg1, XsMessage jarg1_);
  public final static native boolean XsMessage_loadFromString(long jarg1, XsMessage jarg1_, long jarg2, long jarg3);
  public final static native void XsMessage_recomputeChecksum(long jarg1, XsMessage jarg1_);
  public final static native void XsMessage_resizeData(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native void XsMessage_setBusId__SWIG_0(long jarg1, XsMessage jarg1_, short jarg2);
  public final static native void XsMessage_setBusId__SWIG_1(long jarg1, XsMessage jarg1_, int jarg2);
  public final static native void XsMessage_setDataBuffer__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsMessage_setDataBuffer__SWIG_1(long jarg1, XsMessage jarg1_, long jarg2, long jarg3);
  public final static native void XsMessage_setDataByte__SWIG_0(long jarg1, XsMessage jarg1_, short jarg2, long jarg3);
  public final static native void XsMessage_setDataByte__SWIG_1(long jarg1, XsMessage jarg1_, short jarg2);
  public final static native void XsMessage_setDataDouble__SWIG_0(long jarg1, XsMessage jarg1_, double jarg2, long jarg3);
  public final static native void XsMessage_setDataDouble__SWIG_1(long jarg1, XsMessage jarg1_, double jarg2);
  public final static native void XsMessage_setDataFloat__SWIG_0(long jarg1, XsMessage jarg1_, float jarg2, long jarg3);
  public final static native void XsMessage_setDataFloat__SWIG_1(long jarg1, XsMessage jarg1_, float jarg2);
  public final static native void XsMessage_setDataF1220__SWIG_0(long jarg1, XsMessage jarg1_, double jarg2, long jarg3);
  public final static native void XsMessage_setDataF1220__SWIG_1(long jarg1, XsMessage jarg1_, double jarg2);
  public final static native void XsMessage_setDataFP1632__SWIG_0(long jarg1, XsMessage jarg1_, double jarg2, long jarg3);
  public final static native void XsMessage_setDataFP1632__SWIG_1(long jarg1, XsMessage jarg1_, double jarg2);
  public final static native void XsMessage_setDataLong__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2, long jarg3);
  public final static native void XsMessage_setDataLong__SWIG_1(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native void XsMessage_setDataLongLong__SWIG_0(long jarg1, XsMessage jarg1_, java.math.BigInteger jarg2, long jarg3);
  public final static native void XsMessage_setDataLongLong__SWIG_1(long jarg1, XsMessage jarg1_, java.math.BigInteger jarg2);
  public final static native void XsMessage_setDataShort__SWIG_0(long jarg1, XsMessage jarg1_, int jarg2, long jarg3);
  public final static native void XsMessage_setDataShort__SWIG_1(long jarg1, XsMessage jarg1_, int jarg2);
  public final static native void XsMessage_setMessageId(long jarg1, XsMessage jarg1_, int jarg2);
  public final static native void XsMessage_deleteData__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2, long jarg3);
  public final static native void XsMessage_deleteData__SWIG_1(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native void XsMessage_insertData__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2, long jarg3);
  public final static native void XsMessage_insertData__SWIG_1(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native short XsMessage_getFPValueSize(int jarg1);
  public final static native void XsMessage_getDataFPValue__SWIG_0(long jarg1, XsMessage jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void XsMessage_getDataFPValue__SWIG_1(long jarg1, XsMessage jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void XsMessage_getDataFPValue__SWIG_2(long jarg1, XsMessage jarg1_, int jarg2, long jarg3);
  public final static native double XsMessage_getDataFPValue__SWIG_3(long jarg1, XsMessage jarg1_, int jarg2, long jarg3);
  public final static native double XsMessage_getDataFPValue__SWIG_4(long jarg1, XsMessage jarg1_, int jarg2);
  public final static native void XsMessage_setDataFPValue__SWIG_0(long jarg1, XsMessage jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void XsMessage_setDataFPValue__SWIG_1(long jarg1, XsMessage jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void XsMessage_setDataFPValue__SWIG_2(long jarg1, XsMessage jarg1_, int jarg2, long jarg3);
  public final static native void XsMessage_setDataFPValue__SWIG_3(long jarg1, XsMessage jarg1_, int jarg2, double jarg3, long jarg4);
  public final static native void XsMessage_setDataFPValue__SWIG_4(long jarg1, XsMessage jarg1_, int jarg2, double jarg3);
  public final static native long XsMessage_rawMessage(long jarg1, XsMessage jarg1_);
  public final static native long XsMessage_toHexString__SWIG_0(long jarg1, XsMessage jarg1_, long jarg2);
  public final static native long XsMessage_toHexString__SWIG_1(long jarg1, XsMessage jarg1_);
  public final static native void XsTimeInfo_m_nano_set(long jarg1, XsTimeInfo jarg1_, long jarg2);
  public final static native long XsTimeInfo_m_nano_get(long jarg1, XsTimeInfo jarg1_);
  public final static native void XsTimeInfo_m_year_set(long jarg1, XsTimeInfo jarg1_, int jarg2);
  public final static native int XsTimeInfo_m_year_get(long jarg1, XsTimeInfo jarg1_);
  public final static native void XsTimeInfo_m_month_set(long jarg1, XsTimeInfo jarg1_, short jarg2);
  public final static native short XsTimeInfo_m_month_get(long jarg1, XsTimeInfo jarg1_);
  public final static native void XsTimeInfo_m_day_set(long jarg1, XsTimeInfo jarg1_, short jarg2);
  public final static native short XsTimeInfo_m_day_get(long jarg1, XsTimeInfo jarg1_);
  public final static native void XsTimeInfo_m_hour_set(long jarg1, XsTimeInfo jarg1_, short jarg2);
  public final static native short XsTimeInfo_m_hour_get(long jarg1, XsTimeInfo jarg1_);
  public final static native void XsTimeInfo_m_minute_set(long jarg1, XsTimeInfo jarg1_, short jarg2);
  public final static native short XsTimeInfo_m_minute_get(long jarg1, XsTimeInfo jarg1_);
  public final static native void XsTimeInfo_m_second_set(long jarg1, XsTimeInfo jarg1_, short jarg2);
  public final static native short XsTimeInfo_m_second_get(long jarg1, XsTimeInfo jarg1_);
  public final static native void XsTimeInfo_m_valid_set(long jarg1, XsTimeInfo jarg1_, short jarg2);
  public final static native short XsTimeInfo_m_valid_get(long jarg1, XsTimeInfo jarg1_);
  public final static native void XsTimeInfo_m_utcOffset_set(long jarg1, XsTimeInfo jarg1_, short jarg2);
  public final static native short XsTimeInfo_m_utcOffset_get(long jarg1, XsTimeInfo jarg1_);
  public final static native void XsTimeInfo_clear(long jarg1, XsTimeInfo jarg1_);
  public final static native long XsTimeInfo_currentTime();
  public final static native long XsTimeInfo_currentLocalTime();
  public final static native void XsTimeInfo_makeUtc(long jarg1, XsTimeInfo jarg1_);
  public final static native long new_XsTimeInfo();
  public final static native void delete_XsTimeInfo(long jarg1);
  public final static native long new_XsTimeStamp__SWIG_0(long jarg1);
  public final static native long new_XsTimeStamp__SWIG_1();
  public final static native long new_XsTimeStamp__SWIG_2(int jarg1);
  public final static native long new_XsTimeStamp__SWIG_3(double jarg1);
  public final static native long new_XsTimeStamp__SWIG_4(long jarg1, XsTimeStamp jarg1_);
  public final static native long new_XsTimeStamp__SWIG_5(long jarg1, XsTimeInfo jarg1_);
  public final static native long XsTimeStamp_toTimeInfo__SWIG_0(long jarg1, XsTimeStamp jarg1_);
  public final static native void XsTimeStamp_toTimeInfo__SWIG_1(long jarg1, XsTimeStamp jarg1_, long jarg2, XsTimeInfo jarg2_);
  public final static native long XsTimeStamp_toXsString(long jarg1, XsTimeStamp jarg1_);
  public final static native long XsTimeStamp_msTime(long jarg1, XsTimeStamp jarg1_);
  public final static native void XsTimeStamp_setMsTime(long jarg1, XsTimeStamp jarg1_, long jarg2);
  public final static native double XsTimeStamp_timeOfDay(long jarg1, XsTimeStamp jarg1_);
  public final static native long XsTimeStamp_msTimeOfDay(long jarg1, XsTimeStamp jarg1_);
  public final static native double XsTimeStamp_secTime(long jarg1, XsTimeStamp jarg1_);
  public final static native void XsTimeStamp_setSecTime(long jarg1, XsTimeStamp jarg1_, double jarg2);
  public final static native long XsTimeStamp_secondTime(long jarg1, XsTimeStamp jarg1_);
  public final static native int XsTimeStamp_milliSecondPart(long jarg1, XsTimeStamp jarg1_);
  public final static native int XsTimeStamp_secondPart(long jarg1, XsTimeStamp jarg1_);
  public final static native int XsTimeStamp_minutePart(long jarg1, XsTimeStamp jarg1_);
  public final static native int XsTimeStamp_hourPart(long jarg1, XsTimeStamp jarg1_);
  public final static native long XsTimeStamp_now();
  public final static native long XsTimeStamp_nowMs();
  public final static native long XsTimeStamp_elapsedToNow(long jarg1, XsTimeStamp jarg1_);
  public final static native long XsTimeStamp_maxValue();
  public final static native long XsTimeStamp_utcToLocalTime__SWIG_0(long jarg1, XsTimeStamp jarg1_);
  public final static native long XsTimeStamp_localToUtcTime__SWIG_0(long jarg1, XsTimeStamp jarg1_);
  public final static native long XsTimeStamp_utcToLocalTime__SWIG_1(long jarg1, XsTimeStamp jarg1_, long jarg2, XsTimeInfo jarg2_);
  public final static native long XsTimeStamp_localToUtcTime__SWIG_1(long jarg1, XsTimeStamp jarg1_, long jarg2, XsTimeInfo jarg2_);
  public final static native long XsTimeStamp_utcToLocalTime__SWIG_2(long jarg1, XsTimeStamp jarg1_, long jarg2);
  public final static native long XsTimeStamp_localToUtcTime__SWIG_2(long jarg1, XsTimeStamp jarg1_, long jarg2);
  public final static native void delete_XsTimeStamp(long jarg1);
  public final static native long new_XsUShortVector__SWIG_0();
  public final static native long new_XsUShortVector__SWIG_1(int jarg1, int jarg2, int jarg3);
  public final static native long new_XsUShortVector__SWIG_2(long jarg1);
  public final static native long new_XsUShortVector__SWIG_3(long jarg1, XsUShortVector jarg1_);
  public final static native long XsUShortVector_size(long jarg1, XsUShortVector jarg1_);
  public final static native int XsUShortVector_at(long jarg1, XsUShortVector jarg1_, int jarg2);
  public final static native long XsUShortVector_data(long jarg1, XsUShortVector jarg1_);
  public final static native void delete_XsUShortVector(long jarg1);
  public final static native void XsScrData_m_acc_set(long jarg1, XsScrData jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsScrData_m_acc_get(long jarg1, XsScrData jarg1_);
  public final static native void XsScrData_m_gyr_set(long jarg1, XsScrData jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsScrData_m_gyr_get(long jarg1, XsScrData jarg1_);
  public final static native void XsScrData_m_mag_set(long jarg1, XsScrData jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsScrData_m_mag_get(long jarg1, XsScrData jarg1_);
  public final static native void XsScrData_m_temp_set(long jarg1, XsScrData jarg1_, int jarg2);
  public final static native int XsScrData_m_temp_get(long jarg1, XsScrData jarg1_);
  public final static native long new_XsScrData();
  public final static native void delete_XsScrData(long jarg1);
  public final static native long new_XsVector3__SWIG_0();
  public final static native long new_XsVector3__SWIG_1(long jarg1, XsVector3 jarg1_);
  public final static native long new_XsVector3__SWIG_2(long jarg1, XsVector jarg1_);
  public final static native long new_XsVector3__SWIG_3(double jarg1, double jarg2, double jarg3);
  public final static native long XsVector3_zero3();
  public final static native void XsVector3_assign__SWIG_0_0(long jarg1, XsVector3 jarg1_, long jarg2, long jarg3);
  public final static native void XsVector3_assign__SWIG_1(long jarg1, XsVector3 jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void delete_XsVector3(long jarg1);
  public final static native void XsCalibratedData_m_acc_set(long jarg1, XsCalibratedData jarg1_, long jarg2, XsVector3 jarg2_);
  public final static native long XsCalibratedData_m_acc_get(long jarg1, XsCalibratedData jarg1_);
  public final static native void XsCalibratedData_m_gyr_set(long jarg1, XsCalibratedData jarg1_, long jarg2, XsVector3 jarg2_);
  public final static native long XsCalibratedData_m_gyr_get(long jarg1, XsCalibratedData jarg1_);
  public final static native void XsCalibratedData_m_mag_set(long jarg1, XsCalibratedData jarg1_, long jarg2, XsVector3 jarg2_);
  public final static native long XsCalibratedData_m_mag_get(long jarg1, XsCalibratedData jarg1_);
  public final static native long new_XsCalibratedData__SWIG_0();
  public final static native long new_XsCalibratedData__SWIG_1(long jarg1, XsCalibratedData jarg1_);
  public final static native void delete_XsCalibratedData(long jarg1);
  public final static native long new_XsPressure__SWIG_0();
  public final static native long new_XsPressure__SWIG_1(double jarg1, short jarg2);
  public final static native long new_XsPressure__SWIG_2(double jarg1);
  public final static native long new_XsPressure__SWIG_3(long jarg1, XsPressure jarg1_);
  public final static native void XsPressure_m_pressure_set(long jarg1, XsPressure jarg1_, double jarg2);
  public final static native double XsPressure_m_pressure_get(long jarg1, XsPressure jarg1_);
  public final static native void XsPressure_m_pressureAge_set(long jarg1, XsPressure jarg1_, short jarg2);
  public final static native short XsPressure_m_pressureAge_get(long jarg1, XsPressure jarg1_);
  public final static native void delete_XsPressure(long jarg1);
  public final static native long new_XsQuaternion__SWIG_0(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_XsQuaternion__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_XsQuaternion__SWIG_2(double jarg1, double jarg2);
  public final static native long new_XsQuaternion__SWIG_3(double jarg1);
  public final static native long new_XsQuaternion__SWIG_4();
  public final static native long new_XsQuaternion__SWIG_5(double jarg1, double jarg2, double jarg3, double jarg4, boolean jarg5);
  public final static native long new_XsQuaternion__SWIG_6(long jarg1, XsQuaternion jarg1_);
  public final static native long new_XsQuaternion__SWIG_7(long jarg1, XsEuler jarg1_);
  public final static native long new_XsQuaternion__SWIG_8(long jarg1, XsMatrix jarg1_);
  public final static native void delete_XsQuaternion(long jarg1);
  public final static native void XsQuaternion_assign__SWIG_0(long jarg1, XsQuaternion jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void XsQuaternion_assign__SWIG_1(long jarg1, XsQuaternion jarg1_, long jarg2);
  public final static native long XsQuaternion_data(long jarg1, XsQuaternion jarg1_);
  public final static native long XsQuaternion_inverse(long jarg1, XsQuaternion jarg1_);
  public final static native long XsQuaternion_conjugate(long jarg1, XsQuaternion jarg1_);
  public final static native long XsQuaternion_normalized(long jarg1, XsQuaternion jarg1_);
  public final static native double XsQuaternion_normalize(long jarg1, XsQuaternion jarg1_);
  public final static native boolean XsQuaternion_empty(long jarg1, XsQuaternion jarg1_);
  public final static native long XsQuaternion_fromEulerAngles(long jarg1, XsQuaternion jarg1_, long jarg2, XsEuler jarg2_);
  public final static native long XsQuaternion_fromRotationMatrix(long jarg1, XsQuaternion jarg1_, long jarg2, XsMatrix jarg2_);
  public final static native long XsQuaternion_identity();
  public final static native void XsQuaternion_multiply(long jarg1, XsQuaternion jarg1_, long jarg2, XsQuaternion jarg2_, long jarg3, XsQuaternion jarg3_);
  public final static native double XsQuaternion_w__SWIG_0(long jarg1, XsQuaternion jarg1_);
  public final static native double XsQuaternion_x__SWIG_0(long jarg1, XsQuaternion jarg1_);
  public final static native double XsQuaternion_y__SWIG_0(long jarg1, XsQuaternion jarg1_);
  public final static native double XsQuaternion_z__SWIG_0(long jarg1, XsQuaternion jarg1_);
  public final static native void XsQuaternion_swap(long jarg1, XsQuaternion jarg1_, long jarg2, XsQuaternion jarg2_);
  public final static native void swap__SWIG_3(long jarg1, XsQuaternion jarg1_, long jarg2, XsQuaternion jarg2_);
  public final static native boolean XsQuaternion_isEqual(long jarg1, XsQuaternion jarg1_, long jarg2, XsQuaternion jarg2_, double jarg3);
  public final static native double XsQuaternion_dotProduct(long jarg1, XsQuaternion jarg1_, long jarg2, XsQuaternion jarg2_);
  public final static native long new_XsSdiData__SWIG_0();
  public final static native long new_XsSdiData__SWIG_1(long jarg1, XsQuaternion jarg1_, long jarg2, XsVector jarg2_);
  public final static native long new_XsSdiData__SWIG_2(long jarg1, XsSdiData jarg1_);
  public final static native void XsSdiData_zero(long jarg1, XsSdiData jarg1_);
  public final static native long XsSdiData_orientationIncrement(long jarg1, XsSdiData jarg1_);
  public final static native void XsSdiData_setOrientationIncrement(long jarg1, XsSdiData jarg1_, long jarg2, XsQuaternion jarg2_);
  public final static native long XsSdiData_velocityIncrement(long jarg1, XsSdiData jarg1_);
  public final static native void XsSdiData_setVelocityIncrement(long jarg1, XsSdiData jarg1_, long jarg2, XsVector jarg2_);
  public final static native void delete_XsSdiData(long jarg1);
  public final static native long new_XsEuler__SWIG_0();
  public final static native long new_XsEuler__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_XsEuler__SWIG_2(long jarg1, XsEuler jarg1_);
  public final static native long new_XsEuler__SWIG_3(long jarg1, XsVector jarg1_);
  public final static native long new_XsEuler__SWIG_4(long jarg1, XsQuaternion jarg1_);
  public final static native boolean XsEuler_empty(long jarg1, XsEuler jarg1_);
  public final static native long XsEuler_data(long jarg1, XsEuler jarg1_);
  public final static native long XsEuler_fromQuaternion(long jarg1, XsEuler jarg1_, long jarg2, XsQuaternion jarg2_);
  public final static native double XsEuler_roll(long jarg1, XsEuler jarg1_);
  public final static native double XsEuler_pitch(long jarg1, XsEuler jarg1_);
  public final static native double XsEuler_yaw(long jarg1, XsEuler jarg1_);
  public final static native double XsEuler_x(long jarg1, XsEuler jarg1_);
  public final static native double XsEuler_y(long jarg1, XsEuler jarg1_);
  public final static native double XsEuler_z(long jarg1, XsEuler jarg1_);
  public final static native boolean XsEuler_isEqual(long jarg1, XsEuler jarg1_, long jarg2, XsEuler jarg2_, double jarg3);
  public final static native void delete_XsEuler(long jarg1);
  public final static native void XsAnalogInData_m_data_set(long jarg1, XsAnalogInData jarg1_, int jarg2);
  public final static native int XsAnalogInData_m_data_get(long jarg1, XsAnalogInData jarg1_);
  public final static native long new_XsAnalogInData__SWIG_0();
  public final static native long new_XsAnalogInData__SWIG_1(int jarg1);
  public final static native void delete_XsAnalogInData(long jarg1);
  public final static native int GNSS_PVT_FLAGS_GNSS_FIX_NONE_get();
  public final static native int GNSS_PVT_FLAGS_GNSS_FIX_SINGLE_get();
  public final static native int GNSS_PVT_FLAGS_GNSS_FIX_DIFFERENTIAL_get();
  public final static native int GNSS_PVT_FLAGS_CARRIER_SOLUTION_NONE_get();
  public final static native int GNSS_PVT_FLAGS_CARRIER_SOLUTION_FLOATING_get();
  public final static native int GNSS_PVT_FLAGS_CARRIER_SOLUTION_FIXED_get();
  public final static native int GNSS_ACCURACY_DEFAULT_DEVIATION_get();
  public final static native int XPDUF_ValidDate_get();
  public final static native int XPDUF_ValidTime_get();
  public final static native int XPDUF_FullyResolved_get();
  public final static native int XPDUF_ValidMag_get();
  public final static native int XPDQI_NoFix_get();
  public final static native int XPDQI_DeadReckiningOnly_get();
  public final static native int XPDQI_2DFix_get();
  public final static native int XPDQI_3DFix_get();
  public final static native int XPDQI_GnssAndDeadReck_get();
  public final static native int XPDQI_TimeOnlyFix_get();
  public final static native void XsRawGnssPvtData_m_itow_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_itow_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_year_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_year_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_month_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_month_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_day_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_day_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_hour_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_hour_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_min_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_min_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_sec_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_sec_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_valid_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_valid_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_tAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_tAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_nano_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_nano_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_fixType_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_fixType_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_flags_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_flags_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_numSv_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_numSv_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_res1_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_res1_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_lon_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_lon_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_lat_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_lat_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_height_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_height_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_hMsl_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_hMsl_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_hAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_hAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_vAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_vAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_velN_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_velN_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_velE_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_velE_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_velD_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_velD_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_gSpeed_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_gSpeed_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_headMot_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_headMot_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_sAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_sAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_headAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_headAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_headVeh_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_headVeh_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_gdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_gdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_pdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_pdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_tdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_tdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_vdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_vdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_hdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_hdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_ndop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_ndop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_edop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_edop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native long new_XsRawGnssPvtData();
  public final static native void delete_XsRawGnssPvtData(long jarg1);
  public final static native int XSIF_SignalQualityIndicator_Mask_get();
  public final static native int XSIF_SignalQualityIndicator_NoSignal_get();
  public final static native int XSIF_SignalQualityIndicator_Searching_get();
  public final static native int XSIF_SignalQualityIndicator_Acquired_get();
  public final static native int XSIF_SignalQualityIndicator_Unusable_get();
  public final static native int XSIF_SignalQualityIndicator_CodeTimeOk_get();
  public final static native int XSIF_SignalQualityIndicator_CodeCarrierTimeOk1_get();
  public final static native int XSIF_SignalQualityIndicator_CodeCarrierTimeOk2_get();
  public final static native int XSIF_SignalQualityIndicator_CodeCarrierTimeOk3_get();
  public final static native int XSIF_UsedForNavigation_Mask_get();
  public final static native int XSIF_UsedForNavigation_Used_get();
  public final static native int XSIF_HealthFlag_Mask_get();
  public final static native int XSIF_HealthFlag_Unknown_get();
  public final static native int XSIF_HealthFlag_Healthy_get();
  public final static native int XSIF_HealthFlag_Unhealthy_get();
  public final static native int XSIF_Differential_Mask_get();
  public final static native int XSIF_Differential_Available_get();
  public final static native void XsSatInfo_m_gnssId_set(long jarg1, XsSatInfo jarg1_, short jarg2);
  public final static native short XsSatInfo_m_gnssId_get(long jarg1, XsSatInfo jarg1_);
  public final static native void XsSatInfo_m_svId_set(long jarg1, XsSatInfo jarg1_, short jarg2);
  public final static native short XsSatInfo_m_svId_get(long jarg1, XsSatInfo jarg1_);
  public final static native void XsSatInfo_m_cno_set(long jarg1, XsSatInfo jarg1_, short jarg2);
  public final static native short XsSatInfo_m_cno_get(long jarg1, XsSatInfo jarg1_);
  public final static native void XsSatInfo_m_flags_set(long jarg1, XsSatInfo jarg1_, short jarg2);
  public final static native short XsSatInfo_m_flags_get(long jarg1, XsSatInfo jarg1_);
  public final static native long new_XsSatInfo();
  public final static native void delete_XsSatInfo(long jarg1);
  public final static native void XsRawGnssSatInfo_m_itow_set(long jarg1, XsRawGnssSatInfo jarg1_, long jarg2);
  public final static native long XsRawGnssSatInfo_m_itow_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_numSvs_set(long jarg1, XsRawGnssSatInfo jarg1_, short jarg2);
  public final static native short XsRawGnssSatInfo_m_numSvs_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_res1_set(long jarg1, XsRawGnssSatInfo jarg1_, short jarg2);
  public final static native short XsRawGnssSatInfo_m_res1_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_res2_set(long jarg1, XsRawGnssSatInfo jarg1_, short jarg2);
  public final static native short XsRawGnssSatInfo_m_res2_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_res3_set(long jarg1, XsRawGnssSatInfo jarg1_, short jarg2);
  public final static native short XsRawGnssSatInfo_m_res3_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_satInfos_set(long jarg1, XsRawGnssSatInfo jarg1_, long jarg2, XsSatInfo jarg2_);
  public final static native long XsRawGnssSatInfo_m_satInfos_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native long new_XsRawGnssSatInfo();
  public final static native void delete_XsRawGnssSatInfo(long jarg1);
  public final static native long new_XsRange__SWIG_0(int jarg1, int jarg2);
  public final static native long new_XsRange__SWIG_1(int jarg1);
  public final static native long new_XsRange__SWIG_2();
  public final static native long new_XsRange__SWIG_3(long jarg1, XsRange jarg1_);
  public final static native int XsRange_count(long jarg1, XsRange jarg1_);
  public final static native int XsRange_interval(long jarg1, XsRange jarg1_);
  public final static native boolean XsRange_contains(long jarg1, XsRange jarg1_, int jarg2);
  public final static native void XsRange_setRange(long jarg1, XsRange jarg1_, int jarg2, int jarg3);
  public final static native boolean XsRange_empty(long jarg1, XsRange jarg1_);
  public final static native int XsRange_first(long jarg1, XsRange jarg1_);
  public final static native int XsRange_last(long jarg1, XsRange jarg1_);
  public final static native void delete_XsRange(long jarg1);
  public final static native void XsTriggerIndicationData_m_line_set(long jarg1, XsTriggerIndicationData jarg1_, short jarg2);
  public final static native short XsTriggerIndicationData_m_line_get(long jarg1, XsTriggerIndicationData jarg1_);
  public final static native void XsTriggerIndicationData_m_polarity_set(long jarg1, XsTriggerIndicationData jarg1_, short jarg2);
  public final static native short XsTriggerIndicationData_m_polarity_get(long jarg1, XsTriggerIndicationData jarg1_);
  public final static native void XsTriggerIndicationData_m_timestamp_set(long jarg1, XsTriggerIndicationData jarg1_, long jarg2);
  public final static native long XsTriggerIndicationData_m_timestamp_get(long jarg1, XsTriggerIndicationData jarg1_);
  public final static native void XsTriggerIndicationData_m_frameNumber_set(long jarg1, XsTriggerIndicationData jarg1_, int jarg2);
  public final static native int XsTriggerIndicationData_m_frameNumber_get(long jarg1, XsTriggerIndicationData jarg1_);
  public final static native long new_XsTriggerIndicationData__SWIG_0(short jarg1, short jarg2, long jarg3, int jarg4);
  public final static native long new_XsTriggerIndicationData__SWIG_1(short jarg1, short jarg2, long jarg3);
  public final static native long new_XsTriggerIndicationData__SWIG_2(short jarg1, short jarg2);
  public final static native long new_XsTriggerIndicationData__SWIG_3(short jarg1);
  public final static native long new_XsTriggerIndicationData__SWIG_4();
  public final static native void XsTriggerIndicationData_clear(long jarg1, XsTriggerIndicationData jarg1_);
  public final static native boolean XsTriggerIndicationData_valid(long jarg1, XsTriggerIndicationData jarg1_);
  public final static native void delete_XsTriggerIndicationData(long jarg1);
  public final static native int ST_Awinda_get();
  public final static native void XsSnapshot_m_deviceId_set(long jarg1, XsSnapshot jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native long XsSnapshot_m_deviceId_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_frameNumber_set(long jarg1, XsSnapshot jarg1_, long jarg2);
  public final static native long XsSnapshot_m_frameNumber_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_timestamp_set(long jarg1, XsSnapshot jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger XsSnapshot_m_timestamp_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_iQ_set(long jarg1, XsSnapshot jarg1_, long jarg2);
  public final static native long XsSnapshot_m_iQ_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_iV_set(long jarg1, XsSnapshot jarg1_, long jarg2);
  public final static native long XsSnapshot_m_iV_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_mag_set(long jarg1, XsSnapshot jarg1_, long jarg2);
  public final static native long XsSnapshot_m_mag_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_baro_set(long jarg1, XsSnapshot jarg1_, int jarg2);
  public final static native int XsSnapshot_m_baro_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_status_set(long jarg1, XsSnapshot jarg1_, int jarg2);
  public final static native int XsSnapshot_m_status_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_accClippingCounter_set(long jarg1, XsSnapshot jarg1_, short jarg2);
  public final static native short XsSnapshot_m_accClippingCounter_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_gyrClippingCounter_set(long jarg1, XsSnapshot jarg1_, short jarg2);
  public final static native short XsSnapshot_m_gyrClippingCounter_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_type_set(long jarg1, XsSnapshot jarg1_, int jarg2);
  public final static native int XsSnapshot_m_type_get(long jarg1, XsSnapshot jarg1_);
  public final static native long new_XsSnapshot();
  public final static native void delete_XsSnapshot(long jarg1);
  public final static native int FSFL_ClipAccX_get();
  public final static native int FSFL_ClipAccY_get();
  public final static native int FSFL_ClipAccZ_get();
  public final static native int FSFL_ClipAccMask_get();
  public final static native int FSFL_ClipGyrX_get();
  public final static native int FSFL_ClipGyrY_get();
  public final static native int FSFL_ClipGyrZ_get();
  public final static native int FSFL_ClipGyrMask_get();
  public final static native int FSFL_ClipMagX_get();
  public final static native int FSFL_ClipMagY_get();
  public final static native int FSFL_ClipMagZ_get();
  public final static native int FSFL_ClipMagMask_get();
  public final static native int FSFL_MagIsNew_get();
  public final static native int FSFL_BaroIsNew_get();
  public final static native int FSFL_RotationMask_get();
  public final static native int FSFL_ClipAccShift_get();
  public final static native int FSFL_ClipGyrShift_get();
  public final static native int FSFL_ClipMagshift_get();
  public final static native int FSFL_RotationShift_get();
  public final static native void int24_t_m_vals_set(long jarg1, int24_t jarg1_, long jarg2);
  public final static native long int24_t_m_vals_get(long jarg1, int24_t jarg1_);
  public final static native double int24_t_toDouble(long jarg1, int24_t jarg1_);
  public final static native long new_int24_t();
  public final static native void delete_int24_t(long jarg1);
  public final static native void XsGloveSnapshot_m_frameNumber_set(long jarg1, XsGloveSnapshot jarg1_, long jarg2);
  public final static native long XsGloveSnapshot_m_frameNumber_get(long jarg1, XsGloveSnapshot jarg1_);
  public final static native void XsGloveSnapshot_m_validSampleFlags_set(long jarg1, XsGloveSnapshot jarg1_, int jarg2);
  public final static native int XsGloveSnapshot_m_validSampleFlags_get(long jarg1, XsGloveSnapshot jarg1_);
  public final static native void XsGloveSnapshot_m_padByte_set(long jarg1, XsGloveSnapshot jarg1_, short jarg2);
  public final static native short XsGloveSnapshot_m_padByte_get(long jarg1, XsGloveSnapshot jarg1_);
  public final static native void XsGloveSnapshot_m_fingers_set(long jarg1, XsGloveSnapshot jarg1_, long jarg2);
  public final static native long XsGloveSnapshot_m_fingers_get(long jarg1, XsGloveSnapshot jarg1_);
  public final static native long new_XsGloveSnapshot();
  public final static native void delete_XsGloveSnapshot(long jarg1);
  public final static native int XSFINGERSEGMENTCOUNT_get();
  public final static native long new_XsFingerData__SWIG_0();
  public final static native long new_XsFingerData__SWIG_1(long jarg1, XsQuaternion jarg1_, long jarg2, XsVector jarg2_, long jarg3, XsVector jarg3_, int jarg4);
  public final static native long new_XsFingerData__SWIG_2(long jarg1, XsFingerData jarg1_);
  public final static native void XsFingerData_clear(long jarg1, XsFingerData jarg1_);
  public final static native long XsFingerData_orientationIncrement(long jarg1, XsFingerData jarg1_);
  public final static native long XsFingerData_velocityIncrement(long jarg1, XsFingerData jarg1_);
  public final static native long XsFingerData_mag(long jarg1, XsFingerData jarg1_);
  public final static native int XsFingerData_flags(long jarg1, XsFingerData jarg1_);
  public final static native void XsFingerData_swap(long jarg1, XsFingerData jarg1_, long jarg2, XsFingerData jarg2_);
  public final static native void swap__SWIG_4(long jarg1, XsFingerData jarg1_, long jarg2, XsFingerData jarg2_);
  public final static native void delete_XsFingerData(long jarg1);
  public final static native long new_XsGloveData__SWIG_0();
  public final static native long new_XsGloveData__SWIG_1(int jarg1, int jarg2, long jarg3, XsFingerData jarg3_);
  public final static native long new_XsGloveData__SWIG_2(long jarg1, XsGloveData jarg1_);
  public final static native long XsGloveData_frameNumber(long jarg1, XsGloveData jarg1_);
  public final static native int XsGloveData_validSampleFlags(long jarg1, XsGloveData jarg1_);
  public final static native int XsGloveData_fingerSegmentCount();
  public final static native long XsGloveData_fingerData(long jarg1, XsGloveData jarg1_, int jarg2);
  public final static native void XsGloveData_swap(long jarg1, XsGloveData jarg1_, long jarg2, XsGloveData jarg2_);
  public final static native void swap__SWIG_5(long jarg1, XsGloveData jarg1_, long jarg2, XsGloveData jarg2_);
  public final static native void delete_XsGloveData(long jarg1);
  public final static native long new_XsDataPacket__SWIG_0(long jarg1, XsMessage jarg1_);
  public final static native long new_XsDataPacket__SWIG_1();
  public final static native long new_XsDataPacket__SWIG_2(long jarg1, XsDataPacket jarg1_);
  public final static native void delete_XsDataPacket(long jarg1);
  public final static native void XsDataPacket_swap(long jarg1, XsDataPacket jarg1_, long jarg2, XsDataPacket jarg2_);
  public final static native void XsDataPacket_clear__SWIG_0(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native void XsDataPacket_clear__SWIG_1(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_empty(long jarg1, XsDataPacket jarg1_);
  public final static native long XsDataPacket_deviceId(long jarg1, XsDataPacket jarg1_);
  public final static native int XsDataPacket_itemCount(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setMessage(long jarg1, XsDataPacket jarg1_, long jarg2, XsMessage jarg2_);
  public final static native long XsDataPacket_toMessage(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setDeviceId(long jarg1, XsDataPacket jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native int XsDataPacket_dataFormat(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_rawAcceleration(long jarg1, XsDataPacket jarg1_);
  public final static native long XsDataPacket_rawAccelerationConverted(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRawAcceleration(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRawAcceleration(long jarg1, XsDataPacket jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawGyroscopeData(long jarg1, XsDataPacket jarg1_);
  public final static native long XsDataPacket_rawGyroscopeDataConverted(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRawGyroscopeData(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRawGyroscopeData(long jarg1, XsDataPacket jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawGyroscopeTemperatureData(long jarg1, XsDataPacket jarg1_);
  public final static native long XsDataPacket_rawGyroscopeTemperatureDataConverted(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRawGyroscopeTemperatureData(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRawGyroscopeTemperatureData(long jarg1, XsDataPacket jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawMagneticField(long jarg1, XsDataPacket jarg1_);
  public final static native long XsDataPacket_rawMagneticFieldConverted(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRawMagneticField(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRawMagneticField(long jarg1, XsDataPacket jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native int XsDataPacket_rawTemperature(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRawTemperature(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRawTemperature(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_rawData(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRawData(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRawData(long jarg1, XsDataPacket jarg1_, long jarg2, XsScrData jarg2_);
  public final static native long XsDataPacket_velocityIncrement(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsVelocityIncrement(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setVelocityIncrement(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native long XsDataPacket_calibratedAcceleration(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsCalibratedAcceleration(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setCalibratedAcceleration(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native long XsDataPacket_orientationIncrement(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsOrientationIncrement(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setOrientationIncrement(long jarg1, XsDataPacket jarg1_, long jarg2, XsQuaternion jarg2_);
  public final static native long XsDataPacket_calibratedGyroscopeData(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsCalibratedGyroscopeData(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setCalibratedGyroscopeData(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native long XsDataPacket_calibratedMagneticField(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsCalibratedMagneticField(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setCalibratedMagneticField(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native long XsDataPacket_correctedMagneticField(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsCorrectedMagneticField(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setCorrectedMagneticField(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native long XsDataPacket_calibratedData(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsCalibratedData(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setCalibratedData(long jarg1, XsDataPacket jarg1_, long jarg2, XsCalibratedData jarg2_);
  public final static native long XsDataPacket_orientationQuaternion__SWIG_0(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_orientationQuaternion__SWIG_1(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setOrientationQuaternion(long jarg1, XsDataPacket jarg1_, long jarg2, XsQuaternion jarg2_, int jarg3);
  public final static native long XsDataPacket_orientationEuler__SWIG_0(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_orientationEuler__SWIG_1(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setOrientationEuler(long jarg1, XsDataPacket jarg1_, long jarg2, XsEuler jarg2_, int jarg3);
  public final static native long XsDataPacket_orientationMatrix__SWIG_0(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_orientationMatrix__SWIG_1(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setOrientationMatrix(long jarg1, XsDataPacket jarg1_, long jarg2, XsMatrix jarg2_, int jarg3);
  public final static native boolean XsDataPacket_containsOrientation(long jarg1, XsDataPacket jarg1_);
  public final static native int XsDataPacket_orientationIdentifier(long jarg1, XsDataPacket jarg1_);
  public final static native int XsDataPacket_coordinateSystemOrientation(long jarg1, XsDataPacket jarg1_);
  public final static native long XsDataPacket_sdiData(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsSdiData(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setSdiData(long jarg1, XsDataPacket jarg1_, long jarg2, XsSdiData jarg2_);
  public final static native long XsDataPacket_gloveData(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native boolean XsDataPacket_containsGloveData__SWIG_0(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native boolean XsDataPacket_containsGloveData__SWIG_1(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setGloveData(long jarg1, XsDataPacket jarg1_, long jarg2, XsGloveData jarg2_, int jarg3);
  public final static native long XsDataPacket_storedDeviceId(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsStoredDeviceId(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setStoredDeviceId(long jarg1, XsDataPacket jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native int XsDataPacket_storedLocationId(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsStoredLocationId(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setStoredLocationId(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_status(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsStatus(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsDetailedStatus(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setStatus(long jarg1, XsDataPacket jarg1_, long jarg2);
  public final static native void XsDataPacket_setStatusByte(long jarg1, XsDataPacket jarg1_, short jarg2);
  public final static native short XsDataPacket_packetCounter8(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsPacketCounter8(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setPacketCounter8(long jarg1, XsDataPacket jarg1_, short jarg2);
  public final static native int XsDataPacket_packetCounter(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsPacketCounter(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setPacketCounter(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_packetCounter32(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsPacketCounter32(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setPacketCounter32(long jarg1, XsDataPacket jarg1_, long jarg2);
  public final static native long XsDataPacket_sampleTimeFine(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsSampleTimeFine(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setSampleTimeFine(long jarg1, XsDataPacket jarg1_, long jarg2);
  public final static native long XsDataPacket_sampleTimeCoarse(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsSampleTimeCoarse(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setSampleTimeCoarse(long jarg1, XsDataPacket jarg1_, long jarg2);
  public final static native java.math.BigInteger XsDataPacket_sampleTime64(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsSampleTime64(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setSampleTime64(long jarg1, XsDataPacket jarg1_, java.math.BigInteger jarg2);
  public final static native long XsDataPacket_freeAcceleration(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsFreeAcceleration(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setFreeAcceleration(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native double XsDataPacket_temperature(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsTemperature(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setTemperature(long jarg1, XsDataPacket jarg1_, double jarg2);
  public final static native long XsDataPacket_pressure(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsPressure(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsPressureAge(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setPressure(long jarg1, XsDataPacket jarg1_, long jarg2, XsPressure jarg2_);
  public final static native long XsDataPacket_analogIn1Data(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsAnalogIn1Data(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setAnalogIn1Data(long jarg1, XsDataPacket jarg1_, long jarg2, XsAnalogInData jarg2_);
  public final static native long XsDataPacket_analogIn2Data(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsAnalogIn2Data(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setAnalogIn2Data(long jarg1, XsDataPacket jarg1_, long jarg2, XsAnalogInData jarg2_);
  public final static native long XsDataPacket_positionLLA(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsPositionLLA(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setPositionLLA(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native long XsDataPacket_latitudeLongitude(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsLatitudeLongitude(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setLatitudeLongitude(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native double XsDataPacket_altitude(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsAltitude(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setAltitude(long jarg1, XsDataPacket jarg1_, double jarg2);
  public final static native double XsDataPacket_altitudeMsl(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsAltitudeMsl(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setAltitudeMsl(long jarg1, XsDataPacket jarg1_, double jarg2);
  public final static native long XsDataPacket_velocity__SWIG_0(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_velocity__SWIG_1(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsVelocity(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setVelocity(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_, int jarg3);
  public final static native int XsDataPacket_velocityIdentifier(long jarg1, XsDataPacket jarg1_);
  public final static native int XsDataPacket_coordinateSystemVelocity(long jarg1, XsDataPacket jarg1_);
  public final static native long XsDataPacket_utcTime(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsUtcTime(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setUtcTime(long jarg1, XsDataPacket jarg1_, long jarg2, XsTimeInfo jarg2_);
  public final static native long XsDataPacket_frameRange(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsFrameRange(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setFrameRange(long jarg1, XsDataPacket jarg1_, long jarg2, XsRange jarg2_);
  public final static native int XsDataPacket_rssi(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRssi(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRssi(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_rawGnssPvtData(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRawGnssPvtData(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRawGnssPvtData(long jarg1, XsDataPacket jarg1_, long jarg2, XsRawGnssPvtData jarg2_);
  public final static native short XsDataPacket_gnssAge(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsGnssAge(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setGnssAge(long jarg1, XsDataPacket jarg1_, short jarg2);
  public final static native long XsDataPacket_rawGnssSatInfo(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRawGnssSatInfo(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRawGnssSatInfo(long jarg1, XsDataPacket jarg1_, long jarg2, XsRawGnssSatInfo jarg2_);
  public final static native long XsDataPacket_gnssPvtPulse(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsGnssPvtPulse(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setGnssPvtPulse(long jarg1, XsDataPacket jarg1_, long jarg2);
  public final static native long XsDataPacket_fullSnapshot(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsFullSnapshot(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setFullSnapshot(long jarg1, XsDataPacket jarg1_, long jarg2, XsSnapshot jarg2_, boolean jarg3);
  public final static native long XsDataPacket_awindaSnapshot(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsAwindaSnapshot(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setAwindaSnapshot(long jarg1, XsDataPacket jarg1_, long jarg2, XsSnapshot jarg2_, boolean jarg3);
  public final static native boolean XsDataPacket_isAwindaSnapshotARetransmission(long jarg1, XsDataPacket jarg1_);
  public final static native long XsDataPacket_gloveSnapshot(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native boolean XsDataPacket_containsGloveSnapshot__SWIG_0(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native boolean XsDataPacket_containsGloveSnapshot__SWIG_1(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setGloveSnapshot(long jarg1, XsDataPacket jarg1_, long jarg2, XsGloveSnapshot jarg2_, boolean jarg3, int jarg4);
  public final static native long XsDataPacket_merge__SWIG_0(long jarg1, XsDataPacket jarg1_, long jarg2, XsDataPacket jarg2_, boolean jarg3);
  public final static native long XsDataPacket_merge__SWIG_1(long jarg1, XsDataPacket jarg1_, long jarg2, XsDataPacket jarg2_);
  public final static native void XsDataPacket_setTimeOfArrival(long jarg1, XsDataPacket jarg1_, long jarg2, XsTimeStamp jarg2_);
  public final static native long XsDataPacket_timeOfArrival(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setEstimatedTimeOfSampling(long jarg1, XsDataPacket jarg1_, long jarg2, XsTimeStamp jarg2_);
  public final static native long XsDataPacket_estimatedTimeOfSampling(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setPacketId(long jarg1, XsDataPacket jarg1_, long jarg2);
  public final static native long XsDataPacket_packetId(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setTriggerIndication(long jarg1, XsDataPacket jarg1_, int jarg2, long jarg3, XsTriggerIndicationData jarg3_);
  public final static native boolean XsDataPacket_containsTriggerIndication(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_triggerIndication(long jarg1, XsDataPacket jarg1_, int jarg2);
  public final static native long XsDataPacket_rawBlob(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRawBlob(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRawBlob(long jarg1, XsDataPacket jarg1_, long jarg2, XsByteArray jarg2_);
  public final static native long XsDataPacket_accelerationHR(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsAccelerationHR(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setAccelerationHR(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native long XsDataPacket_rateOfTurnHR(long jarg1, XsDataPacket jarg1_);
  public final static native boolean XsDataPacket_containsRateOfTurnHR(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_setRateOfTurnHR(long jarg1, XsDataPacket jarg1_, long jarg2, XsVector jarg2_);
  public final static native void XsDataPacket_m_deviceId_set(long jarg1, XsDataPacket jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native long XsDataPacket_m_deviceId_get(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_m_toa_set(long jarg1, XsDataPacket jarg1_, long jarg2, XsTimeStamp jarg2_);
  public final static native long XsDataPacket_m_toa_get(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_m_packetId_set(long jarg1, XsDataPacket jarg1_, long jarg2);
  public final static native long XsDataPacket_m_packetId_get(long jarg1, XsDataPacket jarg1_);
  public final static native void XsDataPacket_m_etos_set(long jarg1, XsDataPacket jarg1_, long jarg2, XsTimeStamp jarg2_);
  public final static native long XsDataPacket_m_etos_get(long jarg1, XsDataPacket jarg1_);
  public final static native int XFPK_Unknown_get();
  public final static native int XFPK_Base_get();
  public final static native int XFPK_Additional_get();
  public final static native int XFPK_Heading_get();
  public final static native int XS_MAX_FILTERPROFILES_get();
  public final static native int XS_LEN_FILTERPROFILELABEL_TERM_get();
  public final static native int XS_LEN_FILTERPROFILEKIND_TERM_get();
  public final static native int XS_MAX_FILTERPROFILES_IN_MT_get();
  public final static native long new_XsFilterProfile__SWIG_0(short jarg1, short jarg2, String jarg3, String jarg4, char jarg5, short jarg6, short jarg7);
  public final static native long new_XsFilterProfile__SWIG_1(short jarg1, short jarg2, String jarg3, String jarg4, char jarg5, short jarg6);
  public final static native long new_XsFilterProfile__SWIG_2(short jarg1, short jarg2, String jarg3, String jarg4, char jarg5);
  public final static native long new_XsFilterProfile__SWIG_3(short jarg1, short jarg2, String jarg3, String jarg4);
  public final static native long new_XsFilterProfile__SWIG_4(short jarg1, short jarg2, String jarg3);
  public final static native long new_XsFilterProfile__SWIG_5(short jarg1, short jarg2);
  public final static native long new_XsFilterProfile__SWIG_6(short jarg1);
  public final static native long new_XsFilterProfile__SWIG_7();
  public final static native long new_XsFilterProfile__SWIG_8(long jarg1, XsFilterProfile jarg1_);
  public final static native void delete_XsFilterProfile(long jarg1);
  public final static native boolean XsFilterProfile_empty(long jarg1, XsFilterProfile jarg1_);
  public final static native long XsFilterProfile_toXsString(long jarg1, XsFilterProfile jarg1_);
  public final static native short XsFilterProfile_type(long jarg1, XsFilterProfile jarg1_);
  public final static native short XsFilterProfile_version(long jarg1, XsFilterProfile jarg1_);
  public final static native String XsFilterProfile_label(long jarg1, XsFilterProfile jarg1_);
  public final static native String XsFilterProfile_kind(long jarg1, XsFilterProfile jarg1_);
  public final static native char XsFilterProfile_filterType(long jarg1, XsFilterProfile jarg1_);
  public final static native short XsFilterProfile_filterMajor(long jarg1, XsFilterProfile jarg1_);
  public final static native short XsFilterProfile_filterMinor(long jarg1, XsFilterProfile jarg1_);
  public final static native void XsFilterProfile_setType(long jarg1, XsFilterProfile jarg1_, short jarg2);
  public final static native void XsFilterProfile_setVersion(long jarg1, XsFilterProfile jarg1_, short jarg2);
  public final static native void XsFilterProfile_setLabel(long jarg1, XsFilterProfile jarg1_, String jarg2);
  public final static native void XsFilterProfile_setKind(long jarg1, XsFilterProfile jarg1_, String jarg2);
  public final static native void XsFilterProfile_setFilterType(long jarg1, XsFilterProfile jarg1_, char jarg2);
  public final static native void XsFilterProfile_setFilterVersion(long jarg1, XsFilterProfile jarg1_, short jarg2, short jarg3);
  public final static native void XsFilterProfile_swap(long jarg1, XsFilterProfile jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native void swap__SWIG_6(long jarg1, XsFilterProfile jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native long new_XsByteArrayImpl__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsByteArrayImpl__SWIG_1(long jarg1);
  public final static native long new_XsByteArrayImpl__SWIG_2();
  public final static native long new_XsByteArrayImpl__SWIG_3(long jarg1, XsByteArrayImpl jarg1_);
  public final static native long new_XsByteArrayImpl__SWIG_4(long jarg1, long jarg2, int jarg3);
  public final static native void delete_XsByteArrayImpl(long jarg1);
  public final static native void XsByteArrayImpl_clear(long jarg1, XsByteArrayImpl jarg1_);
  public final static native void XsByteArrayImpl_reserve(long jarg1, XsByteArrayImpl jarg1_, long jarg2);
  public final static native long XsByteArrayImpl_reserved(long jarg1, XsByteArrayImpl jarg1_);
  public final static native long XsByteArrayImpl_descriptor(long jarg1, XsByteArrayImpl jarg1_);
  public final static native short XsByteArrayImpl_value(long jarg1, XsByteArrayImpl jarg1_, long jarg2);
  public final static native short XsByteArrayImpl_first(long jarg1, XsByteArrayImpl jarg1_);
  public final static native short XsByteArrayImpl_last(long jarg1, XsByteArrayImpl jarg1_);
  public final static native short XsByteArrayImpl_at__SWIG_0(long jarg1, XsByteArrayImpl jarg1_, long jarg2);
  public final static native void XsByteArrayImpl_insert__SWIG_0(long jarg1, XsByteArrayImpl jarg1_, short jarg2, long jarg3);
  public final static native void XsByteArrayImpl_insert__SWIG_1(long jarg1, XsByteArrayImpl jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsByteArrayImpl_push_back(long jarg1, XsByteArrayImpl jarg1_, short jarg2);
  public final static native void XsByteArrayImpl_pop_back__SWIG_0(long jarg1, XsByteArrayImpl jarg1_, long jarg2);
  public final static native void XsByteArrayImpl_pop_back__SWIG_1(long jarg1, XsByteArrayImpl jarg1_);
  public final static native void XsByteArrayImpl_push_front(long jarg1, XsByteArrayImpl jarg1_, short jarg2);
  public final static native void XsByteArrayImpl_pop_front__SWIG_0(long jarg1, XsByteArrayImpl jarg1_, long jarg2);
  public final static native void XsByteArrayImpl_pop_front__SWIG_1(long jarg1, XsByteArrayImpl jarg1_);
  public final static native long XsByteArrayImpl_size(long jarg1, XsByteArrayImpl jarg1_);
  public final static native void XsByteArrayImpl_erase__SWIG_0(long jarg1, XsByteArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsByteArrayImpl_erase__SWIG_1(long jarg1, XsByteArrayImpl jarg1_, long jarg2);
  public final static native void XsByteArrayImpl_assign(long jarg1, XsByteArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsByteArrayImpl_resize(long jarg1, XsByteArrayImpl jarg1_, long jarg2);
  public final static native void XsByteArrayImpl_setSize(long jarg1, XsByteArrayImpl jarg1_, long jarg2);
  public final static native void XsByteArrayImpl_append(long jarg1, XsByteArrayImpl jarg1_, long jarg2, XsByteArrayImpl jarg2_);
  public final static native boolean XsByteArrayImpl_empty(long jarg1, XsByteArrayImpl jarg1_);
  public final static native boolean XsByteArrayImpl_badAlloc(long jarg1, XsByteArrayImpl jarg1_);
  public final static native void XsByteArrayImpl_swap__SWIG_0(long jarg1, XsByteArrayImpl jarg1_, long jarg2, XsByteArrayImpl jarg2_);
  public final static native void XsByteArrayImpl_swap__SWIG_1(long jarg1, XsByteArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native long XsByteArrayImpl_find(long jarg1, XsByteArrayImpl jarg1_, short jarg2);
  public final static native boolean XsByteArrayImpl_contains(long jarg1, XsByteArrayImpl jarg1_, short jarg2);
  public final static native void XsByteArrayImpl_removeDuplicates(long jarg1, XsByteArrayImpl jarg1_);
  public final static native void XsByteArrayImpl_removeDuplicatesPredicate(long jarg1, XsByteArrayImpl jarg1_, long jarg2);
  public final static native void XsByteArrayImpl_sort(long jarg1, XsByteArrayImpl jarg1_);
  public final static native void XsByteArrayImpl_reverse(long jarg1, XsByteArrayImpl jarg1_);
  public final static native long new_XsIntArrayImpl__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsIntArrayImpl__SWIG_1(long jarg1);
  public final static native long new_XsIntArrayImpl__SWIG_2();
  public final static native long new_XsIntArrayImpl__SWIG_3(long jarg1, XsIntArrayImpl jarg1_);
  public final static native long new_XsIntArrayImpl__SWIG_4(long jarg1, long jarg2, int jarg3);
  public final static native void delete_XsIntArrayImpl(long jarg1);
  public final static native void XsIntArrayImpl_clear(long jarg1, XsIntArrayImpl jarg1_);
  public final static native void XsIntArrayImpl_reserve(long jarg1, XsIntArrayImpl jarg1_, long jarg2);
  public final static native long XsIntArrayImpl_reserved(long jarg1, XsIntArrayImpl jarg1_);
  public final static native long XsIntArrayImpl_descriptor(long jarg1, XsIntArrayImpl jarg1_);
  public final static native int XsIntArrayImpl_value(long jarg1, XsIntArrayImpl jarg1_, long jarg2);
  public final static native int XsIntArrayImpl_first(long jarg1, XsIntArrayImpl jarg1_);
  public final static native int XsIntArrayImpl_last(long jarg1, XsIntArrayImpl jarg1_);
  public final static native int XsIntArrayImpl_at__SWIG_0(long jarg1, XsIntArrayImpl jarg1_, long jarg2);
  public final static native void XsIntArrayImpl_insert__SWIG_0(long jarg1, XsIntArrayImpl jarg1_, int jarg2, long jarg3);
  public final static native void XsIntArrayImpl_insert__SWIG_1(long jarg1, XsIntArrayImpl jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsIntArrayImpl_push_back__SWIG_0(long jarg1, XsIntArrayImpl jarg1_, int jarg2);
  public final static native void XsIntArrayImpl_pop_back__SWIG_0(long jarg1, XsIntArrayImpl jarg1_, long jarg2);
  public final static native void XsIntArrayImpl_pop_back__SWIG_1(long jarg1, XsIntArrayImpl jarg1_);
  public final static native void XsIntArrayImpl_push_front(long jarg1, XsIntArrayImpl jarg1_, int jarg2);
  public final static native void XsIntArrayImpl_pop_front__SWIG_0(long jarg1, XsIntArrayImpl jarg1_, long jarg2);
  public final static native void XsIntArrayImpl_pop_front__SWIG_1(long jarg1, XsIntArrayImpl jarg1_);
  public final static native long XsIntArrayImpl_size(long jarg1, XsIntArrayImpl jarg1_);
  public final static native void XsIntArrayImpl_erase__SWIG_0(long jarg1, XsIntArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsIntArrayImpl_erase__SWIG_1(long jarg1, XsIntArrayImpl jarg1_, long jarg2);
  public final static native void XsIntArrayImpl_assign(long jarg1, XsIntArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsIntArrayImpl_resize(long jarg1, XsIntArrayImpl jarg1_, long jarg2);
  public final static native void XsIntArrayImpl_setSize(long jarg1, XsIntArrayImpl jarg1_, long jarg2);
  public final static native void XsIntArrayImpl_append(long jarg1, XsIntArrayImpl jarg1_, long jarg2, XsIntArrayImpl jarg2_);
  public final static native boolean XsIntArrayImpl_empty(long jarg1, XsIntArrayImpl jarg1_);
  public final static native boolean XsIntArrayImpl_badAlloc(long jarg1, XsIntArrayImpl jarg1_);
  public final static native void XsIntArrayImpl_swap__SWIG_0(long jarg1, XsIntArrayImpl jarg1_, long jarg2, XsIntArrayImpl jarg2_);
  public final static native void XsIntArrayImpl_swap__SWIG_1(long jarg1, XsIntArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native long XsIntArrayImpl_find(long jarg1, XsIntArrayImpl jarg1_, int jarg2);
  public final static native boolean XsIntArrayImpl_contains(long jarg1, XsIntArrayImpl jarg1_, int jarg2);
  public final static native void XsIntArrayImpl_removeDuplicates(long jarg1, XsIntArrayImpl jarg1_);
  public final static native void XsIntArrayImpl_removeDuplicatesPredicate(long jarg1, XsIntArrayImpl jarg1_, long jarg2);
  public final static native void XsIntArrayImpl_sort(long jarg1, XsIntArrayImpl jarg1_);
  public final static native void XsIntArrayImpl_reverse(long jarg1, XsIntArrayImpl jarg1_);
  public final static native void XsIntArrayImpl_push_back__SWIG_1(long jarg1, XsIntArrayImpl jarg1_, int jarg2);
  public final static native long new_XsDeviceIdArrayImpl__SWIG_0(long jarg1, long jarg2, XsDeviceId jarg2_);
  public final static native long new_XsDeviceIdArrayImpl__SWIG_1(long jarg1);
  public final static native long new_XsDeviceIdArrayImpl__SWIG_2();
  public final static native long new_XsDeviceIdArrayImpl__SWIG_3(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native long new_XsDeviceIdArrayImpl__SWIG_4(long jarg1, XsDeviceId jarg1_, long jarg2, int jarg3);
  public final static native void delete_XsDeviceIdArrayImpl(long jarg1);
  public final static native void XsDeviceIdArrayImpl_clear(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native void XsDeviceIdArrayImpl_reserve(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2);
  public final static native long XsDeviceIdArrayImpl_reserved(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native long XsDeviceIdArrayImpl_descriptor(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native long XsDeviceIdArrayImpl_value(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2);
  public final static native long XsDeviceIdArrayImpl_first(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native long XsDeviceIdArrayImpl_last(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native long XsDeviceIdArrayImpl_at__SWIG_0(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2);
  public final static native void XsDeviceIdArrayImpl_insert__SWIG_0(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, XsDeviceId jarg2_, long jarg3);
  public final static native void XsDeviceIdArrayImpl_insert__SWIG_1(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, XsDeviceId jarg2_, long jarg3, long jarg4);
  public final static native void XsDeviceIdArrayImpl_push_back(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native void XsDeviceIdArrayImpl_pop_back__SWIG_0(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2);
  public final static native void XsDeviceIdArrayImpl_pop_back__SWIG_1(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native void XsDeviceIdArrayImpl_push_front(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native void XsDeviceIdArrayImpl_pop_front__SWIG_0(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2);
  public final static native void XsDeviceIdArrayImpl_pop_front__SWIG_1(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native long XsDeviceIdArrayImpl_size(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native void XsDeviceIdArrayImpl_erase__SWIG_0(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsDeviceIdArrayImpl_erase__SWIG_1(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2);
  public final static native void XsDeviceIdArrayImpl_assign(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, long jarg3, XsDeviceId jarg3_);
  public final static native void XsDeviceIdArrayImpl_resize(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2);
  public final static native void XsDeviceIdArrayImpl_setSize(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2);
  public final static native void XsDeviceIdArrayImpl_append(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, XsDeviceIdArrayImpl jarg2_);
  public final static native boolean XsDeviceIdArrayImpl_empty(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native boolean XsDeviceIdArrayImpl_badAlloc(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native void XsDeviceIdArrayImpl_swap__SWIG_0(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, XsDeviceIdArrayImpl jarg2_);
  public final static native void XsDeviceIdArrayImpl_swap__SWIG_1(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native long XsDeviceIdArrayImpl_find(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native boolean XsDeviceIdArrayImpl_contains(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native void XsDeviceIdArrayImpl_removeDuplicates(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native void XsDeviceIdArrayImpl_removeDuplicatesPredicate(long jarg1, XsDeviceIdArrayImpl jarg1_, long jarg2);
  public final static native void XsDeviceIdArrayImpl_sort(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native void XsDeviceIdArrayImpl_reverse(long jarg1, XsDeviceIdArrayImpl jarg1_);
  public final static native long new_XsDataPacketPtrArrayImpl__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsDataPacketPtrArrayImpl__SWIG_1(long jarg1);
  public final static native long new_XsDataPacketPtrArrayImpl__SWIG_2();
  public final static native long new_XsDataPacketPtrArrayImpl__SWIG_3(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native long new_XsDataPacketPtrArrayImpl__SWIG_4(long jarg1, long jarg2, int jarg3);
  public final static native void delete_XsDataPacketPtrArrayImpl(long jarg1);
  public final static native void XsDataPacketPtrArrayImpl_clear(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native void XsDataPacketPtrArrayImpl_reserve(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2);
  public final static native long XsDataPacketPtrArrayImpl_reserved(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native long XsDataPacketPtrArrayImpl_descriptor(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native long XsDataPacketPtrArrayImpl_value(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2);
  public final static native long XsDataPacketPtrArrayImpl_first(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native long XsDataPacketPtrArrayImpl_last(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native long XsDataPacketPtrArrayImpl_at__SWIG_0(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2);
  public final static native void XsDataPacketPtrArrayImpl_insert__SWIG_0(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, XsDataPacket jarg2_, long jarg3);
  public final static native void XsDataPacketPtrArrayImpl_insert__SWIG_1(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsDataPacketPtrArrayImpl_push_back(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, XsDataPacket jarg2_);
  public final static native void XsDataPacketPtrArrayImpl_pop_back__SWIG_0(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2);
  public final static native void XsDataPacketPtrArrayImpl_pop_back__SWIG_1(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native void XsDataPacketPtrArrayImpl_push_front(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, XsDataPacket jarg2_);
  public final static native void XsDataPacketPtrArrayImpl_pop_front__SWIG_0(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2);
  public final static native void XsDataPacketPtrArrayImpl_pop_front__SWIG_1(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native long XsDataPacketPtrArrayImpl_size(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native void XsDataPacketPtrArrayImpl_erase__SWIG_0(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsDataPacketPtrArrayImpl_erase__SWIG_1(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2);
  public final static native void XsDataPacketPtrArrayImpl_assign(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsDataPacketPtrArrayImpl_resize(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2);
  public final static native void XsDataPacketPtrArrayImpl_setSize(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2);
  public final static native void XsDataPacketPtrArrayImpl_append(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, XsDataPacketPtrArrayImpl jarg2_);
  public final static native boolean XsDataPacketPtrArrayImpl_empty(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native boolean XsDataPacketPtrArrayImpl_badAlloc(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native void XsDataPacketPtrArrayImpl_swap__SWIG_0(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, XsDataPacketPtrArrayImpl jarg2_);
  public final static native void XsDataPacketPtrArrayImpl_swap__SWIG_1(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native long XsDataPacketPtrArrayImpl_find(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, XsDataPacket jarg2_);
  public final static native boolean XsDataPacketPtrArrayImpl_contains(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2, XsDataPacket jarg2_);
  public final static native void XsDataPacketPtrArrayImpl_removeDuplicates(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native void XsDataPacketPtrArrayImpl_removeDuplicatesPredicate(long jarg1, XsDataPacketPtrArrayImpl jarg1_, long jarg2);
  public final static native void XsDataPacketPtrArrayImpl_sort(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native void XsDataPacketPtrArrayImpl_reverse(long jarg1, XsDataPacketPtrArrayImpl jarg1_);
  public final static native long new_XsStringArrayImpl__SWIG_0(long jarg1, long jarg2, XsString jarg2_);
  public final static native long new_XsStringArrayImpl__SWIG_1(long jarg1);
  public final static native long new_XsStringArrayImpl__SWIG_2();
  public final static native long new_XsStringArrayImpl__SWIG_3(long jarg1, XsStringArrayImpl jarg1_);
  public final static native long new_XsStringArrayImpl__SWIG_4(long jarg1, XsString jarg1_, long jarg2, int jarg3);
  public final static native void delete_XsStringArrayImpl(long jarg1);
  public final static native void XsStringArrayImpl_clear(long jarg1, XsStringArrayImpl jarg1_);
  public final static native void XsStringArrayImpl_reserve(long jarg1, XsStringArrayImpl jarg1_, long jarg2);
  public final static native long XsStringArrayImpl_reserved(long jarg1, XsStringArrayImpl jarg1_);
  public final static native long XsStringArrayImpl_descriptor(long jarg1, XsStringArrayImpl jarg1_);
  public final static native long XsStringArrayImpl_value(long jarg1, XsStringArrayImpl jarg1_, long jarg2);
  public final static native long XsStringArrayImpl_first(long jarg1, XsStringArrayImpl jarg1_);
  public final static native long XsStringArrayImpl_last(long jarg1, XsStringArrayImpl jarg1_);
  public final static native long XsStringArrayImpl_at__SWIG_0(long jarg1, XsStringArrayImpl jarg1_, long jarg2);
  public final static native void XsStringArrayImpl_insert__SWIG_0(long jarg1, XsStringArrayImpl jarg1_, long jarg2, XsString jarg2_, long jarg3);
  public final static native void XsStringArrayImpl_insert__SWIG_1(long jarg1, XsStringArrayImpl jarg1_, long jarg2, XsString jarg2_, long jarg3, long jarg4);
  public final static native void XsStringArrayImpl_push_back(long jarg1, XsStringArrayImpl jarg1_, long jarg2, XsString jarg2_);
  public final static native void XsStringArrayImpl_pop_back__SWIG_0(long jarg1, XsStringArrayImpl jarg1_, long jarg2);
  public final static native void XsStringArrayImpl_pop_back__SWIG_1(long jarg1, XsStringArrayImpl jarg1_);
  public final static native void XsStringArrayImpl_push_front(long jarg1, XsStringArrayImpl jarg1_, long jarg2, XsString jarg2_);
  public final static native void XsStringArrayImpl_pop_front__SWIG_0(long jarg1, XsStringArrayImpl jarg1_, long jarg2);
  public final static native void XsStringArrayImpl_pop_front__SWIG_1(long jarg1, XsStringArrayImpl jarg1_);
  public final static native long XsStringArrayImpl_size(long jarg1, XsStringArrayImpl jarg1_);
  public final static native void XsStringArrayImpl_erase__SWIG_0(long jarg1, XsStringArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsStringArrayImpl_erase__SWIG_1(long jarg1, XsStringArrayImpl jarg1_, long jarg2);
  public final static native void XsStringArrayImpl_assign(long jarg1, XsStringArrayImpl jarg1_, long jarg2, long jarg3, XsString jarg3_);
  public final static native void XsStringArrayImpl_resize(long jarg1, XsStringArrayImpl jarg1_, long jarg2);
  public final static native void XsStringArrayImpl_setSize(long jarg1, XsStringArrayImpl jarg1_, long jarg2);
  public final static native void XsStringArrayImpl_append(long jarg1, XsStringArrayImpl jarg1_, long jarg2, XsStringArrayImpl jarg2_);
  public final static native boolean XsStringArrayImpl_empty(long jarg1, XsStringArrayImpl jarg1_);
  public final static native boolean XsStringArrayImpl_badAlloc(long jarg1, XsStringArrayImpl jarg1_);
  public final static native void XsStringArrayImpl_swap__SWIG_0(long jarg1, XsStringArrayImpl jarg1_, long jarg2, XsStringArrayImpl jarg2_);
  public final static native void XsStringArrayImpl_swap__SWIG_1(long jarg1, XsStringArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native long XsStringArrayImpl_find(long jarg1, XsStringArrayImpl jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsStringArrayImpl_contains(long jarg1, XsStringArrayImpl jarg1_, long jarg2, XsString jarg2_);
  public final static native void XsStringArrayImpl_removeDuplicates(long jarg1, XsStringArrayImpl jarg1_);
  public final static native void XsStringArrayImpl_removeDuplicatesPredicate(long jarg1, XsStringArrayImpl jarg1_, long jarg2);
  public final static native void XsStringArrayImpl_sort(long jarg1, XsStringArrayImpl jarg1_);
  public final static native void XsStringArrayImpl_reverse(long jarg1, XsStringArrayImpl jarg1_);
  public final static native long new_XsPortInfoArrayImpl__SWIG_0(long jarg1, long jarg2, XsPortInfo jarg2_);
  public final static native long new_XsPortInfoArrayImpl__SWIG_1(long jarg1);
  public final static native long new_XsPortInfoArrayImpl__SWIG_2();
  public final static native long new_XsPortInfoArrayImpl__SWIG_3(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native long new_XsPortInfoArrayImpl__SWIG_4(long jarg1, XsPortInfo jarg1_, long jarg2, int jarg3);
  public final static native void delete_XsPortInfoArrayImpl(long jarg1);
  public final static native void XsPortInfoArrayImpl_clear(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native void XsPortInfoArrayImpl_reserve(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2);
  public final static native long XsPortInfoArrayImpl_reserved(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native long XsPortInfoArrayImpl_descriptor(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native long XsPortInfoArrayImpl_value(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2);
  public final static native long XsPortInfoArrayImpl_first(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native long XsPortInfoArrayImpl_last(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native long XsPortInfoArrayImpl_at__SWIG_0(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2);
  public final static native void XsPortInfoArrayImpl_insert__SWIG_0(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, XsPortInfo jarg2_, long jarg3);
  public final static native void XsPortInfoArrayImpl_insert__SWIG_1(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, XsPortInfo jarg2_, long jarg3, long jarg4);
  public final static native void XsPortInfoArrayImpl_push_back(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, XsPortInfo jarg2_);
  public final static native void XsPortInfoArrayImpl_pop_back__SWIG_0(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2);
  public final static native void XsPortInfoArrayImpl_pop_back__SWIG_1(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native void XsPortInfoArrayImpl_push_front(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, XsPortInfo jarg2_);
  public final static native void XsPortInfoArrayImpl_pop_front__SWIG_0(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2);
  public final static native void XsPortInfoArrayImpl_pop_front__SWIG_1(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native long XsPortInfoArrayImpl_size(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native void XsPortInfoArrayImpl_erase__SWIG_0(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsPortInfoArrayImpl_erase__SWIG_1(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2);
  public final static native void XsPortInfoArrayImpl_assign(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, long jarg3, XsPortInfo jarg3_);
  public final static native void XsPortInfoArrayImpl_resize(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2);
  public final static native void XsPortInfoArrayImpl_setSize(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2);
  public final static native void XsPortInfoArrayImpl_append(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, XsPortInfoArrayImpl jarg2_);
  public final static native boolean XsPortInfoArrayImpl_empty(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native boolean XsPortInfoArrayImpl_badAlloc(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native void XsPortInfoArrayImpl_swap__SWIG_0(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, XsPortInfoArrayImpl jarg2_);
  public final static native void XsPortInfoArrayImpl_swap__SWIG_1(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native long XsPortInfoArrayImpl_find(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, XsPortInfo jarg2_);
  public final static native boolean XsPortInfoArrayImpl_contains(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2, XsPortInfo jarg2_);
  public final static native void XsPortInfoArrayImpl_removeDuplicates(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native void XsPortInfoArrayImpl_removeDuplicatesPredicate(long jarg1, XsPortInfoArrayImpl jarg1_, long jarg2);
  public final static native void XsPortInfoArrayImpl_sort(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native void XsPortInfoArrayImpl_reverse(long jarg1, XsPortInfoArrayImpl jarg1_);
  public final static native long new_XsFilterProfileArrayImpl__SWIG_0(long jarg1, long jarg2, XsFilterProfile jarg2_);
  public final static native long new_XsFilterProfileArrayImpl__SWIG_1(long jarg1);
  public final static native long new_XsFilterProfileArrayImpl__SWIG_2();
  public final static native long new_XsFilterProfileArrayImpl__SWIG_3(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native long new_XsFilterProfileArrayImpl__SWIG_4(long jarg1, XsFilterProfile jarg1_, long jarg2, int jarg3);
  public final static native void delete_XsFilterProfileArrayImpl(long jarg1);
  public final static native void XsFilterProfileArrayImpl_clear(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native void XsFilterProfileArrayImpl_reserve(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2);
  public final static native long XsFilterProfileArrayImpl_reserved(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native long XsFilterProfileArrayImpl_descriptor(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native long XsFilterProfileArrayImpl_value(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2);
  public final static native long XsFilterProfileArrayImpl_first(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native long XsFilterProfileArrayImpl_last(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native long XsFilterProfileArrayImpl_at__SWIG_0(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2);
  public final static native void XsFilterProfileArrayImpl_insert__SWIG_0(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, XsFilterProfile jarg2_, long jarg3);
  public final static native void XsFilterProfileArrayImpl_insert__SWIG_1(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, XsFilterProfile jarg2_, long jarg3, long jarg4);
  public final static native void XsFilterProfileArrayImpl_push_back(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native void XsFilterProfileArrayImpl_pop_back__SWIG_0(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2);
  public final static native void XsFilterProfileArrayImpl_pop_back__SWIG_1(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native void XsFilterProfileArrayImpl_push_front(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native void XsFilterProfileArrayImpl_pop_front__SWIG_0(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2);
  public final static native void XsFilterProfileArrayImpl_pop_front__SWIG_1(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native long XsFilterProfileArrayImpl_size(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native void XsFilterProfileArrayImpl_erase__SWIG_0(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native void XsFilterProfileArrayImpl_erase__SWIG_1(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2);
  public final static native void XsFilterProfileArrayImpl_assign(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, long jarg3, XsFilterProfile jarg3_);
  public final static native void XsFilterProfileArrayImpl_resize(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2);
  public final static native void XsFilterProfileArrayImpl_setSize(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2);
  public final static native void XsFilterProfileArrayImpl_append(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, XsFilterProfileArrayImpl jarg2_);
  public final static native boolean XsFilterProfileArrayImpl_empty(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native boolean XsFilterProfileArrayImpl_badAlloc(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native void XsFilterProfileArrayImpl_swap__SWIG_0(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, XsFilterProfileArrayImpl jarg2_);
  public final static native void XsFilterProfileArrayImpl_swap__SWIG_1(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, long jarg3);
  public final static native long XsFilterProfileArrayImpl_find(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native boolean XsFilterProfileArrayImpl_contains(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native void XsFilterProfileArrayImpl_removeDuplicates(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native void XsFilterProfileArrayImpl_removeDuplicatesPredicate(long jarg1, XsFilterProfileArrayImpl jarg1_, long jarg2);
  public final static native void XsFilterProfileArrayImpl_sort(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native void XsFilterProfileArrayImpl_reverse(long jarg1, XsFilterProfileArrayImpl jarg1_);
  public final static native long g_xsStringArrayDescriptor_get();
  public final static native long new_XsStringArray__SWIG_0(long jarg1, long jarg2, XsString jarg2_);
  public final static native long new_XsStringArray__SWIG_1(long jarg1);
  public final static native long new_XsStringArray__SWIG_2();
  public final static native long new_XsStringArray__SWIG_3(long jarg1, XsStringArray jarg1_);
  public final static native long new_XsStringArray__SWIG_4(long jarg1, XsString jarg1_, long jarg2, int jarg3);
  public final static native long XsStringArray_join(long jarg1, XsStringArray jarg1_, long jarg2, XsString jarg2_);
  public final static native void XsStringArray_fromSplicedString(long jarg1, XsStringArray jarg1_, long jarg2, XsString jarg2_, long jarg3, XsString jarg3_);
  public final static native long new_XsStringArray__SWIG_5(long jarg1, XsString jarg1_, long jarg2, XsString jarg2_);
  public final static native long XsStringArray_find__SWIG_0(long jarg1, XsStringArray jarg1_, long jarg2, XsString jarg2_, boolean jarg3);
  public final static native long XsStringArray_find__SWIG_1(long jarg1, XsStringArray jarg1_, long jarg2, XsString jarg2_);
  public final static native long XsStringArray_findPrefix__SWIG_0(long jarg1, XsStringArray jarg1_, long jarg2, XsString jarg2_, boolean jarg3);
  public final static native long XsStringArray_findPrefix__SWIG_1(long jarg1, XsStringArray jarg1_, long jarg2, XsString jarg2_);
  public final static native void delete_XsStringArray(long jarg1);
  public final static native long g_xsIntArrayDescriptor_get();
  public final static native long new_XsIntArray__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsIntArray__SWIG_1(long jarg1);
  public final static native long new_XsIntArray__SWIG_2();
  public final static native long new_XsIntArray__SWIG_3(long jarg1, XsIntArray jarg1_);
  public final static native long new_XsIntArray__SWIG_4(long jarg1, long jarg2, int jarg3);
  public final static native void delete_XsIntArray(long jarg1);
  public final static native long g_xsDeviceIdArrayDescriptor_get();
  public final static native long new_XsDeviceIdArray__SWIG_0(long jarg1, long jarg2, XsDeviceId jarg2_);
  public final static native long new_XsDeviceIdArray__SWIG_1(long jarg1);
  public final static native long new_XsDeviceIdArray__SWIG_2();
  public final static native long new_XsDeviceIdArray__SWIG_3(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long new_XsDeviceIdArray__SWIG_4(long jarg1, XsDeviceId jarg1_, long jarg2, int jarg3);
  public final static native void delete_XsDeviceIdArray(long jarg1);
  public final static native long g_xsPortInfoArrayDescriptor_get();
  public final static native long new_XsPortInfoArray__SWIG_0(long jarg1, long jarg2, XsPortInfo jarg2_);
  public final static native long new_XsPortInfoArray__SWIG_1(long jarg1);
  public final static native long new_XsPortInfoArray__SWIG_2();
  public final static native long new_XsPortInfoArray__SWIG_3(long jarg1, XsPortInfoArray jarg1_);
  public final static native long new_XsPortInfoArray__SWIG_4(long jarg1, XsPortInfo jarg1_, long jarg2, int jarg3);
  public final static native void delete_XsPortInfoArray(long jarg1);
  public final static native long g_xsDataPacketPtrArrayDescriptor_get();
  public final static native long new_XsDataPacketPtrArray__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsDataPacketPtrArray__SWIG_1(long jarg1);
  public final static native long new_XsDataPacketPtrArray__SWIG_2();
  public final static native long new_XsDataPacketPtrArray__SWIG_3(long jarg1, XsDataPacketPtrArray jarg1_);
  public final static native long new_XsDataPacketPtrArray__SWIG_4(long jarg1, long jarg2, int jarg3);
  public final static native void delete_XsDataPacketPtrArray(long jarg1);
  public final static native long g_xsFilterProfileArrayDescriptor_get();
  public final static native long new_XsFilterProfileArray__SWIG_0(long jarg1, long jarg2, XsFilterProfile jarg2_);
  public final static native long new_XsFilterProfileArray__SWIG_1(long jarg1);
  public final static native long new_XsFilterProfileArray__SWIG_2();
  public final static native long new_XsFilterProfileArray__SWIG_3(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long new_XsFilterProfileArray__SWIG_4(long jarg1, XsFilterProfile jarg1_, long jarg2, int jarg3);
  public final static native void delete_XsFilterProfileArray(long jarg1);
  public final static native void gJournal_set(long jarg1);
  public final static native long gJournal_get();
  public final static native void xsdotsdkDllVersion(long jarg1, XsVersion jarg1_);
  public final static native void xsdotsdkDllPath(long jarg1, XsString jarg1_);
  public final static native int XDS_Config_get();
  public final static native int XDS_Idle_get();
  public final static native int XsDotFirmwareUpdateResult_Success_get();
  public final static native int XsDotFirmwareUpdateResult_NoUsb_get();
  public final static native int XsDotFirmwareUpdateResult_NoFwFile_get();
  public final static native int XsDotFirmwareUpdateResult_IncorrectFwFile_get();
  public final static native int XsDotFirmwareUpdateResult_CommunicationFailure_get();
  public final static native int XsDotFirmwareUpdateResult_FailedToStart_get();
  public final static native int XsDotFirmwareUpdateResult_FailedToEnd_get();
  public final static native int XsDotFirmwareUpdateResult_BootloaderFail_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorPreamble_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorCmd_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorOperating_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorPacketCrc_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorImageCrc_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorIndex_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorFlash_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorDischarging_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorRecording_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorDownloadNoCurl_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorDownloadNoCurlPerform_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorDownloadNoCurlGetInfo_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorDownloadCurlEmptyContent_get();
  public final static native int XsDotFirmwareUpdateResult_ErrorUnknown_get();
  public final static native int XsDotFirmwareUpdateResult_NoNewFWAvailable_get();
  public final static native int XsDotFirmwareUpdateResult_InitialValue_get();
  public final static native String XsDotFirmwareUpdateResultToString(int jarg1);
  public final static native long new_XsDotCallback();
  public final static native void delete_XsDotCallback(long jarg1);
  public final static native void XsDotCallback_onAdvertisementFound(long jarg1, XsDotCallback jarg1_, long jarg2, XsPortInfo jarg2_);
  public final static native void XsDotCallback_onAdvertisementFoundSwigExplicitXsDotCallback(long jarg1, XsDotCallback jarg1_, long jarg2, XsPortInfo jarg2_);
  public final static native void XsDotCallback_onBatteryUpdated(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, int jarg3, int jarg4);
  public final static native void XsDotCallback_onBatteryUpdatedSwigExplicitXsDotCallback(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, int jarg3, int jarg4);
  public final static native void XsDotCallback_onLiveDataAvailable(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, long jarg3, XsDataPacket jarg3_);
  public final static native void XsDotCallback_onLiveDataAvailableSwigExplicitXsDotCallback(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, long jarg3, XsDataPacket jarg3_);
  public final static native void XsDotCallback_onProgressUpdated__SWIG_0(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, int jarg3, int jarg4, long jarg5, XsString jarg5_);
  public final static native void XsDotCallback_onProgressUpdatedSwigExplicitXsDotCallback__SWIG_0(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, int jarg3, int jarg4, long jarg5, XsString jarg5_);
  public final static native void XsDotCallback_onDeviceUpdateDone(long jarg1, XsDotCallback jarg1_, long jarg2, XsPortInfo jarg2_, int jarg3);
  public final static native void XsDotCallback_onDeviceUpdateDoneSwigExplicitXsDotCallback(long jarg1, XsDotCallback jarg1_, long jarg2, XsPortInfo jarg2_, int jarg3);
  public final static native void XsDotCallback_onError(long jarg1, XsDotCallback jarg1_, int jarg2, long jarg3, XsString jarg3_);
  public final static native void XsDotCallback_onErrorSwigExplicitXsDotCallback(long jarg1, XsDotCallback jarg1_, int jarg2, long jarg3, XsString jarg3_);
  public final static native void XsDotCallback_onRecordingStopped(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_);
  public final static native void XsDotCallback_onRecordingStoppedSwigExplicitXsDotCallback(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_);
  public final static native void XsDotCallback_onDeviceStateChanged(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, int jarg3, int jarg4);
  public final static native void XsDotCallback_onDeviceStateChangedSwigExplicitXsDotCallback(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, int jarg3, int jarg4);
  public final static native void XsDotCallback_onButtonClicked(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, long jarg3);
  public final static native void XsDotCallback_onButtonClickedSwigExplicitXsDotCallback(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, long jarg3);
  public final static native void XsDotCallback_onRecordedDataAvailable__SWIG_0(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, long jarg3, XsDataPacket jarg3_);
  public final static native void XsDotCallback_onRecordedDataAvailableSwigExplicitXsDotCallback__SWIG_0(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_, long jarg3, XsDataPacket jarg3_);
  public final static native void XsDotCallback_onRecordedDataDone__SWIG_0(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_);
  public final static native void XsDotCallback_onRecordedDataDoneSwigExplicitXsDotCallback__SWIG_0(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotDevice jarg2_);
  public final static native void XsDotCallback_onProgressUpdated__SWIG_1(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotUsbDevice jarg2_, int jarg3, int jarg4, long jarg5, XsString jarg5_);
  public final static native void XsDotCallback_onProgressUpdatedSwigExplicitXsDotCallback__SWIG_1(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotUsbDevice jarg2_, int jarg3, int jarg4, long jarg5, XsString jarg5_);
  public final static native void XsDotCallback_onRecordedDataAvailable__SWIG_1(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotUsbDevice jarg2_, long jarg3, XsDataPacket jarg3_);
  public final static native void XsDotCallback_onRecordedDataAvailableSwigExplicitXsDotCallback__SWIG_1(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotUsbDevice jarg2_, long jarg3, XsDataPacket jarg3_);
  public final static native void XsDotCallback_onRecordedDataDone__SWIG_1(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotUsbDevice jarg2_);
  public final static native void XsDotCallback_onRecordedDataDoneSwigExplicitXsDotCallback__SWIG_1(long jarg1, XsDotCallback jarg1_, long jarg2, XsDotUsbDevice jarg2_);
  public final static native void XsDotCallback_director_connect(XsDotCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void XsDotCallback_change_ownership(XsDotCallback obj, long cptr, boolean take_or_release);
  public final static native long g_xsDotDevicePtrArrayDescriptor_get();
  public final static native long new_XsDotDevicePtrArray__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsDotDevicePtrArray__SWIG_1(long jarg1);
  public final static native long new_XsDotDevicePtrArray__SWIG_2();
  public final static native long new_XsDotDevicePtrArray__SWIG_3(long jarg1, XsDotDevicePtrArray jarg1_);
  public final static native long new_XsDotDevicePtrArray__SWIG_4(long jarg1, long jarg2, int jarg3);
  public final static native void delete_XsDotDevicePtrArray(long jarg1);
  public final static native int XsPayloadMode_Undefined_get();
  public final static native int XsPayloadMode_HighFidelitywMag_get();
  public final static native int XsPayloadMode_ExtendedQuaternion_get();
  public final static native int XsPayloadMode_CompleteQuaternion_get();
  public final static native int XsPayloadMode_OrientationEuler_get();
  public final static native int XsPayloadMode_OrientationQuaternion_get();
  public final static native int XsPayloadMode_FreeAcceleration_get();
  public final static native int XsPayloadMode_ExtendedEuler_get();
  public final static native int XsPayloadMode_MFM_get();
  public final static native int XsPayloadMode_CompleteEuler_get();
  public final static native int XsPayloadMode_HighFidelity_get();
  public final static native int XsPayloadMode_DeltaQuantitieswMag_get();
  public final static native int XsPayloadMode_DeltaQuantities_get();
  public final static native int XsPayloadMode_RateQuantitieswMag_get();
  public final static native int XsPayloadMode_RateQuantities_get();
  public final static native int XsPayloadMode_CustomMode1_get();
  public final static native int XsPayloadMode_CustomMode2_get();
  public final static native int XsPayloadMode_CustomMode3_get();
  public final static native int XsPayloadMode_CustomMode4_get();
  public final static native int XsPayloadMode_CustomMode5_get();
  public final static native String XsPayloadModeToString(int jarg1);
  public final static native int XsLogOptions_Quaternion_get();
  public final static native int XsLogOptions_Euler_get();
  public final static native int XsLogOptions_QuaternionAndEuler_get();
  public final static native int XsLogOptions_OrientationMask_get();
  public final static native int XsRecordingAcknowledgeResult_Success_get();
  public final static native int XsRecordingAcknowledgeResult_InvalidCmd_get();
  public final static native int XsRecordingAcknowledgeResult_FlashProcessBusy_get();
  public final static native int XsRecordingAcknowledgeResult_IdleState_get();
  public final static native int XsRecordingAcknowledgeResult_OnErasing_get();
  public final static native int XsRecordingAcknowledgeResult_OnRecording_get();
  public final static native int XsRecordingAcknowledgeResult_OnExportFlashInfo_get();
  public final static native int XsRecordingAcknowledgeResult_OnExportRecordingFileInfo_get();
  public final static native int XsRecordingAcknowledgeResult_OnExportRecordingFileData_get();
  public final static native int XsRecordingAcknowledgeResult_Unknown_get();
  public final static native String XsRecordingAcknowledgeResultToString(int jarg1);
  public final static native boolean isValidXsRecordingAcknowledgeResult(int jarg1);
  public final static native int RecordingData_Timestamp_get();
  public final static native int RecordingData_Quaternion_get();
  public final static native int RecordingData_iQ_get();
  public final static native int RecordingData_iV_get();
  public final static native int RecordingData_Euler_get();
  public final static native int RecordingData_dQ_get();
  public final static native int RecordingData_dV_get();
  public final static native int RecordingData_Acceleration_get();
  public final static native int RecordingData_AngularVelocity_get();
  public final static native int RecordingData_MagneticField_get();
  public final static native int RecordingData_Status_get();
  public final static native int RecordingData_ClipCountAcc_get();
  public final static native int RecordingData_ClipCountGyro_get();
  public final static native boolean isValidXsRecordingExportDataField(int jarg1);
  public final static native long new_XsRecordingInfo__SWIG_0();
  public final static native long new_XsRecordingInfo__SWIG_1(long jarg1, int jarg2, long jarg3);
  public final static native boolean XsRecordingInfo_empty(long jarg1, XsRecordingInfo jarg1_);
  public final static native long XsRecordingInfo_startUTC(long jarg1, XsRecordingInfo jarg1_);
  public final static native int XsRecordingInfo_totalRecordingTime(long jarg1, XsRecordingInfo jarg1_);
  public final static native long XsRecordingInfo_storageSize(long jarg1, XsRecordingInfo jarg1_);
  public final static native void delete_XsRecordingInfo(long jarg1);
  public final static native long new_XsRecordingTimeInfo__SWIG_0();
  public final static native long new_XsRecordingTimeInfo__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native long new_XsRecordingTimeInfo__SWIG_2(long jarg1, int jarg2);
  public final static native long new_XsRecordingTimeInfo__SWIG_3(long jarg1);
  public final static native long XsRecordingTimeInfo_startUTC(long jarg1, XsRecordingTimeInfo jarg1_);
  public final static native int XsRecordingTimeInfo_totalRecordingTime(long jarg1, XsRecordingTimeInfo jarg1_);
  public final static native int XsRecordingTimeInfo_remainingRecordingTime(long jarg1, XsRecordingTimeInfo jarg1_);
  public final static native void delete_XsRecordingTimeInfo(long jarg1);
  public final static native int XsSyncAcknowledgeResult_Success_get();
  public final static native int XsSyncAcknowledgeResult_Unknown_get();
  public final static native String XsSyncAcknowledgeResultToString(int jarg1);
  public final static native boolean isValidXsSyncAcknowledgeResult(int jarg1);
  public final static native long new_XsException__SWIG_0(long jarg1, XsException jarg1_);
  public final static native long new_XsException__SWIG_1(int jarg1, long jarg2, XsString jarg2_);
  public final static native long new_XsException__SWIG_2(long jarg1, XsString jarg1_);
  public final static native void delete_XsException(long jarg1);
  public final static native int XsException_code(long jarg1, XsException jarg1_);
  public final static native String XsException_what(long jarg1, XsException jarg1_);
  public final static native long XsException_text(long jarg1, XsException jarg1_);
  public final static native int XRM_StoreAlignmentMatrix_get();
  public final static native int XRM_Heading_get();
  public final static native int XRM_Object_get();
  public final static native int XRM_Inclination_get();
  public final static native int XRM_Alignment_get();
  public final static native int XRM_Global_get();
  public final static native int XRM_DefaultHeading_get();
  public final static native int XRM_DefaultInclination_get();
  public final static native int XRM_DefaultAlignment_get();
  public final static native int XEM_Ignore_get();
  public final static native int XEM_IncreasePacketCounter_get();
  public final static native int XEM_IncreasePacketCounterAndSendError_get();
  public final static native int XEM_SendErrorAndGoToConfig_get();
  public final static native void XsDotDevice_readDeviceControl(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_firmwareVersion(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_hardwareVersion(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_buildInfo(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_bluetoothAddress(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_productCode(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_softDeviceVersion(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_deviceTagName(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_setDeviceTagName(long jarg1, XsDotDevice jarg1_, long jarg2, XsString jarg2_);
  public final static native int XsDotDevice_outputRate(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_setOutputRate(long jarg1, XsDotDevice jarg1_, int jarg2);
  public final static native boolean XsDotDevice_identify(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_powerOff(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_setPowerOnByUsb(long jarg1, XsDotDevice jarg1_, boolean jarg2);
  public final static native boolean XsDotDevice_setPowerSavingOptions(long jarg1, XsDotDevice jarg1_, int jarg2, int jarg3);
  public final static native int XsDotDevice_getAdvertisementPowerSavingTimeout(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_getConnectedPowerSavingTimeout(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_isCharging(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_batteryLevel(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_onboardFilterProfile(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_setOnboardFilterProfile(long jarg1, XsDotDevice jarg1_, long jarg2, XsString jarg2_);
  public final static native long XsDotDevice_getAvailableFilterProfiles(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_getCharacteristicStrings(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_restoreFactoryDefaults(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_payloadMode(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_startMeasurement(long jarg1, XsDotDevice jarg1_, int jarg2);
  public final static native boolean XsDotDevice_stopMeasurement(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_getRecordingAckResult(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_startRecording(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_startTimedRecording(long jarg1, XsDotDevice jarg1_, int jarg2);
  public final static native boolean XsDotDevice_stopRecording(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_eraseFlash(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_getRecordingTime(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_recordingCount(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_usedFlashSizeTotal(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_getRecordingInfo(long jarg1, XsDotDevice jarg1_, int jarg2);
  public final static native boolean XsDotDevice_selectExportData(long jarg1, XsDotDevice jarg1_, long jarg2, XsIntArray jarg2_);
  public final static native boolean XsDotDevice_startExportRecording(long jarg1, XsDotDevice jarg1_, int jarg2);
  public final static native boolean XsDotDevice_stopExportRecording(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_startSync(long jarg1, XsDotDevice jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsDotDevice_stopSync(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_getSyncStatus(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_getSyncResult(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_resetOrientation(long jarg1, XsDotDevice jarg1_, int jarg2);
  public final static native long XsDotDevice_checkForFirmwareUpdate(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_checkForFirmwareRollback(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_startFirmwareUpdateFromServer(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_startFirmwareRollbackFromServer(long jarg1, XsDotDevice jarg1_);
  public final static native void XsDotDevice_startFirmwareUpdateFromFile(long jarg1, XsDotDevice jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsDotDevice_startMagneticFieldMapping(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_stopMagneticFieldMapping(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_processMagneticFieldMapping(long jarg1, XsDotDevice jarg1_, long jarg2, XsString jarg2_, long jarg3, XsByteArray jarg3_);
  public final static native boolean XsDotDevice_storeMagneticFieldMapping(long jarg1, XsDotDevice jarg1_, long jarg2, XsByteArray jarg2_);
  public final static native boolean XsDotDevice_gotoConfig(long jarg1, XsDotDevice jarg1_);
  public final static native boolean XsDotDevice_enableLogging(long jarg1, XsDotDevice jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsDotDevice_disableLogging(long jarg1, XsDotDevice jarg1_);
  public final static native void XsDotDevice_setLogOptions(long jarg1, XsDotDevice jarg1_, int jarg2);
  public final static native void XsDotDevice_writeDeviceSettingsToFile__SWIG_0(long jarg1, XsDotDevice jarg1_, int jarg2);
  public final static native void XsDotDevice_writeDeviceSettingsToFile__SWIG_1(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_portName(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_portInfo(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_deviceId(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_lastResult(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_lastResultText(long jarg1, XsDotDevice jarg1_);
  public final static native int XsDotDevice_deviceState(long jarg1, XsDotDevice jarg1_);
  public final static native void XsDotDevice_addRef(long jarg1, XsDotDevice jarg1_);
  public final static native void XsDotDevice_removeRef(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotDevice_refCounter(long jarg1, XsDotDevice jarg1_);
  public final static native void XsDotDevice_clearXsDotCallbackHandlers__SWIG_0(long jarg1, XsDotDevice jarg1_, boolean jarg2);
  public final static native void XsDotDevice_clearXsDotCallbackHandlers__SWIG_1(long jarg1, XsDotDevice jarg1_);
  public final static native long XsDotUsbDevice_productCode(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotUsbDevice_bluetoothAddress(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotUsbDevice_deviceTagName(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotUsbDevice_serialNumber(long jarg1, XsDotUsbDevice jarg1_);
  public final static native boolean XsDotUsbDevice_eraseFlash(long jarg1, XsDotUsbDevice jarg1_);
  public final static native int XsDotUsbDevice_recordingCount(long jarg1, XsDotUsbDevice jarg1_);
  public final static native int XsDotUsbDevice_usedFlashSizeTotal(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotUsbDevice_getRecordingInfo(long jarg1, XsDotUsbDevice jarg1_, int jarg2);
  public final static native boolean XsDotUsbDevice_selectExportData(long jarg1, XsDotUsbDevice jarg1_, long jarg2, XsIntArray jarg2_);
  public final static native boolean XsDotUsbDevice_startExportRecording(long jarg1, XsDotUsbDevice jarg1_, int jarg2);
  public final static native boolean XsDotUsbDevice_stopExportRecording(long jarg1, XsDotUsbDevice jarg1_);
  public final static native boolean XsDotUsbDevice_enableLogging(long jarg1, XsDotUsbDevice jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsDotUsbDevice_disableLogging(long jarg1, XsDotUsbDevice jarg1_);
  public final static native void XsDotUsbDevice_setLogOptions(long jarg1, XsDotUsbDevice jarg1_, int jarg2);
  public final static native long XsDotUsbDevice_portName(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotUsbDevice_portInfo(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotUsbDevice_deviceId(long jarg1, XsDotUsbDevice jarg1_);
  public final static native int XsDotUsbDevice_lastResult(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotUsbDevice_lastResultText(long jarg1, XsDotUsbDevice jarg1_);
  public final static native int XsDotUsbDevice_deviceState(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotUsbDevice_firmwareVersion(long jarg1, XsDotUsbDevice jarg1_);
  public final static native void XsDotUsbDevice_addRef(long jarg1, XsDotUsbDevice jarg1_);
  public final static native void XsDotUsbDevice_removeRef(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotUsbDevice_refCounter(long jarg1, XsDotUsbDevice jarg1_);
  public final static native void XsDotUsbDevice_clearXsDotCallbackHandlers__SWIG_0(long jarg1, XsDotUsbDevice jarg1_, boolean jarg2);
  public final static native void XsDotUsbDevice_clearXsDotCallbackHandlers__SWIG_1(long jarg1, XsDotUsbDevice jarg1_);
  public final static native long XsDotConnectionManager_construct();
  public final static native void XsDotConnectionManager_destruct(long jarg1, XsDotConnectionManager jarg1_);
  public final static native long XsDotConnectionManager_version();
  public final static native void XsDotConnectionManager_reset(long jarg1, XsDotConnectionManager jarg1_);
  public final static native long XsDotConnectionManager_getAvailableBluetoothAdapters(long jarg1, XsDotConnectionManager jarg1_);
  public final static native boolean XsDotConnectionManager_setPreferredBluetoothAdapter(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsDotConnectionManager_enableDeviceDetection(long jarg1, XsDotConnectionManager jarg1_);
  public final static native void XsDotConnectionManager_disableDeviceDetection(long jarg1, XsDotConnectionManager jarg1_);
  public final static native long XsDotConnectionManager_detectUsbDevices(long jarg1, XsDotConnectionManager jarg1_);
  public final static native boolean XsDotConnectionManager_openPort(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsPortInfo jarg2_);
  public final static native void XsDotConnectionManager_closePort(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsPortInfo jarg2_);
  public final static native long XsDotConnectionManager_device(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native long XsDotConnectionManager_usbDevice(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsDeviceId jarg2_);
  public final static native void XsDotConnectionManager_close(long jarg1, XsDotConnectionManager jarg1_);
  public final static native int XsDotConnectionManager_lastResult(long jarg1, XsDotConnectionManager jarg1_);
  public final static native long XsDotConnectionManager_lastResultText(long jarg1, XsDotConnectionManager jarg1_);
  public final static native boolean XsDotConnectionManager_startLogging(long jarg1, XsDotConnectionManager jarg1_);
  public final static native boolean XsDotConnectionManager_stopLogging(long jarg1, XsDotConnectionManager jarg1_);
  public final static native boolean XsDotConnectionManager_closeLogFile(long jarg1, XsDotConnectionManager jarg1_);
  public final static native boolean XsDotConnectionManager_startSync(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsString jarg2_);
  public final static native boolean XsDotConnectionManager_stopSync(long jarg1, XsDotConnectionManager jarg1_);
  public final static native void XsDotConnectionManager_clearXsDotCallbackHandlers__SWIG_0(long jarg1, XsDotConnectionManager jarg1_, boolean jarg2);
  public final static native void XsDotConnectionManager_clearXsDotCallbackHandlers__SWIG_1(long jarg1, XsDotConnectionManager jarg1_);
  public final static native void delete_XsDotConnectionManager(long jarg1);
  public final static native long new_XsDotConnectionManager();
  public final static native void XsDotConnectionManager_addXsDotCallbackHandler__SWIG_0(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsDotCallback jarg2_, boolean jarg3);
  public final static native void XsDotConnectionManager_addXsDotCallbackHandler__SWIG_1(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsDotCallback jarg2_);
  public final static native void XsDotConnectionManager_removeXsDotCallbackHandler__SWIG_0(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsDotCallback jarg2_, boolean jarg3);
  public final static native void XsDotConnectionManager_removeXsDotCallbackHandler__SWIG_1(long jarg1, XsDotConnectionManager jarg1_, long jarg2, XsDotCallback jarg2_);
  public final static native long XsString_SWIGUpcast(long jarg1);
  public final static native long XsVector3_SWIGUpcast(long jarg1);
  public final static native long XsStringArray_SWIGUpcast(long jarg1);
  public final static native long XsIntArray_SWIGUpcast(long jarg1);
  public final static native long XsDeviceIdArray_SWIGUpcast(long jarg1);
  public final static native long XsPortInfoArray_SWIGUpcast(long jarg1);
  public final static native long XsDataPacketPtrArray_SWIGUpcast(long jarg1);
  public final static native long XsFilterProfileArray_SWIGUpcast(long jarg1);

  public static void SwigDirector_XsDotCallback_onAdvertisementFound(XsDotCallback jself, long portInfo) {
    jself.onAdvertisementFound((portInfo == 0) ? null : new XsPortInfo(portInfo, false));
  }
  public static void SwigDirector_XsDotCallback_onBatteryUpdated(XsDotCallback jself, long device, int batteryLevel, int chargingStatus) {
    jself.onBatteryUpdated((device == 0) ? null : new XsDotDevice(device, false), batteryLevel, chargingStatus);
  }
  public static void SwigDirector_XsDotCallback_onLiveDataAvailable(XsDotCallback jself, long device, long packet) {
    jself.onLiveDataAvailable((device == 0) ? null : new XsDotDevice(device, false), (packet == 0) ? null : new XsDataPacket(packet, false));
  }
  public static void SwigDirector_XsDotCallback_onProgressUpdated__SWIG_0(XsDotCallback jself, long device, int current, int total, long identifier) {
    jself.onProgressUpdated((device == 0) ? null : new XsDotDevice(device, false), current, total, (identifier == 0) ? null : new XsString(identifier, false));
  }
  public static void SwigDirector_XsDotCallback_onDeviceUpdateDone(XsDotCallback jself, long portInfo, int result) {
    jself.onDeviceUpdateDone((portInfo == 0) ? null : new XsPortInfo(portInfo, false), XsDotFirmwareUpdateResult.swigToEnum(result));
  }
  public static void SwigDirector_XsDotCallback_onError(XsDotCallback jself, int result, long error) {
    jself.onError(XsResultValue.swigToEnum(result), (error == 0) ? null : new XsString(error, false));
  }
  public static void SwigDirector_XsDotCallback_onRecordingStopped(XsDotCallback jself, long device) {
    jself.onRecordingStopped((device == 0) ? null : new XsDotDevice(device, false));
  }
  public static void SwigDirector_XsDotCallback_onDeviceStateChanged(XsDotCallback jself, long dev, int newState, int oldState) {
    jself.onDeviceStateChanged((dev == 0) ? null : new XsDotDevice(dev, false), XsDeviceState.swigToEnum(newState), XsDeviceState.swigToEnum(oldState));
  }
  public static void SwigDirector_XsDotCallback_onButtonClicked(XsDotCallback jself, long dev, long timestamp) {
    jself.onButtonClicked((dev == 0) ? null : new XsDotDevice(dev, false), timestamp);
  }
  public static void SwigDirector_XsDotCallback_onRecordedDataAvailable__SWIG_0(XsDotCallback jself, long device, long packet) {
    jself.onRecordedDataAvailable((device == 0) ? null : new XsDotDevice(device, false), (packet == 0) ? null : new XsDataPacket(packet, false));
  }
  public static void SwigDirector_XsDotCallback_onRecordedDataDone__SWIG_0(XsDotCallback jself, long device) {
    jself.onRecordedDataDone((device == 0) ? null : new XsDotDevice(device, false));
  }
  public static void SwigDirector_XsDotCallback_onProgressUpdated__SWIG_1(XsDotCallback jself, long device, int current, int total, long identifier) {
    jself.onProgressUpdated((device == 0) ? null : new XsDotUsbDevice(device, false), current, total, (identifier == 0) ? null : new XsString(identifier, false));
  }
  public static void SwigDirector_XsDotCallback_onRecordedDataAvailable__SWIG_1(XsDotCallback jself, long device, long packet) {
    jself.onRecordedDataAvailable((device == 0) ? null : new XsDotUsbDevice(device, false), (packet == 0) ? null : new XsDataPacket(packet, false));
  }
  public static void SwigDirector_XsDotCallback_onRecordedDataDone__SWIG_1(XsDotCallback jself, long device) {
    jself.onRecordedDataDone((device == 0) ? null : new XsDotUsbDevice(device, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
