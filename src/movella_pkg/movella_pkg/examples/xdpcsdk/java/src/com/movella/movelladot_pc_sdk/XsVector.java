
//  Copyright (c) 2003-2023 Movella Technologies B.V. or subsidiaries worldwide.
//  All rights reserved.
//  
//  Redistribution and use in source and binary forms, with or without modification,
//  are permitted provided that the following conditions are met:
//  
//  1.	Redistributions of source code must retain the above copyright notice,
//  	this list of conditions and the following disclaimer.
//  
//  2.	Redistributions in binary form must reproduce the above copyright notice,
//  	this list of conditions and the following disclaimer in the documentation
//  	and/or other materials provided with the distribution.
//  
//  3.	Neither the names of the copyright holders nor the names of their contributors
//  	may be used to endorse or promote products derived from this software without
//  	specific prior written permission.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
//  THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
//  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY OR
//  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.movella.movelladot_pc_sdk;

public class XsVector {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected XsVector(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XsVector obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        movelladot_pc_sdkJNI.delete_XsVector(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public XsVector(long sz, SWIGTYPE_p_double src) {
    this(movelladot_pc_sdkJNI.new_XsVector__SWIG_0(sz, SWIGTYPE_p_double.getCPtr(src)), true);
  }

  public XsVector(long sz) {
    this(movelladot_pc_sdkJNI.new_XsVector__SWIG_1(sz), true);
  }

  public XsVector() {
    this(movelladot_pc_sdkJNI.new_XsVector__SWIG_2(), true);
  }

  public XsVector(XsVector other) {
    this(movelladot_pc_sdkJNI.new_XsVector__SWIG_3(XsVector.getCPtr(other), other), true);
  }

  public XsVector(SWIGTYPE_p_double ref, long sz, XsDataFlags flags_) {
    this(movelladot_pc_sdkJNI.new_XsVector__SWIG_4(SWIGTYPE_p_double.getCPtr(ref), sz, flags_.swigValue()), true);
  }

  public XsVector(SWIGTYPE_p_double ref, long sz) {
    this(movelladot_pc_sdkJNI.new_XsVector__SWIG_5(SWIGTYPE_p_double.getCPtr(ref), sz), true);
  }

  public XsVector(XsVector other, SWIGTYPE_p_double ref, long sz, XsDataFlags flags_) {
    this(movelladot_pc_sdkJNI.new_XsVector__SWIG_6(XsVector.getCPtr(other), other, SWIGTYPE_p_double.getCPtr(ref), sz, flags_.swigValue()), true);
  }

  public XsVector(XsVector other, SWIGTYPE_p_double ref, long sz) {
    this(movelladot_pc_sdkJNI.new_XsVector__SWIG_7(XsVector.getCPtr(other), other, SWIGTYPE_p_double.getCPtr(ref), sz), true);
  }

  public XsVector(XsQuaternion quat, double deltaT) {
    this(movelladot_pc_sdkJNI.new_XsVector__SWIG_8(XsQuaternion.getCPtr(quat), quat, deltaT), true);
  }

  public void assign(long sz, SWIGTYPE_p_double src) {
    movelladot_pc_sdkJNI.XsVector_assign(swigCPtr, this, sz, SWIGTYPE_p_double.getCPtr(src));
  }

  public void setSize(long sz) {
    movelladot_pc_sdkJNI.XsVector_setSize(swigCPtr, this, sz);
  }

  public long size() {
    return movelladot_pc_sdkJNI.XsVector_size(swigCPtr, this);
  }

  public SWIGTYPE_p_double data() {
    long cPtr = movelladot_pc_sdkJNI.XsVector_data(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public SWIGTYPE_p_double at(long index) {
    return new SWIGTYPE_p_double(movelladot_pc_sdkJNI.XsVector_at__SWIG_0(swigCPtr, this, index), false);
  }

  public double value(long index) {
    return movelladot_pc_sdkJNI.XsVector_value(swigCPtr, this, index);
  }

  public void setValue(long index, double val) {
    movelladot_pc_sdkJNI.XsVector_setValue(swigCPtr, this, index, val);
  }

  public double dotProduct(XsVector v) {
    return movelladot_pc_sdkJNI.XsVector_dotProduct(swigCPtr, this, XsVector.getCPtr(v), v);
  }

  public double cartesianLength() {
    return movelladot_pc_sdkJNI.XsVector_cartesianLength(swigCPtr, this);
  }

  public void normalize() {
    movelladot_pc_sdkJNI.XsVector_normalize(swigCPtr, this);
  }

  public void setZero() {
    movelladot_pc_sdkJNI.XsVector_setZero(swigCPtr, this);
  }

  public boolean empty() {
    return movelladot_pc_sdkJNI.XsVector_empty(swigCPtr, this);
  }

  public XsVector angularVelocityFromQuaternion(XsQuaternion quat, double deltaT) {
    return new XsVector(movelladot_pc_sdkJNI.XsVector_angularVelocityFromQuaternion(swigCPtr, this, XsQuaternion.getCPtr(quat), quat, deltaT), false);
  }

  public boolean isEqual(XsVector other, double epsilon) {
    return movelladot_pc_sdkJNI.XsVector_isEqual(swigCPtr, this, XsVector.getCPtr(other), other, epsilon);
  }

  public SWIGTYPE_p_std__vectorT_double_t toVector() {
    return new SWIGTYPE_p_std__vectorT_double_t(movelladot_pc_sdkJNI.XsVector_toVector(swigCPtr, this), true);
  }

  public void zero() {
    movelladot_pc_sdkJNI.XsVector_zero(swigCPtr, this);
  }

  public void fill(double val) {
    movelladot_pc_sdkJNI.XsVector_fill(swigCPtr, this, val);
  }

  public void swap(XsVector b) {
    movelladot_pc_sdkJNI.XsVector_swap(swigCPtr, this, XsVector.getCPtr(b), b);
  }

  public void append(XsVector other) {
    movelladot_pc_sdkJNI.XsVector_append(swigCPtr, this, XsVector.getCPtr(other), other);
  }

  public void clear() {
    movelladot_pc_sdkJNI.XsVector_clear(swigCPtr, this);
  }

  public void reverse() {
    movelladot_pc_sdkJNI.XsVector_reverse(swigCPtr, this);
  }

}
