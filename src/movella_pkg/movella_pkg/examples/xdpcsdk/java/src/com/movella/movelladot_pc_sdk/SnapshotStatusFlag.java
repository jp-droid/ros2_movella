
//  Copyright (c) 2003-2023 Movella Technologies B.V. or subsidiaries worldwide.
//  All rights reserved.
//  
//  Redistribution and use in source and binary forms, with or without modification,
//  are permitted provided that the following conditions are met:
//  
//  1.	Redistributions of source code must retain the above copyright notice,
//  	this list of conditions and the following disclaimer.
//  
//  2.	Redistributions in binary form must reproduce the above copyright notice,
//  	this list of conditions and the following disclaimer in the documentation
//  	and/or other materials provided with the distribution.
//  
//  3.	Neither the names of the copyright holders nor the names of their contributors
//  	may be used to endorse or promote products derived from this software without
//  	specific prior written permission.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
//  THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
//  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY OR
//  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.movella.movelladot_pc_sdk;

public final class SnapshotStatusFlag {
  public final static SnapshotStatusFlag FSFL_ClipAccX = new SnapshotStatusFlag("FSFL_ClipAccX", movelladot_pc_sdkJNI.FSFL_ClipAccX_get());
  public final static SnapshotStatusFlag FSFL_ClipAccY = new SnapshotStatusFlag("FSFL_ClipAccY", movelladot_pc_sdkJNI.FSFL_ClipAccY_get());
  public final static SnapshotStatusFlag FSFL_ClipAccZ = new SnapshotStatusFlag("FSFL_ClipAccZ", movelladot_pc_sdkJNI.FSFL_ClipAccZ_get());
  public final static SnapshotStatusFlag FSFL_ClipAccMask = new SnapshotStatusFlag("FSFL_ClipAccMask", movelladot_pc_sdkJNI.FSFL_ClipAccMask_get());
  public final static SnapshotStatusFlag FSFL_ClipGyrX = new SnapshotStatusFlag("FSFL_ClipGyrX", movelladot_pc_sdkJNI.FSFL_ClipGyrX_get());
  public final static SnapshotStatusFlag FSFL_ClipGyrY = new SnapshotStatusFlag("FSFL_ClipGyrY", movelladot_pc_sdkJNI.FSFL_ClipGyrY_get());
  public final static SnapshotStatusFlag FSFL_ClipGyrZ = new SnapshotStatusFlag("FSFL_ClipGyrZ", movelladot_pc_sdkJNI.FSFL_ClipGyrZ_get());
  public final static SnapshotStatusFlag FSFL_ClipGyrMask = new SnapshotStatusFlag("FSFL_ClipGyrMask", movelladot_pc_sdkJNI.FSFL_ClipGyrMask_get());
  public final static SnapshotStatusFlag FSFL_ClipMagX = new SnapshotStatusFlag("FSFL_ClipMagX", movelladot_pc_sdkJNI.FSFL_ClipMagX_get());
  public final static SnapshotStatusFlag FSFL_ClipMagY = new SnapshotStatusFlag("FSFL_ClipMagY", movelladot_pc_sdkJNI.FSFL_ClipMagY_get());
  public final static SnapshotStatusFlag FSFL_ClipMagZ = new SnapshotStatusFlag("FSFL_ClipMagZ", movelladot_pc_sdkJNI.FSFL_ClipMagZ_get());
  public final static SnapshotStatusFlag FSFL_ClipMagMask = new SnapshotStatusFlag("FSFL_ClipMagMask", movelladot_pc_sdkJNI.FSFL_ClipMagMask_get());
  public final static SnapshotStatusFlag FSFL_MagIsNew = new SnapshotStatusFlag("FSFL_MagIsNew", movelladot_pc_sdkJNI.FSFL_MagIsNew_get());
  public final static SnapshotStatusFlag FSFL_BaroIsNew = new SnapshotStatusFlag("FSFL_BaroIsNew", movelladot_pc_sdkJNI.FSFL_BaroIsNew_get());
  public final static SnapshotStatusFlag FSFL_RotationMask = new SnapshotStatusFlag("FSFL_RotationMask", movelladot_pc_sdkJNI.FSFL_RotationMask_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static SnapshotStatusFlag swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + SnapshotStatusFlag.class + " with value " + swigValue);
  }

  private SnapshotStatusFlag(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private SnapshotStatusFlag(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private SnapshotStatusFlag(String swigName, SnapshotStatusFlag swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static SnapshotStatusFlag[] swigValues = { FSFL_ClipAccX, FSFL_ClipAccY, FSFL_ClipAccZ, FSFL_ClipAccMask, FSFL_ClipGyrX, FSFL_ClipGyrY, FSFL_ClipGyrZ, FSFL_ClipGyrMask, FSFL_ClipMagX, FSFL_ClipMagY, FSFL_ClipMagZ, FSFL_ClipMagMask, FSFL_MagIsNew, FSFL_BaroIsNew, FSFL_RotationMask };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

