
//  Copyright (c) 2003-2023 Movella Technologies B.V. or subsidiaries worldwide.
//  All rights reserved.
//  
//  Redistribution and use in source and binary forms, with or without modification,
//  are permitted provided that the following conditions are met:
//  
//  1.	Redistributions of source code must retain the above copyright notice,
//  	this list of conditions and the following disclaimer.
//  
//  2.	Redistributions in binary form must reproduce the above copyright notice,
//  	this list of conditions and the following disclaimer in the documentation
//  	and/or other materials provided with the distribution.
//  
//  3.	Neither the names of the copyright holders nor the names of their contributors
//  	may be used to endorse or promote products derived from this software without
//  	specific prior written permission.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
//  THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
//  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY OR
//  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.movella.movelladot_pc_sdk;

public class XsDotUsbDevice {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected XsDotUsbDevice(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XsDotUsbDevice obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  public XsString productCode() {
    return new XsString(movelladot_pc_sdkJNI.XsDotUsbDevice_productCode(swigCPtr, this), true);
  }

  public XsString bluetoothAddress() {
    return new XsString(movelladot_pc_sdkJNI.XsDotUsbDevice_bluetoothAddress(swigCPtr, this), true);
  }

  public XsString deviceTagName() {
    return new XsString(movelladot_pc_sdkJNI.XsDotUsbDevice_deviceTagName(swigCPtr, this), true);
  }

  public long serialNumber() {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_serialNumber(swigCPtr, this);
  }

  public boolean eraseFlash() {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_eraseFlash(swigCPtr, this);
  }

  public int recordingCount() {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_recordingCount(swigCPtr, this);
  }

  public int usedFlashSizeTotal() {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_usedFlashSizeTotal(swigCPtr, this);
  }

  public XsRecordingInfo getRecordingInfo(int recordingIndex) {
    return new XsRecordingInfo(movelladot_pc_sdkJNI.XsDotUsbDevice_getRecordingInfo(swigCPtr, this, recordingIndex), true);
  }

  public boolean selectExportData(XsIntArray selectedDataFields) {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_selectExportData(swigCPtr, this, XsIntArray.getCPtr(selectedDataFields), selectedDataFields);
  }

  public boolean startExportRecording(int recordingIndex) {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_startExportRecording(swigCPtr, this, recordingIndex);
  }

  public boolean stopExportRecording() {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_stopExportRecording(swigCPtr, this);
  }

  public boolean enableLogging(XsString filename) {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_enableLogging(swigCPtr, this, XsString.getCPtr(filename), filename);
  }

  public boolean disableLogging() {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_disableLogging(swigCPtr, this);
  }

  public void setLogOptions(XsLogOptions options) {
    movelladot_pc_sdkJNI.XsDotUsbDevice_setLogOptions(swigCPtr, this, options.swigValue());
  }

  public XsString portName() {
    return new XsString(movelladot_pc_sdkJNI.XsDotUsbDevice_portName(swigCPtr, this), true);
  }

  public XsPortInfo portInfo() {
    return new XsPortInfo(movelladot_pc_sdkJNI.XsDotUsbDevice_portInfo(swigCPtr, this), true);
  }

  public XsDeviceId deviceId() {
    return new XsDeviceId(movelladot_pc_sdkJNI.XsDotUsbDevice_deviceId(swigCPtr, this), true);
  }

  public XsResultValue lastResult() {
    return XsResultValue.swigToEnum(movelladot_pc_sdkJNI.XsDotUsbDevice_lastResult(swigCPtr, this));
  }

  public XsString lastResultText() {
    return new XsString(movelladot_pc_sdkJNI.XsDotUsbDevice_lastResultText(swigCPtr, this), true);
  }

  public XsDeviceState deviceState() {
    return XsDeviceState.swigToEnum(movelladot_pc_sdkJNI.XsDotUsbDevice_deviceState(swigCPtr, this));
  }

  public XsVersion firmwareVersion() {
    return new XsVersion(movelladot_pc_sdkJNI.XsDotUsbDevice_firmwareVersion(swigCPtr, this), true);
  }

  public void addRef() {
    movelladot_pc_sdkJNI.XsDotUsbDevice_addRef(swigCPtr, this);
  }

  public void removeRef() {
    movelladot_pc_sdkJNI.XsDotUsbDevice_removeRef(swigCPtr, this);
  }

  public long refCounter() {
    return movelladot_pc_sdkJNI.XsDotUsbDevice_refCounter(swigCPtr, this);
  }

  public void clearXsDotCallbackHandlers(boolean chain) {
    movelladot_pc_sdkJNI.XsDotUsbDevice_clearXsDotCallbackHandlers__SWIG_0(swigCPtr, this, chain);
  }

  public void clearXsDotCallbackHandlers() {
    movelladot_pc_sdkJNI.XsDotUsbDevice_clearXsDotCallbackHandlers__SWIG_1(swigCPtr, this);
  }

}
