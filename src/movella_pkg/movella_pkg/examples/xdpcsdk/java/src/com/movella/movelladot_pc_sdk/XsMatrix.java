
//  Copyright (c) 2003-2023 Movella Technologies B.V. or subsidiaries worldwide.
//  All rights reserved.
//  
//  Redistribution and use in source and binary forms, with or without modification,
//  are permitted provided that the following conditions are met:
//  
//  1.	Redistributions of source code must retain the above copyright notice,
//  	this list of conditions and the following disclaimer.
//  
//  2.	Redistributions in binary form must reproduce the above copyright notice,
//  	this list of conditions and the following disclaimer in the documentation
//  	and/or other materials provided with the distribution.
//  
//  3.	Neither the names of the copyright holders nor the names of their contributors
//  	may be used to endorse or promote products derived from this software without
//  	specific prior written permission.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
//  THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
//  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY OR
//  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.movella.movelladot_pc_sdk;

public class XsMatrix {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected XsMatrix(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XsMatrix obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        movelladot_pc_sdkJNI.delete_XsMatrix(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public XsMatrix(long rows, long cols, long strde, SWIGTYPE_p_double dat) {
    this(movelladot_pc_sdkJNI.new_XsMatrix__SWIG_0(rows, cols, strde, SWIGTYPE_p_double.getCPtr(dat)), true);
  }

  public XsMatrix(long rows, long cols, long strde) {
    this(movelladot_pc_sdkJNI.new_XsMatrix__SWIG_1(rows, cols, strde), true);
  }

  public XsMatrix(long rows, long cols) {
    this(movelladot_pc_sdkJNI.new_XsMatrix__SWIG_2(rows, cols), true);
  }

  public XsMatrix(long rows) {
    this(movelladot_pc_sdkJNI.new_XsMatrix__SWIG_3(rows), true);
  }

  public XsMatrix() {
    this(movelladot_pc_sdkJNI.new_XsMatrix__SWIG_4(), true);
  }

  public XsMatrix(XsMatrix other) {
    this(movelladot_pc_sdkJNI.new_XsMatrix__SWIG_5(XsMatrix.getCPtr(other), other), true);
  }

  public XsMatrix(SWIGTYPE_p_double ref, long rows, long cols, long stride, XsDataFlags flags) {
    this(movelladot_pc_sdkJNI.new_XsMatrix__SWIG_6(SWIGTYPE_p_double.getCPtr(ref), rows, cols, stride, flags.swigValue()), true);
  }

  public XsMatrix(XsMatrix other, SWIGTYPE_p_double ref, long rows, long cols, long stride, XsDataFlags flags) {
    this(movelladot_pc_sdkJNI.new_XsMatrix__SWIG_7(XsMatrix.getCPtr(other), other, SWIGTYPE_p_double.getCPtr(ref), rows, cols, stride, flags.swigValue()), true);
  }

  public XsMatrix(XsQuaternion quat) {
    this(movelladot_pc_sdkJNI.new_XsMatrix__SWIG_8(XsQuaternion.getCPtr(quat), quat), true);
  }

  public void setSize(long rows, long cols, long stride) {
    movelladot_pc_sdkJNI.XsMatrix_setSize__SWIG_0(swigCPtr, this, rows, cols, stride);
  }

  public void setSize(long rows, long cols) {
    movelladot_pc_sdkJNI.XsMatrix_setSize__SWIG_1(swigCPtr, this, rows, cols);
  }

  public boolean empty() {
    return movelladot_pc_sdkJNI.XsMatrix_empty(swigCPtr, this);
  }

  public void setZero() {
    movelladot_pc_sdkJNI.XsMatrix_setZero(swigCPtr, this);
  }

  public long offset(long row, long column) {
    return movelladot_pc_sdkJNI.XsMatrix_offset(swigCPtr, this, row, column);
  }

  public double value(long row, long column) {
    return movelladot_pc_sdkJNI.XsMatrix_value(swigCPtr, this, row, column);
  }

  public void setValue(long row, long column, double value) {
    movelladot_pc_sdkJNI.XsMatrix_setValue(swigCPtr, this, row, column, value);
  }

  public XsMatrix fromQuaternion(XsQuaternion quat) {
    return new XsMatrix(movelladot_pc_sdkJNI.XsMatrix_fromQuaternion(swigCPtr, this, XsQuaternion.getCPtr(quat), quat), false);
  }

  public void zero() {
    movelladot_pc_sdkJNI.XsMatrix_zero(swigCPtr, this);
  }

  public long rows() {
    return movelladot_pc_sdkJNI.XsMatrix_rows(swigCPtr, this);
  }

  public long cols() {
    return movelladot_pc_sdkJNI.XsMatrix_cols(swigCPtr, this);
  }

  public long stride() {
    return movelladot_pc_sdkJNI.XsMatrix_stride(swigCPtr, this);
  }

  public SWIGTYPE_p_double data() {
    long cPtr = movelladot_pc_sdkJNI.XsMatrix_data(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public boolean isEqual(XsMatrix other, double tolerance) {
    return movelladot_pc_sdkJNI.XsMatrix_isEqual(swigCPtr, this, XsMatrix.getCPtr(other), other, tolerance);
  }

  public void swap(XsMatrix b) {
    movelladot_pc_sdkJNI.XsMatrix_swap(swigCPtr, this, XsMatrix.getCPtr(b), b);
  }

}
