
//  Copyright (c) 2003-2023 Movella Technologies B.V. or subsidiaries worldwide.
//  All rights reserved.
//  
//  Redistribution and use in source and binary forms, with or without modification,
//  are permitted provided that the following conditions are met:
//  
//  1.	Redistributions of source code must retain the above copyright notice,
//  	this list of conditions and the following disclaimer.
//  
//  2.	Redistributions in binary form must reproduce the above copyright notice,
//  	this list of conditions and the following disclaimer in the documentation
//  	and/or other materials provided with the distribution.
//  
//  3.	Neither the names of the copyright holders nor the names of their contributors
//  	may be used to endorse or promote products derived from this software without
//  	specific prior written permission.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
//  THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
//  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY OR
//  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.movella.movelladot_pc_sdk;

public class XsQuaternion {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected XsQuaternion(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XsQuaternion obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        movelladot_pc_sdkJNI.delete_XsQuaternion(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public XsQuaternion(double w_, double x_, double y_, double z_) {
    this(movelladot_pc_sdkJNI.new_XsQuaternion__SWIG_0(w_, x_, y_, z_), true);
  }

  public XsQuaternion(double w_, double x_, double y_) {
    this(movelladot_pc_sdkJNI.new_XsQuaternion__SWIG_1(w_, x_, y_), true);
  }

  public XsQuaternion(double w_, double x_) {
    this(movelladot_pc_sdkJNI.new_XsQuaternion__SWIG_2(w_, x_), true);
  }

  public XsQuaternion(double w_) {
    this(movelladot_pc_sdkJNI.new_XsQuaternion__SWIG_3(w_), true);
  }

  public XsQuaternion() {
    this(movelladot_pc_sdkJNI.new_XsQuaternion__SWIG_4(), true);
  }

  public XsQuaternion(double w_, double x_, double y_, double z_, boolean normalize_) {
    this(movelladot_pc_sdkJNI.new_XsQuaternion__SWIG_5(w_, x_, y_, z_, normalize_), true);
  }

  public XsQuaternion(XsQuaternion other) {
    this(movelladot_pc_sdkJNI.new_XsQuaternion__SWIG_6(XsQuaternion.getCPtr(other), other), true);
  }

  public XsQuaternion(XsEuler euler) {
    this(movelladot_pc_sdkJNI.new_XsQuaternion__SWIG_7(XsEuler.getCPtr(euler), euler), true);
  }

  public XsQuaternion(XsMatrix ori) {
    this(movelladot_pc_sdkJNI.new_XsQuaternion__SWIG_8(XsMatrix.getCPtr(ori), ori), true);
  }

  public void assign(double w_, double x_, double y_, double z_) {
    movelladot_pc_sdkJNI.XsQuaternion_assign__SWIG_0(swigCPtr, this, w_, x_, y_, z_);
  }

  public void assign(SWIGTYPE_p_double values) {
    movelladot_pc_sdkJNI.XsQuaternion_assign__SWIG_1(swigCPtr, this, SWIGTYPE_p_double.getCPtr(values));
  }

  public SWIGTYPE_p_double data() {
    long cPtr = movelladot_pc_sdkJNI.XsQuaternion_data(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public XsQuaternion inverse() {
    return new XsQuaternion(movelladot_pc_sdkJNI.XsQuaternion_inverse(swigCPtr, this), true);
  }

  public XsQuaternion conjugate() {
    return new XsQuaternion(movelladot_pc_sdkJNI.XsQuaternion_conjugate(swigCPtr, this), true);
  }

  public XsQuaternion normalized() {
    return new XsQuaternion(movelladot_pc_sdkJNI.XsQuaternion_normalized(swigCPtr, this), true);
  }

  public double normalize() {
    return movelladot_pc_sdkJNI.XsQuaternion_normalize(swigCPtr, this);
  }

  public boolean empty() {
    return movelladot_pc_sdkJNI.XsQuaternion_empty(swigCPtr, this);
  }

  public XsQuaternion fromEulerAngles(XsEuler src) {
    return new XsQuaternion(movelladot_pc_sdkJNI.XsQuaternion_fromEulerAngles(swigCPtr, this, XsEuler.getCPtr(src), src), false);
  }

  public XsQuaternion fromRotationMatrix(XsMatrix ori) {
    return new XsQuaternion(movelladot_pc_sdkJNI.XsQuaternion_fromRotationMatrix(swigCPtr, this, XsMatrix.getCPtr(ori), ori), false);
  }

  public static XsQuaternion identity() {
    return new XsQuaternion(movelladot_pc_sdkJNI.XsQuaternion_identity(), false);
  }

  public void multiply(XsQuaternion a, XsQuaternion b) {
    movelladot_pc_sdkJNI.XsQuaternion_multiply(swigCPtr, this, XsQuaternion.getCPtr(a), a, XsQuaternion.getCPtr(b), b);
  }

  public double w() {
    return movelladot_pc_sdkJNI.XsQuaternion_w__SWIG_0(swigCPtr, this);
  }

  public double x() {
    return movelladot_pc_sdkJNI.XsQuaternion_x__SWIG_0(swigCPtr, this);
  }

  public double y() {
    return movelladot_pc_sdkJNI.XsQuaternion_y__SWIG_0(swigCPtr, this);
  }

  public double z() {
    return movelladot_pc_sdkJNI.XsQuaternion_z__SWIG_0(swigCPtr, this);
  }

  public void swap(XsQuaternion other) {
    movelladot_pc_sdkJNI.XsQuaternion_swap(swigCPtr, this, XsQuaternion.getCPtr(other), other);
  }

  public boolean isEqual(XsQuaternion other, double tolerance) {
    return movelladot_pc_sdkJNI.XsQuaternion_isEqual(swigCPtr, this, XsQuaternion.getCPtr(other), other, tolerance);
  }

  public double dotProduct(XsQuaternion other) {
    return movelladot_pc_sdkJNI.XsQuaternion_dotProduct(swigCPtr, this, XsQuaternion.getCPtr(other), other);
  }

}
